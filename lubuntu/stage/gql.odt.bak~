<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="3029" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.2" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:fr-FR; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Sun Jan 12 22:04:11 2020
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.date">2020-01-11T17:06:53.753875256</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
<t  s="styles.xml"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/odf#StylesFile</t>
<t  s="content.xml"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/odf#ContentFile</t>
<t  s="manifest.rdf"  p="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#hasPart"  objecttype="1"  xsdtype=""  >styles.xml</t>
<t  s="manifest.rdf"  p="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#hasPart"  objecttype="1"  xsdtype=""  >content.xml</t>
<t  s="manifest.rdf"  p="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"  objecttype="1"  xsdtype=""  >http://docs.oasis-open.org/ns/office/1.2/meta/pkg#Document</t>
</rdf>
<styles>
<s type="P" name="Normal" props="default-tab-interval:1.251cm"/>
<s type="P" name="Preformatted Text" basedon="Normal" followedby="Preformatted Text" props="margin-top:0cm; font-size:10pt; margin-bottom:0cm; font-family:Liberation Mono"/>
<s type="P" name="Text body" basedon="Normal" followedby="Text body" props="margin-top:0cm; line-height:1.150000; margin-bottom:0.247cm"/>
<s type="C" name="Source Text_text_text_text_text_text" followedby="Source Text_text_text_text_text_text" props="font-family:Liberation Mono"/>
<s type="P" name="Plain Text" basedon="Normal" followedby="Plain Text" props="font-family:Courier New"/>
<s type="P" name="Caption" basedon="Normal" followedby="Caption" props="margin-top:0.212cm; font-size:12pt; margin-bottom:0.212cm; font-style:italic"/>
<s type="P" name="Contents 1" basedon="Normal" followedby="Normal" props="text-indent:-0.300000in; margin-left:0.500000in"/>
<s type="P" name="Contents 2" basedon="Normal" followedby="Normal" props="text-indent:-0.300000in; margin-left:1.000000in"/>
<s type="P" name="Contents 3" basedon="Normal" followedby="Normal" props="text-indent:-0.300000in; margin-left:1.500000in"/>
<s type="P" name="Contents 4" basedon="Normal" followedby="Normal" props="text-indent:-0.300000in; margin-left:2.000000in"/>
<s type="P" name="Heading" basedon="Normal" followedby="Text body" props="margin-top:0.423cm; keep-with-next:yes; margin-bottom:0.212cm; font-family:Liberation Sans; font-size:14pt"/>
<s type="P" name="Heading 1" basedon="Heading" followedby="Text body" props="margin-top:0.423cm; font-size:24pt; margin-bottom:0.212cm; font-family:Liberation Serif; font-weight:bold"/>
<s type="P" name="Heading 2" basedon="Heading" followedby="Text body" props="margin-top:0.353cm; font-size:18pt; margin-bottom:0.212cm; font-family:Liberation Serif; font-weight:bold"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="8.267717" height="11.692913" units="in" page-scale="1.000000"/>
<section xid="19" props="page-margin-right:2cm; page-width:210.000000mm; page-margin-left:2cm; page-orientation:portrait; page-margin-bottom:2cm; page-margin-top:2cm; page-height:297.000000mm">
<p xid="20"><pbr/></p>
<p props="" xid="21"><c></c></p>
<p style="Normal" xid="22"><c></c></p>
<p style="Normal" xid="23"><c></c></p>
<p style="Normal" xid="24"><c></c></p>
<p style="Normal" xid="25"><c></c></p>
<p style="Normal" xid="26">Tutoriel de base - Introduction</p>
<p style="Normal" xid="27"><c></c></p>
<p style="Normal" xid="28">GraphQL est une nouvelle norme API qui fournit une alternative plus efficace, puissante et flexible √† REST. Il a √©t√© d√©velopp√© et open-source par Facebook et est maintenant maintenu par une grande communaut√© d'entreprises et de particuliers du monde entier.</p>
<p style="Normal" xid="29"><c></c></p>
<p style="Normal" xid="30">Les API sont devenues des composants omnipr√©sents des infrastructures logicielles. En bref, une API d√©finit comment un client peut charger des donn√©es √† partir d'un serveur.</p>
<p style="Normal" xid="31"><c></c></p>
<p style="Normal" xid="32">√Ä sa base, GraphQL permet la r√©cup√©ration de donn√©es d√©clarative o√π un client peut sp√©cifier exactement les donn√©es dont il a besoin √† partir d'une API. Au lieu de plusieurs points de terminaison qui renvoient des structures de donn√©es fixes, un serveur GraphQL expose uniquement un seul point de terminaison et r√©pond avec pr√©cision les donn√©es demand√©es par un client.</p>
<p style="Normal" xid="33"><c></c></p>
<p style="Normal" xid="34"><c></c></p>
<p style="Normal" xid="35">GraphQL - Un langage de requ√™te pour les API</p>
<p style="Normal" xid="36"><c></c></p>
<p style="Normal" xid="37">La plupart des applications ont aujourd'hui besoin de r√©cup√©rer des donn√©es √† partir d'un serveur o√π ces donn√©es sont stock√©es dans une base de donn√©es. Il est de la responsabilit√© de l'API de fournir une interface aux donn√©es stock√©es qui correspond aux besoins d'une application.</p>
<p style="Normal" xid="38"><c></c></p>
<p style="Normal" xid="39">GraphQL est souvent confondu avec une technologie de base de donn√©es. C'est une id√©e fausse, GraphQL est un langage de requ√™te pour les API - pas les bases de donn√©es. En ce sens, il est ind√©pendant de la base de donn√©es et peut √™tre utilis√© efficacement dans n'importe quel contexte o√π une API est utilis√©e.</p>
<p style="Normal" xid="40"><c></c></p>
<p style="Normal" xid="41">Une alternative plus efficace au REST</p>
<p style="Normal" xid="42"><c></c></p>
<p style="Normal" xid="43">üí° En savoir plus sur les principales raisons d'utiliser GraphQL dans ce billet de blog.</p>
<p style="Normal" xid="44"><c></c></p>
<p style="Normal" xid="45">REST est un moyen populaire d'exposer les donn√©es d'un serveur. Lorsque le concept de REST a √©t√© d√©velopp√©, les applications clientes √©taient relativement simples et le rythme de d√©veloppement n‚Äô√©tait pas √† la hauteur de ce qu‚Äôil est aujourd‚Äôhui. REST √©tait donc un bon choix pour de nombreuses applications. Cependant, le paysage des API a radicalement chang√© au cours des deux derni√®res ann√©es. En particulier, trois facteurs ont remis en question la conception des API:</p>
<p style="Normal" xid="46">1. L'utilisation accrue des mobiles cr√©e le besoin d'un chargement efficace des donn√©es</p>
<p style="Normal" xid="47"><c></c></p>
<p style="Normal" xid="48">Une utilisation mobile accrue, des appareils de faible puissance et des r√©seaux b√¢cl√©s ont √©t√© les premi√®res raisons pour lesquelles Facebook a d√©velopp√© GraphQL. GraphQL minimise la quantit√© de donn√©es √† transf√©rer sur le r√©seau et am√©liore ainsi consid√©rablement les applications fonctionnant dans ces conditions.</p>
<p style="Normal" xid="49">2. Vari√©t√© de diff√©rents frameworks et plateformes frontaux</p>
<p style="Normal" xid="50"><c></c></p>
<p style="Normal" xid="51">Le paysage h√©t√©rog√®ne des frameworks et plates-formes frontaux qui ex√©cutent les applications client rend difficile la cr√©ation et la maintenance d'une API qui r√©pondrait aux exigences de tous. Avec GraphQL, chaque client peut acc√©der pr√©cis√©ment aux donn√©es dont il a besoin.</p>
<p style="Normal" xid="52">3. D√©veloppement rapide et attente d'un d√©veloppement rapide des fonctionnalit√©s</p>
<p style="Normal" xid="53"><c></c></p>
<p style="Normal" xid="54">Le d√©ploiement continu est devenu un standard pour de nombreuses entreprises, des it√©rations rapides et des mises √† jour fr√©quentes des produits sont indispensables. Avec les API REST, la fa√ßon dont les donn√©es sont expos√©es par le serveur doit souvent √™tre modifi√©e pour tenir compte des exigences sp√©cifiques et des modifications de conception c√¥t√© client. Cela entrave les pratiques de d√©veloppement rapide et les it√©rations de produits.</p>
<p style="Normal" xid="55"><c></c></p>
<p style="Normal" xid="56"><c></c></p>
<p style="Normal" xid="57">Histoire, contexte et adoption</p>
<p style="Normal" xid="58">GraphQL n'est pas seulement pour les d√©veloppeurs React</p>
<p style="Normal" xid="59"><c></c></p>
<p style="Normal" xid="60">Facebook a commenc√© √† utiliser GraphQL en 2012 dans ses applications mobiles natives. Fait int√©ressant, GraphQL a √©t√© principalement choisi pour √™tre utilis√© dans le contexte des technologies Web et n'a gagn√© que peu de traction dans l'espace mobile natif.</p>
<p style="Normal" xid="61"><c></c></p>
<p style="Normal" xid="62">La premi√®re fois que Facebook a parl√© publiquement de GraphQL, c'√©tait √† React.js Conf 2015 et peu de temps apr√®s, a annonc√© son intention de l'ouvrir. Parce que Facebook parlait toujours de GraphQL dans le contexte de React, il a fallu un certain temps aux d√©veloppeurs non React pour comprendre que GraphQL n'√©tait en aucun cas une technologie limit√©e √† l'utilisation avec React.</p>
<p style="Normal" xid="63"><c></c></p>
<p style="Normal" xid="64"><c></c></p>
<p style="Normal" xid="65">GraphQL est le meilleur REST</p>
<p style="Normal" xid="66"><c></c></p>
<p style="Normal" xid="67">Au cours de la derni√®re d√©cennie, REST est devenu la norme (encore floue) pour la conception d'API Web. Il propose d'excellentes id√©es, telles que des serveurs sans √©tat et un acc√®s structur√© aux ressources. Cependant, les API REST se sont r√©v√©l√©es trop rigides pour suivre les exigences en constante √©volution des clients qui y acc√®dent.</p>
<p style="Normal" xid="68"><c></c></p>
<p style="Normal" xid="69">GraphQL a √©t√© d√©velopp√© pour faire face au besoin de plus de flexibilit√© et d'efficacit√©! Il r√©sout bon nombre des lacunes et des inefficacit√©s rencontr√©es par les d√©veloppeurs lorsqu'ils interagissent avec les API REST.</p>
<p style="Normal" xid="70"><c></c></p>
<p style="Normal" xid="71">Pour illustrer les principales diff√©rences entre REST et GraphQL lorsqu'il s'agit de r√©cup√©rer des donn√©es √† partir d'une API, consid√©rons un exemple de sc√©nario simple: dans une application de blog, une application doit afficher les titres des publications d'un utilisateur sp√©cifique. Le m√™me √©cran affiche √©galement les noms des 3 derniers abonn√©s de cet utilisateur. Comment cette situation pourrait-elle √™tre r√©solue avec REST et GraphQL?</p>
<p style="Normal" xid="72"><c></c></p>
<p style="Normal" xid="73">üí° Consultez cet article pour en savoir plus sur les raisons pour lesquelles les d√©veloppeurs aiment GraphQL.</p>
<p style="Normal" xid="74"><c></c></p>
<p style="Normal" xid="75"><c></c></p>
<p style="Normal" xid="76"><c></c></p>
<p style="Normal" xid="77">Avec une API REST, vous collectez g√©n√©ralement les donn√©es en acc√©dant √† plusieurs points de terminaison. Dans l'exemple, il peut s'agir du point de terminaison / users / &lt;id&gt; pour r√©cup√©rer les donn√©es utilisateur initiales. Deuxi√®mement, il est probable qu'un point de terminaison / users / &lt;id&gt; / posts renvoie tous les messages d'un utilisateur. Le troisi√®me point de terminaison sera alors / users / &lt;id&gt; / followers qui renvoie une liste de followers par utilisateur.</p>
<p style="Normal" xid="78"><c></c></p>
<p style="Normal" xid="79"><c></c></p>
<p style="Normal" xid="80"><c></c></p>
<p style="Normal" xid="81"><c></c></p>
<p style="Normal" xid="82"><image dataid="0" xid="83" props="height:5.4750in; width:6.6924in"/></p>
<p style="Normal" xid="84"><c></c></p>
<p style="Normal" xid="85"><c></c></p>
<p style="Normal" xid="86"><c></c></p>
<p style="Normal" xid="87">Avec REST, vous devez faire trois demandes √† diff√©rents points de terminaison pour r√©cup√©rer les donn√©es requises. Vous effectuez √©galement une r√©cup√©ration excessive, car les points de terminaison renvoient des informations suppl√©mentaires qui ne sont pas n√©cessaires.</p>
<p style="Normal" xid="88"><c></c></p>
<p style="Normal" xid="89">Dans GraphQL, en revanche, vous envoyez simplement une seule requ√™te au serveur GraphQL qui inclut les exigences de donn√©es concr√®tes. Le serveur r√©pond ensuite avec un objet JSON o√π ces exigences sont remplies.</p>
<p style="Normal" xid="90"><c></c></p>
<p style="Normal" xid="91"><c></c></p>
<p style="Normal" xid="92"><c></c></p>
<p style="Normal" xid="93"><image dataid="1" xid="94" props="height:3.1542in; width:6.5250in"/></p>
<p style="Normal" xid="95"><c></c></p>
<p style="Normal" xid="96"><c></c></p>
</section>
<section xid="97" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="98"><c></c></p>
</section>
<section xid="99" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="100" props="margin-top:0cm; font-size:13pt; dom-dir:ltr; margin-bottom:0.499cm; lang:fr-FR; text-align:left; font-family:Liberation Serif"><bookmark type="start" name="tw-target-text" xid="101"/><bookmark type="end" name="tw-target-text" xid="102"/>√Ä l'aide de GraphQL, le client peut sp√©cifier exactement les donn√©es dont il a besoin dans une requ√™te. Notez que la structure de la r√©ponse du serveur suit pr√©cis√©ment la structure imbriqu√©e d√©finie dans la requ√™te.</p>
</section>
<section xid="103" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="104"><bookmark type="start" name="tw-target-rmn" xid="105"/><bookmark type="end" name="tw-target-rmn" xid="106"/></p>
</section>
<section xid="107" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Normal" xid="108"><c></c></p>
<p style="Preformatted Text" xid="109" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text1" xid="110"/><bookmark type="end" name="tw-target-text1" xid="111"/>Plus de sur- et de sous-extraction</p>
<p style="Preformatted Text" xid="112" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="113" props="text-align:left; lang:fr-FR; dom-dir:ltr">L'un des probl√®mes les plus courants avec REST est celui de la surexploitation et de la sous-extraction. Cela se produit car le seul moyen pour un client de t√©l√©charger des donn√©es consiste √† atteindre les points de terminaison qui renvoient des structures de donn√©es fixes. Il est tr√®s difficile de concevoir l'API de mani√®re √† pouvoir fournir aux clients leurs besoins exacts en donn√©es.</p>
<p style="Preformatted Text" xid="114" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="115" props="text-align:left; dom-dir:ltr">¬†¬†¬†¬†<c props="lang:fr-FR">¬´Pensez aux graphiques, pas aux points de terminaison.¬ª Le√ßons tir√©es de 4 ans de GraphQL par Lee Byron, co-inventeur de GraphQL.</c></p>
<p style="Preformatted Text" xid="116" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="117" props="text-align:left; lang:fr-FR; dom-dir:ltr">Surmenage: t√©l√©chargement de donn√©es superflues</p>
<p style="Preformatted Text" xid="118" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="119" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">La r√©cup√©ration excessive signifie qu'un client t√©l√©charge plus d'informations que ce qui est r√©ellement requis dans l'application. Imaginez par exemple un √©cran qui doit afficher une liste d'utilisateurs uniquement avec leurs noms. Dans une API REST, cette application atteindrait g√©n√©ralement le point de terminaison / users et recevrait un tableau JSON avec des donn√©es utilisateur. Cette r√©ponse peut cependant contenir plus d'informations sur les utilisateurs renvoy√©s, par exemple leurs anniversaires ou adresses - des informations inutiles pour le client car elles n'ont besoin que d'afficher les noms des utilisateurs.</p>
<p style="Normal" xid="120"><c></c></p>
<p style="Preformatted Text" xid="121" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container" xid="122"/><bookmark type="end" name="tw-target-text-container" xid="123"/><bookmark type="start" name="tw-target-text2" xid="124"/><bookmark type="end" name="tw-target-text2" xid="125"/>Sous-r√©cup√©ration et le probl√®me n + 1</p>
</section>
<section xid="126" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="127" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="128" props="text-align:left; lang:fr-FR; dom-dir:ltr">Un autre probl√®me est la sous-extraction et le probl√®me des demandes n + 1. La sous-extraction signifie g√©n√©ralement qu'un point de terminaison sp√©cifique ne fournit pas suffisamment d'informations requises. Le client devra faire des demandes suppl√©mentaires pour r√©cup√©rer tout ce dont il a besoin. Cela peut d√©g√©n√©rer en une situation o√π un client doit d'abord t√©l√©charger une liste d'√©l√©ments, mais doit ensuite faire une demande suppl√©mentaire par √©l√©ment pour r√©cup√©rer les donn√©es requises.</p>
<p style="Preformatted Text" xid="129" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="130" props="text-align:left; lang:fr-FR; dom-dir:ltr">√Ä titre d'exemple, consid√©rons que la m√™me application devrait √©galement afficher les trois derniers abonn√©s par utilisateur. L'API fournit le point de terminaison / users / &lt;user-id&gt; / followers suppl√©mentaire. Afin d'√™tre en mesure d'afficher les informations requises, l'application devra faire une demande au point de terminaison / users puis frapper le point de terminaison / users / &lt;user-id&gt; / followers pour chaque utilisateur.</p>
<p style="Preformatted Text" xid="131" props="text-align:left; lang:fr-FR; dom-dir:ltr">It√©rations rapides des produits sur le frontend</p>
<p style="Preformatted Text" xid="132" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="133" props="text-align:left; lang:fr-FR; dom-dir:ltr">Un mod√®le courant avec les API REST consiste √† structurer les points de terminaison en fonction des vues que vous avez √† l'int√©rieur de votre application. Ceci est pratique car il permet au client d'obtenir toutes les informations requises pour une vue particuli√®re en acc√©dant simplement au point de terminaison correspondant.</p>
<p style="Preformatted Text" xid="134" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="135" props="text-align:left; lang:fr-FR; dom-dir:ltr">L'inconv√©nient majeur de cette approche est qu'elle ne permet pas des it√©rations rapides sur le frontend. Avec chaque modification apport√©e √† l'interface utilisateur, il existe un risque √©lev√© que davantage (ou moins) de donn√©es soient n√©cessaires (auparavant). Par cons√©quent, le backend doit √©galement √™tre ajust√© pour tenir compte des nouveaux besoins en donn√©es. Cela tue la productivit√© et ralentit notamment la capacit√© d'int√©grer les commentaires des utilisateurs dans un produit.</p>
<p style="Preformatted Text" xid="136" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="137" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Avec GraphQL, ce probl√®me est r√©solu. Gr√¢ce √† la nature flexible de GraphQL, les modifications c√¥t√© client peuvent √™tre effectu√©es sans travail suppl√©mentaire sur le serveur. √âtant donn√© que les clients peuvent sp√©cifier leurs besoins exacts en donn√©es, aucun ing√©nieur backend n'a besoin de faire des ajustements lorsque la conception et les donn√©es doivent changer sur le frontend.</p>
</section>
<section xid="138" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="139"><bookmark type="start" name="z6maec" xid="140"/><bookmark type="end" name="z6maec" xid="141"/><bookmark type="start" name="tw-target-rmn1" xid="142"/><bookmark type="end" name="tw-target-rmn1" xid="143"/></p>
</section>
<section xid="144" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Normal" xid="145"><c></c></p>
<p style="Normal" xid="146"><c></c></p>
<p style="Normal" xid="147"><c></c></p>
<p style="Normal" xid="148"><c></c></p>
<p style="Normal" xid="149"><c></c></p>
<p style="Preformatted Text" xid="150" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text3" xid="151"/><bookmark type="end" name="tw-target-text3" xid="152"/>Analytique perspicace sur le backend</p>
<p style="Preformatted Text" xid="153" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="154" props="text-align:left; lang:fr-FR; dom-dir:ltr">GraphQL vous permet d'avoir des informations pr√©cises sur les donn√©es demand√©es sur le backend. Comme chaque client sp√©cifie exactement les informations qui l'int√©ressent, il est possible d'acqu√©rir une compr√©hension approfondie de la fa√ßon dont les donn√©es disponibles sont utilis√©es. Cela peut par exemple aider √† faire √©voluer une API et √† d√©pr√©cier des champs sp√©cifiques qui ne sont plus demand√©s par les clients.</p>
<p style="Preformatted Text" xid="155" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="156" props="text-align:left; lang:fr-FR; dom-dir:ltr">Avec GraphQL, vous pouvez √©galement effectuer une surveillance de bas niveau des performances des requ√™tes trait√©es par votre serveur. GraphQL utilise le concept de fonctions r√©solveur pour collecter les donn√©es demand√©es par un client. L'instrumentation et la mesure des performances de ces r√©solveurs fournissent des informations cruciales sur les goulots d'√©tranglement dans votre syst√®me.</p>
<p style="Preformatted Text" xid="157" props="text-align:left; lang:fr-FR; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="158" props="text-align:left; lang:fr-FR; dom-dir:ltr">Avantages d'un syst√®me de sch√©ma et de type</p>
<p style="Preformatted Text" xid="159" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="160" props="text-align:left; lang:fr-FR; dom-dir:ltr">GraphQL utilise un syst√®me de type fort pour d√©finir les capacit√©s d'une API. Tous les types expos√©s dans une API sont consign√©s dans un sch√©ma √† l'aide du langage de d√©finition de sch√©ma GraphQL (SDL). Ce sch√©ma sert de contrat entre le client et le serveur pour d√©finir comment un client peut acc√©der aux donn√©es.</p>
<p style="Preformatted Text" xid="161" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="162" props="text-align:left; lang:fr-FR; dom-dir:ltr">Une fois le sch√©ma d√©fini, les √©quipes travaillant sur le frontend et les backends peuvent faire leur travail sans autre communication, car elles sont toutes deux conscientes de la structure d√©finie des donn√©es envoy√©es sur le r√©seau.</p>
<p style="Preformatted Text" xid="163" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="164" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Les √©quipes frontales peuvent facilement tester leurs applications en se moquant des structures de donn√©es requises. Une fois le serveur pr√™t, le commutateur peut √™tre bascul√© pour que les applications clientes chargent les donn√©es √† partir de l'API r√©elle.</p>
<p style="Preformatted Text" xid="165" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="166" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="167" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="168" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container1" xid="169"/><bookmark type="end" name="tw-target-text-container1" xid="170"/><bookmark type="start" name="tw-target-text4" xid="171"/><bookmark type="end" name="tw-target-text4" xid="172"/>Concepts de base</p>
</section>
<section xid="173" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="174" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="175" props="text-align:left; lang:fr-FR; dom-dir:ltr">Dans ce chapitre, vous d√©couvrirez certaines constructions de langage fondamentales de GraphQL. Cela inclut un premier aper√ßu de la syntaxe pour d√©finir les types ainsi que pour envoyer des requ√™tes et des mutations. Nous avons √©galement pr√©par√© pour vous un environnement de bac √† sable, bas√© sur graphql-up, que vous pouvez utiliser pour exp√©rimenter ce que vous apprenez.</p>
<p style="Preformatted Text" xid="176" props="text-align:left; lang:fr-FR; dom-dir:ltr">Le langage de d√©finition de sch√©ma (SDL)</p>
<p style="Preformatted Text" xid="177" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="178" props="text-align:left; lang:fr-FR; dom-dir:ltr">GraphQL poss√®de son propre syst√®me de type utilis√© pour d√©finir le sch√©ma d'une API. La syntaxe d'√©criture des sch√©mas est appel√©e langage de d√©finition de sch√©ma (SDL).</p>
<p style="Preformatted Text" xid="179" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="180" props="text-align:left; lang:fr-FR; dom-dir:ltr">Voici un exemple d'utilisation du SDL pour d√©finir un type simple appel√© Personne:</p>
<p style="Preformatted Text" xid="181" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="182" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Personne {</p>
<p style="Preformatted Text" xid="183" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">nom: String!</c></p>
<p style="Preformatted Text" xid="184" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">√¢ge: Int!</c></p>
<p style="Preformatted Text" xid="185" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">}</p>
</section>
<section xid="186" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="187"><bookmark type="start" name="z6maec1" xid="188"/><bookmark type="end" name="z6maec1" xid="189"/><bookmark type="start" name="tw-target-rmn2" xid="190"/><bookmark type="end" name="tw-target-rmn2" xid="191"/></p>
</section>
<section xid="192" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Preformatted Text" xid="193" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container2" xid="194"/><bookmark type="end" name="tw-target-text-container2" xid="195"/><bookmark type="start" name="tw-target-text5" xid="196"/><bookmark type="end" name="tw-target-text5" xid="197"/>Ce type a deux champs, ils sont appel√©s nom et √¢ge et sont respectivement de type String et Int. Le ! suivre le type signifie que ce champ est obligatoire.</p>
</section>
<section xid="198" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="199" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="200" props="text-align:left; lang:fr-FR; dom-dir:ltr">Il est √©galement possible d'exprimer des relations entre les types. Dans l'exemple d'une application de blog, une personne peut √™tre associ√©e √† un message:</p>
<p style="Preformatted Text" xid="201" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="202" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Post {</p>
<p style="Preformatted Text" xid="203" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">titre: String!</c></p>
<p style="Preformatted Text" xid="204" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">auteur: Personne!</c></p>
<p style="Preformatted Text" xid="205" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="206" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="207" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Inversement, l'autre extr√©mit√© de la relation doit √™tre plac√©e sur le type de personne:</p>
</section>
<section xid="208" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="209"><bookmark type="start" name="z6maec2" xid="210"/><bookmark type="end" name="z6maec2" xid="211"/><bookmark type="start" name="tw-target-rmn3" xid="212"/><bookmark type="end" name="tw-target-rmn3" xid="213"/></p>
</section>
<section xid="214" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Preformatted Text" xid="215" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text6" xid="216"/><bookmark type="end" name="tw-target-text6" xid="217"/>type Personne {</p>
<p style="Preformatted Text" xid="218" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">nom: String!</c></p>
<p style="Preformatted Text" xid="219" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">√¢ge: Int!</c></p>
<p style="Preformatted Text" xid="220" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">messages: [Post!]!</c></p>
<p style="Preformatted Text" xid="221" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="222" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="223" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Notez que nous venons de cr√©er une relation un-√†-plusieurs entre la personne et la publication, car le champ des publications sur la personne est en fait un tableau de publications.</p>
<p style="Normal" xid="224"><bookmark type="start" name="tw-target" xid="225"/><bookmark type="end" name="tw-target" xid="226"/></p>
</section>
<section xid="227" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="228"><bookmark type="start" name="kAz1tf" xid="229"/><bookmark type="end" name="kAz1tf" xid="230"/></p>
<p style="Normal" xid="231"><c></c></p>
</section>
<section xid="232" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="233" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container3" xid="234"/><bookmark type="end" name="tw-target-text-container3" xid="235"/><bookmark type="start" name="tw-target-text7" xid="236"/><bookmark type="end" name="tw-target-text7" xid="237"/>R√©cup√©ration de donn√©es avec des requ√™tes</p>
<p style="Preformatted Text" xid="238" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="239" props="text-align:left; lang:fr-FR; dom-dir:ltr">Lorsque vous travaillez avec des API REST, les donn√©es sont charg√©es √† partir de points de terminaison sp√©cifiques. Chaque point de terminaison a une structure clairement d√©finie des informations qu'il renvoie. Cela signifie que les exigences de donn√©es d'un client sont effectivement encod√©es dans l'URL √† laquelle il se connecte.</p>
<p style="Preformatted Text" xid="240" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="241" props="text-align:left; lang:fr-FR; dom-dir:ltr">L'approche adopt√©e dans GraphQL est radicalement diff√©rente. Au lieu d'avoir plusieurs points de terminaison qui renvoient des structures de donn√©es fixes, les API GraphQL n'exposent g√©n√©ralement qu'un seul point de terminaison. Cela fonctionne car la structure des donn√©es renvoy√©es n'est pas fixe. Au lieu de cela, il est compl√®tement flexible et permet au client de d√©cider quelles donn√©es sont r√©ellement n√©cessaires.</p>
<p style="Preformatted Text" xid="242" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="243" props="text-align:left; lang:fr-FR; dom-dir:ltr">Cela signifie que le client doit envoyer plus d'informations au serveur pour exprimer ses besoins en donn√©es - ces informations sont appel√©es une requ√™te.</p>
<p style="Preformatted Text" xid="244" props="text-align:left; lang:fr-FR; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="245" props="text-align:left; lang:fr-FR; dom-dir:ltr"><c props="lang:fr-FR; font-size:12pt; font-weight:normal; font-family:Liberation Serif; color:#000000">{</c></p>
<p style="Normal" xid="246" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">allPersons {</c></p>
<p style="Normal" xid="247" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">name , age</c></p>
<p style="Normal" xid="248" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">}</c></p>
<p style="Normal" xid="249" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">}</c></p>
<p style="Normal" xid="250" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="251" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Preformatted Text" xid="252" props="margin-top:0cm; font-size:12pt; dom-dir:ltr; margin-bottom:0.499cm; lang:fr-FR; font-weight:normal; color:#000000; text-align:left; font-family:Liberation Serif">Requ√™tes de base</p>
</section>
<section xid="253" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Normal" xid="254"><c></c></p>
<p style="Preformatted Text" xid="255" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text8" xid="256"/><bookmark type="end" name="tw-target-text8" xid="257"/>Le champ allPersons dans cette requ√™te est appel√© la root fields de la requ√™te. Tout ce qui suit la root field est appel√© le playload de la requ√™te. Le seul champ sp√©cifi√© dans le playload de cette requ√™te est le nom.</p>
<p style="Preformatted Text" xid="258" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="259" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Cette requ√™te retournerait une liste de toutes les personnes actuellement stock√©es dans la base de donn√©es. Voici un exemple de r√©ponse:</p>
<p style="Preformatted Text" xid="260"><c style="Source Text_text_text_text_text_text">{</c></p>
<p style="Preformatted Text" xid="261"><c style="Source Text_text_text_text_text_text">"allPersons": [</c></p>
<p style="Preformatted Text" xid="262"><c style="Source Text_text_text_text_text_text">{ "name": "Johnny" },</c></p>
<p style="Preformatted Text" xid="263"><c style="Source Text_text_text_text_text_text">{ "name": "Sarah" },</c></p>
<p style="Preformatted Text" xid="264"><c style="Source Text_text_text_text_text_text">{ "name": "Alice" }</c></p>
<p style="Preformatted Text" xid="265"><c style="Source Text_text_text_text_text_text">]</c></p>
<p style="Preformatted Text" xid="266" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">}</c></p>
</section>
<section xid="267" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="268"><bookmark type="start" name="kAz1tf1" xid="269"/><bookmark type="end" name="kAz1tf1" xid="270"/></p>
</section>
<section xid="271" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="272" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container4" xid="273"/><bookmark type="end" name="tw-target-text-container4" xid="274"/><bookmark type="start" name="tw-target-text9" xid="275"/><bookmark type="end" name="tw-target-text9" xid="276"/>Notez que chaque personne n'a que le nom dans la r√©ponse, mais l'√¢ge n'est pas retourn√© par le serveur. C'est exactement parce que le nom √©tait le seul champ sp√©cifi√© dans la requ√™te.</p>
<p style="Preformatted Text" xid="277" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="278" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Si le client a √©galement besoin de l'√¢ge de la personne, il suffit d'ajuster l√©g√®rement la requ√™te et d'inclure le nouveau champ dans la charge utile de la requ√™te:</p>
<p style="Preformatted Text" xid="279" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">{ allPersons </p>
<p style="Preformatted Text" xid="280" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">{  name</p>
<p style="Preformatted Text" xid="281" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">age   }</p>
<p style="Preformatted Text" xid="282" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">}</p>
</section>
<section xid="283" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="284"><bookmark type="start" name="z6maec3" xid="285"/><bookmark type="end" name="z6maec3" xid="286"/><bookmark type="start" name="tw-target-rmn4" xid="287"/><bookmark type="end" name="tw-target-rmn4" xid="288"/></p>
</section>
<section xid="289" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Normal" xid="290"><c></c></p>
<p style="Normal" xid="291"><bookmark type="start" name="tw-cst" xid="292"/><bookmark type="end" name="tw-cst" xid="293"/></p>
</section>
<section xid="294" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="295"><bookmark type="start" name="tw-target2" xid="296"/><bookmark type="end" name="tw-target2" xid="297"/></p>
</section>
<section xid="298" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="299"><bookmark type="start" name="kAz1tf2" xid="300"/><bookmark type="end" name="kAz1tf2" xid="301"/></p>
</section>
<section xid="302" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="303" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container5" xid="304"/><bookmark type="end" name="tw-target-text-container5" xid="305"/><bookmark type="start" name="tw-target-text10" xid="306"/><bookmark type="end" name="tw-target-text10" xid="307"/>L'un des principaux avantages de GraphQL est qu'il permet d'interroger naturellement des informations imbriqu√©es. Par exemple, si vous souhaitez charger tous les articles qu'une personne a √©crits, vous pouvez simplement suivre la structure de vos types pour demander ces informations:</p>
</section>
<section xid="308" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Normal" xid="309">{</p>
<p style="Normal" xid="310">allPersons {</p>
<p style="Normal" xid="311">name</p>
<p style="Normal" xid="312">age</p>
<p style="Normal" xid="313">posts {</p>
<p style="Normal" xid="314">  title</p>
<p style="Normal" xid="315">}</p>
<p style="Normal" xid="316">}</p>
<p style="Normal" xid="317">}</p>
<p style="Normal" xid="318"><c></c></p>
<p style="Normal" xid="319"><c></c></p>
<p style="Normal" xid="320"><c></c></p>
<p style="Preformatted Text" xid="321" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container6" xid="322"/><bookmark type="end" name="tw-target-text-container6" xid="323"/><bookmark type="start" name="tw-target-text11" xid="324"/><bookmark type="end" name="tw-target-text11" xid="325"/>Requ√™tes avec arguments</p>
</section>
<section xid="326" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="327" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="328" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Dans GraphQL, chaque champ peut avoir z√©ro ou plusieurs arguments si cela est sp√©cifi√© dans le sch√©ma. Par exemple, le champ allPersons peut avoir un dernier param√®tre pour renvoyer uniquement √† un nombre sp√©cifique de personnes. Voici √† quoi ressemblerait une requ√™te correspondante:</p>
</section>
<section xid="329" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="330"><bookmark type="start" name="z6maec4" xid="331"/><bookmark type="end" name="z6maec4" xid="332"/><bookmark type="start" name="tw-target-rmn5" xid="333"/><bookmark type="end" name="tw-target-rmn5" xid="334"/></p>
</section>
<section xid="335" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Normal" xid="336">{</p>
<p style="Normal" xid="337">allPersons(last: 2) {</p>
<p style="Normal" xid="338">name</p>
<p style="Normal" xid="339">}</p>
<p style="Normal" xid="340">}</p>
<p style="Normal" xid="341"><c></c></p>
<p style="Preformatted Text" xid="342" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text12" xid="343"/><bookmark type="end" name="tw-target-text12" xid="344"/>√âcriture de donn√©es avec des mutations</p>
<p style="Preformatted Text" xid="345" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="346" props="text-align:left; lang:fr-FR; dom-dir:ltr">En plus de demander des informations √† un serveur, la majorit√© des applications ont √©galement besoin de modifier les donn√©es actuellement stock√©es dans le backend. Avec GraphQL, ces modifications sont effectu√©es √† l'aide de soi-disant mutations. Il existe g√©n√©ralement trois types de mutations:</p>
<p style="Preformatted Text" xid="347" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="348" props="text-align:left; dom-dir:ltr">¬†¬†¬†¬†<c props="lang:fr-FR">cr√©ation de nouvelles donn√©es</c></p>
<p style="Preformatted Text" xid="349" props="text-align:left; dom-dir:ltr">¬†¬†¬†¬†<c props="lang:fr-FR">mise √† jour des donn√©es existantes</c></p>
<p style="Preformatted Text" xid="350" props="text-align:left; dom-dir:ltr">¬†¬†¬†¬†<c props="lang:fr-FR">suppression de donn√©es existantes</c></p>
<p style="Preformatted Text" xid="351" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="352" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Les mutations suivent la m√™me structure syntaxique que les requ√™tes, mais elles doivent toujours commencer par le mot cl√© mutation. Voici un exemple de la fa√ßon dont nous pourrions cr√©er une nouvelle personne:</p>
<p style="Normal" xid="353"><c></c></p>
<p style="Normal" xid="354">mutation {</p>
<p style="Normal" xid="355">createPerson(name: "Bob", age: 36) {</p>
<p style="Normal" xid="356">name</p>
<p style="Normal" xid="357">age</p>
<p style="Normal" xid="358">}</p>
<p style="Normal" xid="359">}</p>
<p style="Normal" xid="360"><c></c></p>
<p style="Preformatted Text" xid="361" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text13" xid="362"/><bookmark type="end" name="tw-target-text13" xid="363"/>Notez que, similaire √† la requ√™te que nous avons √©crite pr√©c√©demment, la mutation a √©galement un root field- dans ce cas, il s‚Äôappelle createPerson. Nous avons √©galement d√©j√† appris les concepts d'arguments pour les champs. Dans ce cas, le champ createPerson prend deux arguments qui sp√©cifient le nom et l'√¢ge de la nouvelle personne.</p>
<p style="Preformatted Text" xid="364" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="365" props="text-align:left; lang:fr-FR; dom-dir:ltr">Comme pour une requ√™te, nous pouvons √©galement sp√©cifier une payload pour une mutation dans laquelle nous pouvons demander diff√©rentes propri√©t√©s du nouvel objet Personne. Dans notre cas, nous demandons le nom et l'√¢ge - mais il est vrai que ce n'est pas tr√®s utile dans notre exemple, car nous les connaissons √©videmment d√©j√† lorsque nous les transmettons √† la mutation. Cependant, √™tre en mesure d'interroger √©galement des informations lors de l'envoi de mutations peut √™tre un outil tr√®s puissant qui vous permet de r√©cup√©rer de nouvelles informations sur le serveur en un seul aller-retour!</p>
<p style="Preformatted Text" xid="366" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="367" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">La r√©ponse du serveur pour la mutation ci-dessus se pr√©senterait comme suit:</p>
<p style="Preformatted Text" xid="368"><c style="Source Text_text_text_text_text_text">"createPerson": {</c></p>
<p style="Preformatted Text" xid="369"><c style="Source Text_text_text_text_text_text">"name": "Bob",</c></p>
<p style="Preformatted Text" xid="370"><c style="Source Text_text_text_text_text_text">"age": 36,</c></p>
<p style="Preformatted Text" xid="371" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">}</c><bookmark type="start" name="tw-target3" xid="372"/><bookmark type="end" name="tw-target3" xid="373"/></p>
</section>
<section xid="374" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="375"><bookmark type="start" name="kAz1tf3" xid="376"/><bookmark type="end" name="kAz1tf3" xid="377"/></p>
</section>
<section xid="378" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="379" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container7" xid="380"/><bookmark type="end" name="tw-target-text-container7" xid="381"/><bookmark type="start" name="tw-target-text14" xid="382"/><bookmark type="end" name="tw-target-text14" xid="383"/>Un mod√®le que vous trouverez souvent est que les types GraphQL ont des ID uniques qui sont g√©n√©r√©s par le serveur lorsque de nouveaux objets sont cr√©√©s. En √©tendant notre type de personne d'avant, nous pourrions ajouter un identifiant comme celui-ci:</p>
</section>
<section xid="384" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Preformatted Text" xid="385"><c style="Source Text_text_text_text_text_text">type Person {</c></p>
<p style="Preformatted Text" xid="386"><c style="Source Text_text_text_text_text_text">id: ID!</c></p>
<p style="Preformatted Text" xid="387"><c style="Source Text_text_text_text_text_text">name: String!</c></p>
<p style="Preformatted Text" xid="388"><c style="Source Text_text_text_text_text_text">age: Int!</c></p>
<p style="Preformatted Text" xid="389" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">}</c></p>
<p style="Preformatted Text" xid="390" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><bookmark type="start" name="tw-target-text15" xid="391"/><bookmark type="end" name="tw-target-text15" xid="392"/>Maintenant, quand une nouvelle personne est cr√©√©e, vous pouvez directement demander l'identifiant dans la charge utile de la mutation, car il s'agit d'informations qui n'√©taient pas disponibles auparavant sur le client:</p>
<p style="Normal" xid="393">mutation {</p>
<p style="Normal" xid="394">createPerson(name: "Alice", age: 36) {</p>
<p style="Normal" xid="395">id</p>
<p style="Normal" xid="396">}</p>
<p style="Normal" xid="397">}</p>
<p style="Normal" xid="398">{</p>
<p style="Normal" xid="399">"data": {</p>
<p style="Normal" xid="400">"createPerson": {</p>
<p style="Normal" xid="401">  "id": "ck59wqjg3184a01156hbmh3ja"</p>
<p style="Normal" xid="402">}</p>
<p style="Normal" xid="403">}</p>
<p style="Normal" xid="404">}</p>
<p style="Normal" xid="405"><c></c></p>
<p style="Normal" xid="406"><bookmark type="start" name="tw-cst1" xid="407"/><bookmark type="end" name="tw-cst1" xid="408"/></p>
</section>
<section xid="409" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="410"><bookmark type="start" name="tw-target4" xid="411"/><bookmark type="end" name="tw-target4" xid="412"/></p>
</section>
<section xid="413" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="414"><bookmark type="start" name="kAz1tf4" xid="415"/><bookmark type="end" name="kAz1tf4" xid="416"/></p>
</section>
<section xid="417" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="418" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container8" xid="419"/><bookmark type="end" name="tw-target-text-container8" xid="420"/><bookmark type="start" name="tw-target-text16" xid="421"/><bookmark type="end" name="tw-target-text16" xid="422"/>Mises √† jour en temps r√©el avec les suscription</p>
<p style="Preformatted Text" xid="423" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="424" props="text-align:left; lang:fr-FR; dom-dir:ltr">Une autre exigence importante pour de nombreuses applications aujourd'hui est d'avoir une connexion en temps r√©el au serveur afin d'√™tre imm√©diatement inform√© des √©v√©nements importants. Pour ce cas d'utilisation, GraphQL propose le concept de suscription.</p>
<p style="Preformatted Text" xid="425" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="426" props="text-align:left; lang:fr-FR; dom-dir:ltr">Lorsqu'un client s'abonne √† un √©v√©nement, il √©tablit et maintient une connexion stable avec le serveur. Chaque fois que cet √©v√©nement particulier se produit, le serveur envoie les donn√©es correspondantes au client. Contrairement aux requ√™tes et aux mutations qui suivent un ¬´cycle de demande-r√©ponse¬ª typique, les suscription repr√©sentent un flux de donn√©es envoy√©es au client.</p>
<p style="Preformatted Text" xid="427" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="428" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">Les suscription sont √©crits en utilisant la m√™me syntaxe que les requ√™tes et les mutations. Voici un exemple o√π nous nous abonnons aux √©v√©nements qui se produisent sur le type de personne:</p>
</section>
<section xid="429" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Preformatted Text" xid="430"><c style="Source Text_text_text_text_text_text">subscription {</c></p>
<p style="Preformatted Text" xid="431"><c style="Source Text_text_text_text_text_text">newPerson {</c></p>
<p style="Preformatted Text" xid="432"><c style="Source Text_text_text_text_text_text">name</c></p>
<p style="Preformatted Text" xid="433"><c style="Source Text_text_text_text_text_text">age</c></p>
<p style="Preformatted Text" xid="434"><c style="Source Text_text_text_text_text_text">}</c></p>
<p style="Preformatted Text" xid="435" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">}</c></p>
<p style="Normal" xid="436"><bookmark type="start" name="tw-target5" xid="437"/><bookmark type="end" name="tw-target5" xid="438"/></p>
</section>
<section xid="439" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="440"><bookmark type="start" name="kAz1tf5" xid="441"/><bookmark type="end" name="kAz1tf5" xid="442"/></p>
</section>
<section xid="443" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="444" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container9" xid="445"/><bookmark type="end" name="tw-target-text-container9" xid="446"/><bookmark type="start" name="tw-target-text17" xid="447"/><bookmark type="end" name="tw-target-text17" xid="448"/>D√©finition d'un sch√©ma</p>
<p style="Preformatted Text" xid="449" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="450" props="text-align:left; lang:fr-FR; dom-dir:ltr">Maintenant que vous avez une compr√©hension de base de ce √† quoi ressemblent les query, les mutations et les suscription , rassemblons tout cela et apprenons comment vous pouvez √©crire un sch√©ma qui vous permettrait d'ex√©cuter les exemples que vous avez vus jusqu'√† pr√©sent.</p>
<p style="Preformatted Text" xid="451" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="452" props="text-align:left; lang:fr-FR; dom-dir:ltr">Le sch√©ma est l'un des concepts les plus importants lors de l'utilisation d'une API GraphQL. Il sp√©cifie les capacit√©s de l'API et d√©finit comment les clients peuvent demander les donn√©es. Il est souvent consid√©r√© comme un contrat entre le serveur et le client.</p>
<p style="Preformatted Text" xid="453" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="454" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">G√©n√©ralement, un sch√©ma est simplement une collection de types GraphQL. Cependant, lors de l'√©criture du sch√©ma d'une API, il existe certains types de racine sp√©ciaux:</p>
</section>
<section xid="455" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p xid="456"><pbr/></p>
<p props="" xid="457"><c></c></p>
<p style="Normal" xid="458"><c></c></p>
<p style="Normal" xid="459"><c></c></p>
<p style="Normal" xid="460"><c style="Source Text_text_text_text_text_text">type Query { ... }</c></p>
<p style="Preformatted Text" xid="461"><c style="Source Text_text_text_text_text_text">type Mutation { ... }</c></p>
<p style="Preformatted Text" xid="462" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">type Subscription { ... }</c></p>
<p style="Normal" xid="463"><c></c></p>
</section>
<section xid="464" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="465"><c></c></p>
</section>
<section xid="466" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="467"><c></c></p>
</section>
<section xid="468" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="469"><c></c></p>
</section>
<section xid="470" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="471"><bookmark type="start" name="tw-src-spkr-button" xid="472"/><bookmark type="end" name="tw-src-spkr-button" xid="473"/></p>
</section>
<section xid="474" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="475"><bookmark type="start" name="tw-target6" xid="476"/><bookmark type="end" name="tw-target6" xid="477"/></p>
</section>
<section xid="478" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p xid="479"><pbr/></p>
<p props="" xid="480"><c></c></p>
<p style="Normal" xid="481"><c></c></p>
<p style="Normal" xid="482"><c></c></p>
<p style="Normal" xid="483"><bookmark type="start" name="kAz1tf6" xid="484"/><bookmark type="end" name="kAz1tf6" xid="485"/></p>
</section>
<section xid="486" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="487" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container10" xid="488"/><bookmark type="end" name="tw-target-text-container10" xid="489"/><bookmark type="start" name="tw-target-text18" xid="490"/><bookmark type="end" name="tw-target-text18" xid="491"/>Les types query, Mutation et suscription sont les points d'entr√©e pour les demandes envoy√©es par le client. Pour activer la requ√™te allPersons que nous avons vue pr√©c√©demment, le type de query doit √™tre √©crit comme suit:</p>
</section>
<section xid="492" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="493"><c style="Source Text_text_text_text_text_text">type Query {</c></p>
<p style="Preformatted Text" xid="494"><c style="Source Text_text_text_text_text_text">allPersons: [Person!]!</c></p>
<p style="Preformatted Text" xid="495" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">}</c></p>
<p style="Normal" xid="496"><bookmark type="start" name="tw-target7" xid="497"/><bookmark type="end" name="tw-target7" xid="498"/></p>
</section>
<section xid="499" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="500"><bookmark type="start" name="kAz1tf7" xid="501"/><bookmark type="end" name="kAz1tf7" xid="502"/></p>
</section>
<section xid="503" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="504" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container11" xid="505"/><bookmark type="end" name="tw-target-text-container11" xid="506"/><bookmark type="start" name="tw-target-text19" xid="507"/><bookmark type="end" name="tw-target-text19" xid="508"/>allPersons est appel√© un root field de l'API. Consid√©rant √† nouveau l'exemple o√π nous avons ajout√© le dernier argument au dield allPersons, nous devons √©crire la query comme suit:</p>
</section>
<section xid="509" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="510"><c style="Source Text_text_text_text_text_text">type Query {</c></p>
<p style="Preformatted Text" xid="511"><c style="Source Text_text_text_text_text_text">allPersons(last: Int): [Person!]!</c></p>
<p style="Preformatted Text" xid="512" props="margin-bottom:0.499cm; margin-top:0cm"><c style="Source Text_text_text_text_text_text">}</c></p>
<p style="Text body" xid="513"><bookmark type="start" name="z6maec6" xid="514"/><bookmark type="end" name="z6maec6" xid="515"/><bookmark type="start" name="tw-target-rmn7" xid="516"/><bookmark type="end" name="tw-target-rmn7" xid="517"/></p>
</section>
<section xid="518" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="519"><bookmark type="start" name="z6maec5" xid="520"/><bookmark type="end" name="z6maec5" xid="521"/><bookmark type="start" name="tw-target-rmn6" xid="522"/><bookmark type="end" name="tw-target-rmn6" xid="523"/></p>
</section>
<section xid="524" props="page-margin-left:2cm; page-margin-right:2cm">
<p style="Preformatted Text" xid="525" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text20" xid="526"/><bookmark type="end" name="tw-target-text20" xid="527"/>De m√™me, pour la mutation createPerson, nous devrons ajouter un root field au type Mutation:</p>
<p style="Preformatted Text" xid="528" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="529" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Mutation {</p>
<p style="Preformatted Text" xid="530" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">createPerson (nom: String !, √¢ge: Int!): Person!</c></p>
<p style="Preformatted Text" xid="531" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">}</p>
<p style="Normal" xid="532"><bookmark type="start" name="tw-target8" xid="533"/><bookmark type="end" name="tw-target8" xid="534"/></p>
</section>
<section xid="535" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Normal" xid="536"><bookmark type="start" name="kAz1tf8" xid="537"/><bookmark type="end" name="kAz1tf8" xid="538"/></p>
</section>
<section xid="539" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Preformatted Text" xid="540" props="text-align:left; lang:fr-FR; dom-dir:ltr"><bookmark type="start" name="tw-target-text-container12" xid="541"/><bookmark type="end" name="tw-target-text-container12" xid="542"/><bookmark type="start" name="tw-target-text21" xid="543"/><bookmark type="end" name="tw-target-text21" xid="544"/>Notez que ce root field prend √©galement deux arguments, le nom et l'√¢ge de la nouvelle personne.</p>
<p style="Preformatted Text" xid="545" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="546" props="text-align:left; lang:fr-FR; dom-dir:ltr">Enfin, pour les suscription, nous devons ajouter le rootfield newPerson:</p>
<p style="Preformatted Text" xid="547" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="548" props="text-align:left; lang:fr-FR; dom-dir:ltr">type suscription {</p>
<p style="Preformatted Text" xid="549" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">newPerson: Person!</c></p>
<p style="Preformatted Text" xid="550" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="551" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="552" props="text-align:left; lang:fr-FR; dom-dir:ltr">Ensemble, voici le sch√©ma complet de toutes les requ√™tes et mutations que vous avez vues dans ce chapitre:</p>
<p style="Preformatted Text" xid="553" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="554" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Query {</p>
<p style="Preformatted Text" xid="555" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">allPersons (last: Int): [Personne!]!</c></p>
<p style="Preformatted Text" xid="556" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="557" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="558" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Mutation {</p>
<p style="Preformatted Text" xid="559" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">createPerson (nom: String !, √¢ge: Int!): Person!</c></p>
<p style="Preformatted Text" xid="560" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="561" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="562" props="text-align:left; lang:fr-FR; dom-dir:ltr">type suscription {</p>
<p style="Preformatted Text" xid="563" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">newPerson: Person!</c></p>
<p style="Preformatted Text" xid="564" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="565" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="566" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Personne {</p>
<p style="Preformatted Text" xid="567" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">nom: String!</c></p>
<p style="Preformatted Text" xid="568" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">√¢ge: Int!</c></p>
<p style="Preformatted Text" xid="569" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">messages: [Post!]!</c></p>
<p style="Preformatted Text" xid="570" props="text-align:left; lang:fr-FR; dom-dir:ltr">}</p>
<p style="Preformatted Text" xid="571" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Preformatted Text" xid="572" props="text-align:left; lang:fr-FR; dom-dir:ltr">type Post {</p>
<p style="Preformatted Text" xid="573" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">titre: String!</c></p>
<p style="Preformatted Text" xid="574" props="text-align:left; dom-dir:ltr">¬†¬†<c props="lang:fr-FR">auteur: Personne!</c></p>
<p style="Preformatted Text" xid="575" props="text-align:left; lang:fr-FR; margin-top:0cm; margin-bottom:0.499cm; dom-dir:ltr">}</p>
</section>
<section xid="576" props="page-margin-right:2cm; column-gap:0cm; page-margin-left:2cm; columns:1">
<p style="Text body" xid="577"><bookmark type="start" name="z6maec7" xid="578"/><bookmark type="end" name="z6maec7" xid="579"/><bookmark type="start" name="tw-target-rmn8" xid="580"/><bookmark type="end" name="tw-target-rmn8" xid="581"/></p>
<p style="Text body" xid="582"><c></c></p>
<p style="Text body" xid="583">Vue d'ensemble (architecture)<br/><br/>GraphQL a √©t√© publi√© uniquement √† titre de sp√©cification. Cela signifie que GraphQL n'est en fait rien de plus qu'un long document d√©crivant en d√©tail le comportement d'un serveur GraphQL.<br/>Cas d'utilisation<br/><br/>Dans cette section, nous allons vous guider √† travers 3 diff√©rents types d'architectures qui incluent un serveur GraphQL:<br/><br/>¬†¬†¬†¬†Serveur GraphQL avec une base de donn√©es connect√©e<br/>¬†¬†¬†¬†Serveur GraphQL qui est une couche mince devant un certain nombre de syst√®mes tiers ou h√©rit√©s et les int√®gre via une seule API GraphQL<br/>¬†¬†¬†¬†Une approche hybride d'une base de donn√©es connect√©e et de syst√®mes tiers ou h√©rit√©s qui sont tous accessibles via la m√™me API GraphQL<br/><br/>Les trois architectures repr√©sentent des cas d'utilisation majeurs de GraphQL et d√©montrent la flexibilit√© en termes de contexte o√π il peut √™tre utilis√©.<br/>1. Serveur GraphQL avec une base de donn√©es connect√©e<br/><br/>Cette architecture sera la plus courante pour les projets enti√®rement nouveaux. Dans la configuration, vous disposez d'un seul serveur (Web) qui impl√©mente la sp√©cification GraphQL. Lorsqu'une requ√™te arrive sur le serveur GraphQL, le serveur lit la charge utile de la requ√™te et r√©cup√®re les informations requises dans la base de donn√©es. Cela s'appelle r√©soudre la requ√™te. Il construit ensuite l'objet de r√©ponse comme d√©crit dans la sp√©cification officielle et le renvoie au client.<br/><br/>Il est important de noter que GraphQL est en fait ind√©pendant de la couche de transport. Cela signifie qu'il peut potentiellement √™tre utilis√© avec n'importe quel protocole r√©seau disponible. Il est donc potentiellement possible d'impl√©menter un serveur GraphQL bas√© sur TCP, WebSockets, etc.<br/><br/>GraphQL ne se soucie pas non plus de la base de donn√©es ou du format utilis√© pour stocker les donn√©es. Vous pouvez utiliser une base de donn√©es SQL comme AWS Aurora ou une base de donn√©es NoSQL comme MongoDB.</p>
<p style="Plain Text" xid="584" props="text-align:left"><image dataid="2" xid="585" props="height:1.5944in; width:6.6924in"/></p>
<p style="Normal" xid="586" props="text-align:left"><c></c></p>
<p style="Normal" xid="587" props="text-align:left; dom-dir:ltr">Une architecture greenfield standard avec un serveur GraphQL qui se connecte √† une seule base de donn√©es.</p>
<p style="Normal" xid="588" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="589" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="590" props="text-align:left; dom-dir:ltr">2. Couche GraphQL qui int√®gre les syst√®mes existants<br/><br/>Un autre cas d'utilisation majeur pour GraphQL est l'int√©gration de plusieurs syst√®mes existants derri√®re une seule API GraphQL coh√©rente. Cela est particuli√®rement convaincant pour les entreprises disposant d'infrastructures h√©rit√©es et de nombreuses API diff√©rentes qui se sont d√©velopp√©es au fil des ans et imposent d√©sormais une charge de maintenance √©lev√©e. Un probl√®me majeur avec ces syst√®mes h√©rit√©s est qu'ils rendent pratiquement impossible la construction de produits innovants qui ont besoin d'acc√©der √† plusieurs syst√®mes.<br/><br/>Dans ce contexte, GraphQL peut √™tre utilis√© pour unifier ces syst√®mes existants et cacher leur complexit√© derri√®re une belle API GraphQL. De cette fa√ßon, de nouvelles applications clientes peuvent √™tre d√©velopp√©es qui parlent simplement au serveur GraphQL pour r√©cup√©rer les donn√©es dont elles ont besoin. Le serveur GraphQL est alors charg√© de r√©cup√©rer les donn√©es des syst√®mes existants et de les empaqueter au format de r√©ponse GraphQL.<br/><br/>Tout comme dans l'architecture pr√©c√©dente o√π le serveur GraphQL ne se souciait pas du type de base de donn√©es utilis√©, cette fois, il ne se souciait pas des sources de donn√©es dont il avait besoin pour r√©cup√©rer les donn√©es n√©cessaires √† la r√©solution d'une requ√™te.</p>
<p style="Normal" xid="591" props="text-align:left; dom-dir:ltr"><image dataid="3" xid="592" props="height:5.0646in; width:6.6924in"/></p>
<p style="Normal" xid="593" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="594" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="595" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="596" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="597" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="598" props="text-align:left; dom-dir:ltr">GraphQL vous permet de masquer la complexit√© des syst√®mes existants, tels que les microservices, les infrastructures h√©rit√©es ou les API tierces derri√®re une seule interface GraphQL.</p>
<p style="Normal" xid="599" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="600" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="601" props="text-align:left; dom-dir:ltr">3. Approche hybride avec base de donn√©es connect√©e et int√©gration du syst√®me existant<br/><br/>Enfin, il est possible de combiner les deux approches et de cr√©er un serveur GraphQL qui dispose d'une base de donn√©es connect√©e mais qui parle toujours √† des syst√®mes h√©rit√©s ou tiers.<br/><br/>Lorsqu'une requ√™te est re√ßue par le serveur, il la r√©soudra et r√©cup√©rera les donn√©es requises de la base de donn√©es connect√©e ou de certaines des API int√©gr√©es.</p>
<p style="Plain Text" xid="602" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="603" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="604" props="text-align:left; dom-dir:ltr"><image dataid="4" xid="605" props="height:6.5819in; width:6.6924in"/></p>
</section>
<section xid="606" props="page-margin-left:2cm; page-margin-right:2cm">
<p xid="607"><pbr/></p>
<p props="" xid="608"><c></c></p>
<p style="Normal" xid="609"><c></c></p>
<p style="Normal" xid="610"><c></c></p>
<p style="Normal" xid="611"><c></c></p>
<p style="Normal" xid="612"><c></c></p>
<p style="Normal" xid="613"><c></c></p>
<p style="Normal" xid="614"><c></c></p>
<p style="Normal" xid="615">Les deux approches peuvent √©galement √™tre combin√©es et le serveur GraphQL peut extraire des donn√©es √† partir d'une seule base de donn√©es ainsi que d'un syst√®me existant - ce qui permet une flexibilit√© totale et pousse toute la complexit√© de la gestion des donn√©es vers le serveur.</p>
<p style="Normal" xid="616"><c></c></p>
<p style="Normal" xid="617">Fonctions du r√©solveur<br/><br/>Mais comment gagner cette flexibilit√© avec GraphQL? Comment se fait-il qu'il soit si bien adapt√© √† ces types d'utilisation tr√®s diff√©rents?<br/><br/>Comme vous l'avez appris dans le chapitre pr√©c√©dent, la charge utile d'une requ√™te GraphQL (ou mutation) se compose d'un ensemble de champs. Dans l'impl√©mentation du serveur GraphQL, chacun de ces champs correspond en fait √† exactement une fonction appel√©e r√©solveur. Le seul but d'une fonction r√©solveur est de r√©cup√©rer les donn√©es de son champ.<br/><br/>Lorsque le serveur re√ßoit une requ√™te, il appelle toutes les fonctions des champs sp√©cifi√©s dans la charge utile de la requ√™te. Il r√©sout ainsi la requ√™te et est capable de r√©cup√©rer les donn√©es correctes pour chaque champ. Une fois tous les r√©solveurs retourn√©s, le serveur regroupera les donn√©es dans le format d√©crit par la requ√™te et les renverra au client</p>
<p style="Plain Text" xid="618" props="text-align:left"><c></c></p>
<p style="Normal" xid="619" props="text-align:left"><c></c></p>
<p style="Normal" xid="620" props="text-align:left"><c></c></p>
<p style="Normal" xid="621"><image dataid="5" xid="622" props="height:1.6271in; width:6.6924in"/></p>
<p style="Normal" xid="623"><c></c></p>
<p style="Normal" xid="624" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="625" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="626" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="627" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="628" props="text-align:left; dom-dir:ltr">La capture d'√©cran ci-dessus contient certains des noms de champs r√©solus. Chaque champ de la requ√™te correspond √† une fonction r√©solveur. GraphQL appelle tous les r√©solveurs requis lorsqu'une requ√™te arrive pour r√©cup√©rer les donn√©es sp√©cifi√©es.</p>
<p style="Normal" xid="629" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="630" props="text-align:left; dom-dir:ltr">Biblioth√®ques client GraphQL<br/><br/>GraphQL est particuli√®rement id√©al pour les d√©veloppeurs frontaux car il √©limine compl√®tement bon nombre des inconv√©nients et des lacunes rencontr√©s avec les API REST, tels que le sur-chargement et le sous-chargement. La complexit√© est pouss√©e du c√¥t√© du serveur o√π des machines puissantes peuvent prendre en charge les gros travaux de calcul. Le client n'a pas besoin de savoir d'o√π proviennent les donn√©es qu'il r√©cup√®re et peut utiliser une API unique, coh√©rente et flexible.<br/><br/>Examinons le changement majeur introduit avec GraphQL en passant d'une approche de r√©cup√©ration de donn√©es plut√¥t imp√©rative √† une approche purement d√©clarative. Lors de la r√©cup√©ration de donn√©es √† partir d'une API REST, la plupart des applications devront suivre les √©tapes suivantes:<br/><br/>¬†¬†¬†¬†construire et envoyer une requ√™te HTTP (par exemple avec fetch en Javascript)<br/>¬†¬†¬†¬†recevoir et analyser la r√©ponse du serveur<br/>¬†¬†¬†¬†stocker les donn√©es localement (simplement en m√©moire ou persistantes)<br/>¬†¬†¬†¬†afficher les donn√©es dans l'interface utilisateur<br/><br/>Avec l'approche de r√©cup√©ration de donn√©es d√©clarative id√©ale, un client ne devrait pas faire plus que les deux √©tapes suivantes:<br/><br/>¬†¬†¬†¬†d√©crire les exigences en mati√®re de donn√©es<br/>¬†¬†¬†¬†afficher les donn√©es dans l'interface utilisateur<br/><br/>Toutes les t√¢ches de mise en r√©seau de niveau inf√©rieur ainsi que le stockage des donn√©es doivent √™tre r√©sum√©s et la d√©claration des d√©pendances de donn√©es doit √™tre la partie dominante.<br/><br/>C'est pr√©cis√©ment ce que les biblioth√®ques client GraphQL comme Relay ou Apollo vous permettront de faire. Ils fournissent l'abstraction dont vous avez besoin pour pouvoir vous concentrer sur les parties importantes de votre application plut√¥t que d'avoir √† g√©rer l'impl√©mentation r√©p√©titive de l'infrastructure.</p>
<p style="Plain Text" xid="631" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="632" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="633" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="634" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="635" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="636" props="text-align:left; dom-dir:ltr">/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////:</p>
<p style="Normal" xid="637" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="638" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="639" props="text-align:left; dom-dir:ltr">Tutoriel avanc√© - Clients<br/><br/>Travailler avec une API GraphQL sur le frontend est une excellente occasion de d√©velopper de nouvelles abstractions et d'aider √† impl√©menter des fonctionnalit√©s communes c√¥t√© client. Examinons quelques fonctionnalit√©s ¬´d'infrastructure¬ª que vous souhaitez probablement avoir dans votre application:<br/><br/>¬†¬†¬†¬†envoyer directement des requ√™tes et des mutations sans construire de requ√™tes HTTP<br/>¬†¬†¬†¬†int√©gration de la couche de vue<br/>¬†¬†¬†¬†mise en cache<br/>¬†¬†¬†¬†validation et optimisation des requ√™tes bas√©es sur le sch√©ma<br/><br/>Bien s√ªr, rien ne vous emp√™che d'utiliser du HTTP simple pour r√©cup√©rer vos donn√©es, puis de d√©placer vous-m√™me tous les bits jusqu'√† ce que les bonnes informations se retrouvent dans votre interface utilisateur. Mais GraphQL offre la possibilit√© d'abstraire une grande partie du travail manuel que vous auriez normalement √† faire pendant ce processus et vous permet de vous concentrer sur les parties r√©ellement importantes de votre application! Dans ce qui suit, nous allons discuter un peu plus en d√©tail de ces t√¢ches.<br/><br/>¬†¬†¬†¬†Il existe actuellement deux principaux clients GraphQL. Le premier est Apollo Client, qui est un effort communautaire pour construire un client GraphQL puissant et flexible pour toutes les principales plates-formes de d√©veloppement. Le deuxi√®me s'appelle Relay et c'est le client GraphQL de Facebook qui optimise fortement les performances et n'est disponible que sur le Web.<br/><br/>Envoi direct de requ√™tes et de mutations<br/><br/>Un avantage majeur de GraphQL est qu'il vous permet de r√©cup√©rer et de mettre √† jour des donn√©es de mani√®re d√©clarative. Autrement dit, nous montons d'un cran plus haut sur l'√©chelle d'abstraction de l'API et n'avons plus √† nous occuper nous-m√™mes des t√¢ches de mise en r√©seau de bas niveau.<br/><br/>Lorsque vous avez pr√©c√©demment utilis√© du HTTP simple (comme r√©cup√©rer en Javascript ou NSURLSession sur iOS) pour charger des donn√©es √† partir d'une API, tout ce que vous avez √† faire avec GraphQL est d'√©crire une requ√™te dans laquelle vous d√©clarez vos besoins en donn√©es et laissez le syst√®me se charger d'envoyer la demande. et g√©rer la r√©ponse pour vous. C'est pr√©cis√©ment ce que fera un client GraphQL.</p>
<p style="Normal" xid="640" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="641" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="642" props="text-align:left; dom-dir:ltr">(Appollo client): Apollo Client est une biblioth√®que de gestion d'√©tat compl√®te pour les applications JavaScript. √âcrivez simplement une requ√™te GraphQL, et Apollo Client se chargera de demander et de mettre en cache vos donn√©es, ainsi que de mettre √† jour votre interface utilisateur.<br/><br/>La r√©cup√©ration de donn√©es avec Apollo Client vous guide pour structurer votre code de mani√®re pr√©visible et d√©clarative conform√©ment aux meilleures pratiques modernes de React. Avec Apollo, vous pouvez cr√©er des fonctionnalit√©s de haute qualit√© plus rapidement sans avoir √† √©crire des donn√©es passe-partout de plomberie.</p>
<p style="Normal" xid="643" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="644" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="645" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="646" props="text-align:left; dom-dir:ltr">Afficher les int√©grations de couches et les mises √† jour de l'interface utilisateur<br/><br/>Une fois que la r√©ponse du serveur a √©t√© re√ßue et trait√©e par le client GraphQL, les donn√©es demand√©es doivent en quelque sorte se retrouver dans votre interface utilisateur. En fonction des plates-formes et des frameworks avec lesquels vous d√©veloppez, il existe diff√©rentes approches pour la gestion g√©n√©rale des mises √† jour de l'interface utilisateur.<br/><br/>Prenant React comme exemple, les clients GraphQL utilisent le concept de composants d'ordre sup√©rieur pour r√©cup√©rer les donn√©es n√©cessaires sous le capot et les rendre disponibles dans les accessoires de vos composants. En g√©n√©ral, la nature d√©clarative de GraphQL est particuli√®rement bien li√©e aux techniques de programmation r√©active fonctionnelle. Les deux peuvent former une combinaison puissante o√π une vue d√©clare simplement ses d√©pendances de donn√©es et l'interface utilisateur est c√¢bl√©e avec une couche FRP de votre choix.<br/>Mise en cache des r√©sultats de requ√™te: concepts et strat√©gies<br/><br/>Dans la majorit√© des applications, vous souhaiterez conserver un cache des donn√©es pr√©c√©demment extraites du serveur. La mise en cache locale des informations est essentielle pour offrir une exp√©rience utilisateur fluide et all√©ger les plans de donn√©es de vos utilisateurs.<br/><br/>En r√®gle g√©n√©rale, lors de la mise en cache des donn√©es, l'intuition consiste √† placer les informations r√©cup√©r√©es √† distance dans un magasin local d'o√π elles peuvent √™tre r√©cup√©r√©es ult√©rieurement. Avec GraphQL, l'approche na√Øve serait de simplement mettre les r√©sultats des requ√™tes GraphQL dans le magasin et chaque fois que la m√™me requ√™te exacte est ex√©cut√©e √† nouveau, il suffit de retourner les donn√©es pr√©c√©demment stock√©es. Il s'av√®re que cette approche est tr√®s inefficace pour la plupart des applications.<br/><br/>Une approche plus avantageuse consiste √† normaliser les donn√©es au pr√©alable. Cela signifie que le r√©sultat de la requ√™te (potentiellement imbriqu√©) est aplati et le magasin ne contiendra que des enregistrements individuels qui peuvent √™tre r√©f√©renc√©s avec un ID global unique. Si vous voulez en savoir plus √† ce sujet, le blog Apollo a une excellente r√©daction sur le sujet.<br/>Validation et optimisation des sch√©mas au moment de la construction<br/><br/>√âtant donn√© que le sch√©ma contient toutes les informations sur ce qu'un client peut potentiellement faire avec une API GraphQL, il existe une excellente opportunit√© pour valider et potentiellement optimiser les requ√™tes qu'un client souhaite envoyer d√©j√† au moment de la construction.<br/><br/>Lorsque l'environnement de g√©n√©ration a acc√®s au sch√©ma, il peut essentiellement analyser tout le code GraphQL qui se trouve dans le projet et le comparer aux informations du sch√©ma. Cela intercepte les fautes de frappe et autres erreurs avant qu'une application ne tombe entre les mains des utilisateurs r√©els, o√π les cons√©quences d'une erreur seraient beaucoup plus dramatiques.</p>
<p style="Normal" xid="647" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="648" props="text-align:left; dom-dir:ltr">Colocalisation des vues et des d√©pendances des donn√©es<br/><br/>Un concept puissant de GraphQL est qu'il vous permet d'avoir du code d'interface utilisateur et des exigences de donn√©es c√¥te √† c√¥te. Le couplage √©troit des vues et de leurs d√©pendances de donn√©es am√©liore consid√©rablement l'exp√©rience du d√©veloppeur. La surcharge mentale de la r√©flexion sur la mani√®re dont les bonnes donn√©es aboutissent dans les bonnes parties de l'interface utilisateur est √©limin√©e.<br/><br/>Le bon fonctionnement de la colocation d√©pend de la plate-forme sur laquelle vous d√©veloppez. Par exemple, dans les applications Javascript, il est possible de placer des d√©pendances de donn√©es et du code d'interface utilisateur dans le m√™me fichier. Dans Xcode, l'Assistant Editor peut √™tre utilis√© pour travailler simultan√©ment sur les contr√¥leurs de vue et le code graphql.</p>
<p style="Normal" xid="649" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="650" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="651" props="text-align:left; dom-dir:ltr">//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</p>
<p style="Normal" xid="652" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="653" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="654" props="text-align:left; dom-dir:ltr"><c props="lang:fr-FR; font-size:12pt; font-weight:normal; font-family:Liberation Serif; color:#000000">Serveur<br/><br/>GraphQL est souvent expliqu√© comme une technologie API orient√©e frontend car elle permet aux clients d'obtenir des donn√©es d'une mani√®re beaucoup plus agr√©able qu'auparavant. Mais l'API elle-m√™me est bien s√ªr impl√©ment√©e c√¥t√© serveur. Le serveur pr√©sente √©galement de nombreux avantages, car GraphQL permet au d√©veloppeur du serveur de se concentrer sur la description des donn√©es disponibles plut√¥t que sur la mise en ≈ìuvre et l'optimisation de points de terminaison sp√©cifiques.<br/>Ex√©cution de GraphQL<br/><br/>GraphQL ne sp√©cifie pas seulement une mani√®re de d√©crire les sch√©mas et un langage de requ√™te pour r√©cup√©rer les donn√©es de ces sch√©mas, mais un algorithme d'ex√©cution r√©el pour la fa√ßon dont ces requ√™tes sont transform√©es en r√©sultats. Cet algorithme est assez simple √† la base: la requ√™te est parcourue champ par champ, ex√©cutant des ¬´r√©solveurs¬ª pour chaque champ. Supposons donc que nous ayons le sch√©ma suivant:</c></p>
<p style="Plain Text" xid="655" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="656" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="657" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Courier; font-weight:normal">type Query {<br/>  author(id: ID!): Author<br/>}<br/><br/>type Author {<br/>  posts: [Post]<br/>}<br/><br/>type Post {<br/>  title: String<br/>  content: String<br/>}<br/></c></p>
<p style="Normal" xid="658" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="659" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">Voici une requ√™te que nous pourrions envoyer √† un serveur avec ce sch√©ma:</c></p>
<p style="Normal" xid="660" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="661" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Courier; font-weight:normal">query {<br/>  author(id: "abc") {<br/>    posts {<br/>      title<br/>      content<br/>    }<br/>  }<br/>}<br/></c></p>
<p style="Normal" xid="662" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="663" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">La premi√®re chose √† voir est que chaque champ de la query peut √™tre associ√© √† un type:</c></p>
<p style="Plain Text" xid="664" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Plain Text" xid="665" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Courier; font-weight:normal">query: Query {<br/>  author(id: "abc"): Author {<br/>    posts: [Post] {<br/>      title: String<br/>      content: String<br/>    }<br/>  }<br/>}<br/></c></p>
<p style="Normal" xid="666" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">D√©sormais, nous pouvons facilement trouver les r√©solveurs de notre serveur √† ex√©cuter pour chaque champ. L'ex√©cution commence au type de requ√™te et va en premier. Cela signifie que nous ex√©cutons d'abord le r√©solveur pour Query.author. Ensuite, nous prenons le r√©sultat de ce r√©solveur et le transmettons √† son enfant, le r√©solveur pour Author.posts. Au niveau suivant, le r√©sultat est une liste, donc dans ce cas, l'algorithme d'ex√©cution s'ex√©cute sur un √©l√©ment √† la fois. Donc, l'ex√©cution fonctionne comme ceci:</c></p>
<p style="Normal" xid="667" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="668" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Courier; font-weight:normal">Query.author(root, { id: 'abc' }, context) -&gt; author<br/>Author.posts(author, null, context) -&gt; posts<br/>for each post in posts<br/>  Post.title(post, null, context) -&gt; title<br/>  Post.content(post, null, context) -&gt; content</c></p>
<p style="Normal" xid="669" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="670" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">√Ä la fin, l'algorithme d'ex√©cution met tout ensemble dans la bonne forme pour le r√©sultat et le renvoie.<br/><br/>Une chose √† noter est que la plupart des impl√©mentations de serveur GraphQL fourniront des ¬´r√©solveurs par d√©faut¬ª - vous n'avez donc pas √† sp√©cifier de fonction de r√©solveur pour chaque champ. Dans GraphQL.js, par exemple, vous n'avez pas besoin de sp√©cifier de r√©solveurs lorsque l'objet parent du r√©solveur contient un champ avec le nom correct.<br/><br/>En savoir plus sur l'ex√©cution de GraphQL dans le post ¬´GraphQL Explained¬ª sur le blog Apollo.<br/>R√©solution par lots<br/><br/>Une chose que vous pourriez remarquer √† propos de la strat√©gie d'ex√©cution ci-dessus est qu'elle est quelque peu na√Øve. Par exemple, si vous avez un r√©solveur qui r√©cup√®re √† partir d'une API ou d'une base de donn√©es de backend, ce backend peut √™tre appel√© plusieurs fois pendant l'ex√©cution d'une requ√™te. Imaginons que nous voulions obtenir les auteurs de plusieurs articles, comme ceci:</c></p>
<p style="Plain Text" xid="671" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="672" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="673" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="674" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Courier; font-weight:normal">query {<br/>  posts {<br/>    title<br/>    author {<br/>      name<br/>      avatar<br/>    }<br/>  }<br/>}</c></p>
<p style="Normal" xid="675" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="676" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="677" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="678" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">S'il s'agit de publications sur un blog, il est probable que la plupart des publications auront les m√™mes auteurs. Donc, si nous devons faire un appel API pour obtenir chaque objet auteur, nous pouvons accidentellement faire plusieurs demandes pour le m√™me. Par exemple:<br/><br/>r√©cup√©rer ('/ auteurs / 1')<br/>chercher ('/ auteurs / 2')<br/>r√©cup√©rer ('/ auteurs / 1')<br/>chercher ('/ auteurs / 2')<br/>r√©cup√©rer ('/ auteurs / 1')<br/>chercher ('/ auteurs / 2')<br/><br/>Comment r√©sout-on cela? En rendant nos recherches un peu plus intelligentes. Nous pouvons encapsuler notre fonction de r√©cup√©ration dans un utilitaire qui attendra l'ex√©cution de tous les r√©solveurs, puis assurez-vous de ne r√©cup√©rer chaque √©l√©ment qu'une seule fois:<br/><br/>authorLoader = new AuthorLoader ()<br/><br/>// Mettre en file d'attente un tas de r√©cup√©rations<br/>authorLoader.load (1);<br/>authorLoader.load (2);<br/>authorLoader.load (1);<br/>authorLoader.load (2);<br/><br/>// Ensuite, le chargeur ne fait que le minimum de travail<br/>fetch ('/ auteurs / 1');<br/>chercher ('/ auteurs / 2');<br/><br/>Pouvons-nous faire encore mieux? Oui, si notre API prend en charge les demandes par lots, nous ne pouvons effectuer qu'une seule extraction vers le backend, comme ceci:</c></p>
<p style="Normal" xid="679" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="680" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Courier; font-weight:normal">fetch('/authors?ids=1,2')</c></p>
<p style="Normal" xid="681" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="682" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">Fran√ßais</c></p>
<p style="Normal" xid="683" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="684" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">Cela peut √©galement √™tre encapsul√© dans le chargeur ci-dessus.</c></p>
<p style="Normal" xid="685" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="686" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c props="lang:fr-FR; font-size:12pt; font-family:Liberation Serif; font-weight:normal">En JavaScript, les strat√©gies ci-dessus peuvent √™tre impl√©ment√©es √† l'aide d'un utilitaire appel√© DataLoader, et il existe des utilitaires similaires pour d'autres languages.</c></p>
<p style="Normal" xid="687" props="margin-top:0.0000in; margin-left:0.0000in; text-indent:0.0000in; dom-dir:ltr; margin-bottom:0.0000in; line-height:1.000000; text-align:left; margin-right:0.0000in"><c></c></p>
<p style="Normal" xid="688" props="font-family:Liberation Serif; font-size:12pt; dom-dir:ltr; lang:fr-FR; font-weight:normal; color:#000000; text-align:left">//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</p>
<p style="Normal" xid="689" props="font-family:Liberation Serif; font-size:12pt; dom-dir:ltr; lang:fr-FR; font-weight:normal; color:#000000; text-align:left"><c></c></p>
<p style="Normal" xid="690" props="font-family:Liberation Serif; font-size:12pt; dom-dir:ltr; lang:fr-FR; font-weight:normal; color:#000000; text-align:left"><c></c></p>
<p style="Normal" xid="691" props="font-family:Liberation Serif; font-size:12pt; dom-dir:ltr; lang:fr-FR; font-weight:normal; color:#000000; text-align:left"><c></c></p>
<p style="Normal" xid="692" props="font-family:Liberation Serif; font-size:12pt; dom-dir:ltr; lang:fr-FR; font-weight:normal; color:#000000; text-align:left"><c></c></p>
<p style="Normal" xid="693"><c></c></p>
<p style="Normal" xid="694">Commencer</p>
<p style="Normal" xid="695"><c></c></p>
<p style="Normal" xid="696">Comme il s'agit d'une piste frontend, vous n'allez pas passer de temps √† impl√©menter le backend. √Ä la place, vous utiliserez le serveur du didacticiel Node.</p>
<p style="Normal" xid="697"><c></c></p>
<p style="Normal" xid="698">Une fois que vous avez cr√©√© votre application React, vous r√©cup√©rez le code requis pour le backend.</p>
<p style="Normal" xid="699"><c></c></p>
<p style="Normal" xid="700">Remarque: Le projet final de ce tutoriel se trouve sur GitHub. Vous pouvez toujours l'utiliser comme r√©f√©rence chaque fois que vous vous perdez au cours des chapitres suivants. Notez √©galement que chaque bloc de code est annot√© avec un nom de fichier. Ces annotations sont directement li√©es au fichier correspondant sur GitHub afin que vous puissiez voir clairement o√π mettre le code et √† quoi ressemblera le r√©sultat final.</p>
<p style="Normal" xid="701"><c></c></p>
<p style="Normal" xid="702">L'extr√©mit√© avant</p>
<p style="Normal" xid="703">Cr√©ation de l'application</p>
<p style="Normal" xid="704"><c></c></p>
<p style="Normal" xid="705">Tout d'abord, vous allez cr√©er le projet React! Comme mentionn√© au d√©but, vous utiliserez create-react-app pour cela.</p>
<p style="Normal" xid="706"><c></c></p>
<p style="Normal" xid="707">Si vous ne l'avez pas d√©j√† fait, vous devez installer create-react-app en utilisant du fil:</p>
<p style="Normal" xid="708"><c></c></p>
<p style="Normal" xid="709">yarn global add create-react-app</p>
<p style="Normal" xid="710"><c></c></p>
<p style="Normal" xid="711">Remarque: ce didacticiel utilise Yarn pour la gestion des d√©pendances. Trouvez des instructions pour savoir comment l'installer ici. Si vous pr√©f√©rez utiliser npm, vous pouvez simplement ex√©cuter les commandes √©quivalentes.</p>
<p style="Normal" xid="712"><c></c></p>
<p style="Normal" xid="713">Ensuite, vous pouvez l'utiliser pour d√©marrer votre application React:</p>
<p style="Normal" xid="714"><c></c></p>
<p style="Normal" xid="715">create-react-app hackernews-react-apollo</p>
<p style="Normal" xid="716"><c></c></p>
<p style="Normal" xid="717">Cela va cr√©er un nouveau r√©pertoire appel√© hackernews-react-apollo qui a toute la configuration de base.</p>
<p style="Normal" xid="718"><c></c></p>
<p style="Normal" xid="719">Assurez-vous que tout fonctionne en naviguant dans le r√©pertoire et en d√©marrant l'application:</p>
<p style="Normal" xid="720"><c></c></p>
<p style="Normal" xid="721">cd hackernews-react-apollo</p>
<p style="Normal" xid="722">yarn start</p>
<p style="Normal" xid="723"><c></c></p>
<p style="Normal" xid="724"><c></c></p>
<p style="Normal" xid="725">Cela ouvrira un navigateur et acc√©dera √† http: // localhost: 3000 o√π l'application est en cours d'ex√©cution. Si tout s'est bien pass√©, vous verrez ce qui suit:</p>
<p style="Normal" xid="726"><c></c></p>
<p style="Normal" xid="727"><c></c></p>
<p style="Normal" xid="728"><c></c></p>
<p style="Normal" xid="729"><c></c></p>
<p style="Normal" xid="730"><c></c></p>
<p style="Normal" xid="731"><c></c></p>
<p style="Normal" xid="732"><c></c></p>
<p style="Normal" xid="733"><c></c></p>
<p style="Normal" xid="734"><c></c></p>
<p style="Normal" xid="735"><c></c></p>
<p style="Normal" xid="736"><c></c></p>
<p style="Normal" xid="737"><c></c></p>
<p style="Normal" xid="738">Pour am√©liorer la structure du projet, passez √† la cr√©ation de deux r√©pertoires, tous deux √† l'int√©rieur du dossier src. Le premier est appel√© composants et contiendra tous nos composants React. Appelez le deuxi√®me style, celui-ci concerne tous les fichiers CSS que vous utiliserez.</p>
<p style="Normal" xid="739"><c></c></p>
<p style="Normal" xid="740">App.js est un composant, alors d√©placez-le dans les composants. App.css et index.css contiennent des styles, alors d√©placez-les dans des styles. Vous devez √©galement modifier les r√©f√©rences √† ces fichiers dans index.js et App.js en cons√©quence:</p>
<p style="Normal" xid="741"><c></c></p>
<p style="Normal" xid="742">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="743"><c></c></p>
<p style="Normal" xid="744">import React from 'react'</p>
<p style="Normal" xid="745">import ReactDOM from 'react-dom'</p>
<p style="Normal" xid="746">import './styles/index.css'</p>
<p style="Normal" xid="747">import App from './components/App'</p>
<p style="Normal" xid="748"><c></c></p>
<p style="Normal" xid="749"><c></c></p>
<p style="Normal" xid="750"><c></c></p>
<p style="Normal" xid="751"><c></c></p>
<p style="Normal" xid="752">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="753"><c></c></p>
<p style="Normal" xid="754">import React, { Component } from 'react';</p>
<p style="Normal" xid="755">import logo from '../logo.svg';</p>
<p style="Normal" xid="756">import '../styles/App.css';</p>
<p style="Normal" xid="757"><c></c></p>
<p style="Normal" xid="758"><c></c></p>
<p style="Normal" xid="759">La structure de votre projet devrait maintenant ressembler √† ceci:</p>
<p style="Normal" xid="760"><c></c></p>
<p style="Normal" xid="761">.</p>
<p style="Normal" xid="762">‚îú‚îÄ‚îÄ README.md</p>
<p style="Normal" xid="763">‚îú‚îÄ‚îÄ node_modules</p>
<p style="Normal" xid="764">‚îú‚îÄ‚îÄ package.json</p>
<p style="Normal" xid="765">‚îú‚îÄ‚îÄ public</p>
<p style="Normal" xid="766">‚îÇ   ‚îú‚îÄ‚îÄ favicon.ico</p>
<p style="Normal" xid="767">‚îÇ   ‚îú‚îÄ‚îÄ index.html</p>
<p style="Normal" xid="768">‚îÇ   ‚îî‚îÄ‚îÄ manifest.json</p>
<p style="Normal" xid="769">‚îú‚îÄ‚îÄ src</p>
<p style="Normal" xid="770">‚îÇ   ‚îú‚îÄ‚îÄ App.test.js</p>
<p style="Normal" xid="771">‚îÇ   ‚îú‚îÄ‚îÄ components</p>
<p style="Normal" xid="772">‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ App.js</p>
<p style="Normal" xid="773">‚îÇ   ‚îú‚îÄ‚îÄ index.js</p>
<p style="Normal" xid="774">‚îÇ   ‚îú‚îÄ‚îÄ logo.svg</p>
<p style="Normal" xid="775">‚îÇ   ‚îú‚îÄ‚îÄ serviceWorker.js</p>
<p style="Normal" xid="776">‚îÇ   ‚îî‚îÄ‚îÄ styles</p>
<p style="Normal" xid="777">‚îÇ       ‚îú‚îÄ‚îÄ App.css</p>
<p style="Normal" xid="778">‚îÇ       ‚îî‚îÄ‚îÄ index.css</p>
<p style="Normal" xid="779">‚îî‚îÄ‚îÄ yarn.lock</p>
<p style="Normal" xid="780"><c></c></p>
<p style="Normal" xid="781"><c></c></p>
<p style="Normal" xid="782"><c></c></p>
<p style="Normal" xid="783">Pr√©parer le style</p>
<p style="Normal" xid="784"><c></c></p>
<p style="Normal" xid="785">Ce didacticiel traite des concepts de GraphQL et de la fa√ßon dont vous pouvez l'utiliser √† partir d'une application React, nous souhaitons donc consacrer le moins de temps possible au style. Pour r√©duire l'utilisation de CSS dans ce projet, vous utiliserez la biblioth√®que Tachyons qui fournit un certain nombre de classes CSS.</p>
<p style="Normal" xid="786"><c></c></p>
<p style="Normal" xid="787">Ouvrez public / index.html et ajoutez une troisi√®me balise de lien juste en dessous des deux existantes qui tire dans Tachyons:</p>
<p style="Normal" xid="788">... / hackernews-react-apollo / public / index.html</p>
<p style="Normal" xid="789"><c></c></p>
<p style="Normal" xid="790"><c></c></p>
<p style="Normal" xid="791">&lt;link rel="manifest" href="%PUBLIC_URL%/manifest.json"&gt;</p>
<p style="Normal" xid="792">&lt;link rel="shortcut icon" href="%PUBLIC_URL%/favicon.ico"&gt;</p>
<p style="Normal" xid="793">&lt;link rel="stylesheet" href="https://unpkg.com/tachyons@4.2.1/css/tachyons.min.css"/&gt;</p>
<p style="Normal" xid="794"><c></c></p>
<p style="Normal" xid="795"><c></c></p>
<p style="Normal" xid="796">Puisque nous voulons toujours avoir un style un peu plus personnalis√© ici et l√†, nous avons √©galement pr√©par√© pour vous quelques styles que vous devez inclure dans le projet.</p>
<p style="Normal" xid="797"><c></c></p>
<p style="Normal" xid="798">Ouvrez index.css et remplacez son contenu par ce qui suit:</p>
<p style="Normal" xid="799"><c></c></p>
<p style="Normal" xid="800">.../hackernews-react-apollo/src/styles/index.css</p>
<p style="Normal" xid="801"><c></c></p>
<p style="Normal" xid="802">body {</p>
<p style="Normal" xid="803">margin: 0;</p>
<p style="Normal" xid="804">padding: 0;</p>
<p style="Normal" xid="805">font-family: Verdana, Geneva, sans-serif;</p>
<p style="Normal" xid="806">}</p>
<p style="Normal" xid="807"><c></c></p>
<p style="Normal" xid="808">input {</p>
<p style="Normal" xid="809">max-width: 500px;</p>
<p style="Normal" xid="810">}</p>
<p style="Normal" xid="811"><c></c></p>
<p style="Normal" xid="812">.gray {</p>
<p style="Normal" xid="813">color: #828282;</p>
<p style="Normal" xid="814">}</p>
<p style="Normal" xid="815"><c></c></p>
<p style="Normal" xid="816">.orange {</p>
<p style="Normal" xid="817">background-color: #ff6600;</p>
<p style="Normal" xid="818">}</p>
<p style="Normal" xid="819"><c></c></p>
<p style="Normal" xid="820">.background-gray {</p>
<p style="Normal" xid="821">background-color: rgb(246,246,239);</p>
<p style="Normal" xid="822">}</p>
<p style="Normal" xid="823"><c></c></p>
<p style="Normal" xid="824">.f11 {</p>
<p style="Normal" xid="825">font-size: 11px;</p>
<p style="Normal" xid="826">}</p>
<p style="Normal" xid="827"><c></c></p>
<p style="Normal" xid="828">.w85 {</p>
<p style="Normal" xid="829">width: 85%;</p>
<p style="Normal" xid="830">}</p>
<p style="Normal" xid="831"><c></c></p>
<p style="Normal" xid="832">.button {</p>
<p style="Normal" xid="833">font-family: monospace;</p>
<p style="Normal" xid="834">font-size: 10pt;</p>
<p style="Normal" xid="835">color: black;</p>
<p style="Normal" xid="836">background-color: buttonface;</p>
<p style="Normal" xid="837">text-align: center;</p>
<p style="Normal" xid="838">padding: 2px 6px 3px;</p>
<p style="Normal" xid="839">border-width: 2px;</p>
<p style="Normal" xid="840">border-style: outset;</p>
<p style="Normal" xid="841">border-color: buttonface;</p>
<p style="Normal" xid="842">cursor: pointer;</p>
<p style="Normal" xid="843">max-width: 250px;</p>
<p style="Normal" xid="844">}</p>
<p style="Normal" xid="845"><c></c></p>
<p style="Normal" xid="846"><c></c></p>
<p style="Normal" xid="847">Installer le client Apollo</p>
<p style="Normal" xid="848"><c></c></p>
<p style="Normal" xid="849">Ensuite, vous devez extraire les fonctionnalit√©s d'Apollo Client (et de ses liaisons React) qui sont fournies dans plusieurs packages:</p>
<p style="Normal" xid="850"><c></c></p>
<p style="Normal" xid="851"><c></c></p>
<p style="Normal" xid="852">.../hackernews-react-apollo</p>
<p style="Normal" xid="853"><c></c></p>
<p style="Normal" xid="854">yarn add apollo-boost react-apollo graphql</p>
<p style="Normal" xid="855"><c></c></p>
<p style="Normal" xid="856"><c></c></p>
<p style="Normal" xid="857">Voici un aper√ßu des packages que vous venez d'installer:</p>
<p style="Normal" xid="858"><c></c></p>
<p style="Normal" xid="859">apollo-boost offre une certaine commodit√© en regroupant plusieurs packages dont vous avez besoin lorsque vous travaillez avec Apollo Client:</p>
<p style="Normal" xid="860">    apollo-client: l√† o√π toute la magie op√®re</p>
<p style="Normal" xid="861">    apollo-cache-inmemory: Notre cache recommand√©</p>
<p style="Normal" xid="862">    apollo-link-http: Un lien Apollo pour l'extraction de donn√©es √† distance</p>
<p style="Normal" xid="863">    apollo-link-error: un lien Apollo pour la gestion des erreurs</p>
<p style="Normal" xid="864">    apollo-link-state: Un lien Apollo pour la gestion locale de l'√©tat</p>
<p style="Normal" xid="865">    graphql-tag: exporte la fonction gql pour vos requ√™tes et mutations</p>
<p style="Normal" xid="866">react-apollo contient les liaisons pour utiliser Apollo Client avec React.</p>
<p style="Normal" xid="867">graphql contient l'impl√©mentation de r√©f√©rence de GraphQL sur Facebook - Apollo Client utilise √©galement certaines de ses fonctionnalit√©s.</p>
<p style="Normal" xid="868"><c></c></p>
<p style="Normal" xid="869">Voil√†, vous √™tes pr√™t √† √©crire du code! üöÄ</p>
<p style="Normal" xid="870"><c></c></p>
<p style="Normal" xid="871">Configurer ApolloClient</p>
<p style="Normal" xid="872"><c></c></p>
<p style="Normal" xid="873">Apollo r√©sume toutes les logiques de mise en r√©seau de niveau inf√©rieur et fournit une interface agr√©able au serveur GraphQL. Contrairement √† l'utilisation des API REST, vous n'avez plus besoin de cr√©er vos propres requ√™tes HTTP - vous pouvez simplement √©crire des requ√™tes et des mutations et les envoyer √† l'aide d'une instance ApolloClient.</p>
<p style="Normal" xid="874"><c></c></p>
<p style="Normal" xid="875">La premi√®re chose que vous devez faire lorsque vous utilisez Apollo est de configurer votre instance ApolloClient. Il doit conna√Ætre le point de terminaison de votre API GraphQL afin de pouvoir g√©rer les connexions r√©seau.</p>
<p style="Normal" xid="876"><c></c></p>
<p style="Normal" xid="877"><c></c></p>
<p style="Normal" xid="878">Ouvrez src / index.js et remplacez le contenu par ce qui suit:</p>
<p style="Normal" xid="879"><c></c></p>
<p style="Normal" xid="880">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="881"><c></c></p>
<p style="Normal" xid="882">import React from 'react'</p>
<p style="Normal" xid="883">import ReactDOM from 'react-dom'</p>
<p style="Normal" xid="884">import './styles/index.css'</p>
<p style="Normal" xid="885">import App from './components/App'</p>
<p style="Normal" xid="886">import * as serviceWorker from './serviceWorker';</p>
<p style="Normal" xid="887"><c></c></p>
<p style="Normal" xid="888">// 1</p>
<p style="Normal" xid="889">import { ApolloProvider } from 'react-apollo'</p>
<p style="Normal" xid="890">import { ApolloClient } from 'apollo-client'</p>
<p style="Normal" xid="891">import { createHttpLink } from 'apollo-link-http'</p>
<p style="Normal" xid="892">import { InMemoryCache } from 'apollo-cache-inmemory'</p>
<p style="Normal" xid="893"><c></c></p>
<p style="Normal" xid="894"><c></c></p>
<p style="Normal" xid="895">// 2</p>
<p style="Normal" xid="896">const httpLink = createHttpLink({</p>
<p style="Normal" xid="897">uri: 'http://localhost:4000'</p>
<p style="Normal" xid="898">})</p>
<p style="Normal" xid="899"><c></c></p>
<p style="Normal" xid="900">// 3</p>
<p style="Normal" xid="901">const client = new ApolloClient({</p>
<p style="Normal" xid="902">link: httpLink,</p>
<p style="Normal" xid="903">cache: new InMemoryCache()</p>
<p style="Normal" xid="904">})</p>
<p style="Normal" xid="905"><c></c></p>
<p style="Normal" xid="906">// 4</p>
<p style="Normal" xid="907">ReactDOM.render(</p>
<p style="Normal" xid="908">&lt;ApolloProvider client={client}&gt;</p>
<p style="Normal" xid="909">&lt;App /&gt;</p>
<p style="Normal" xid="910">&lt;/ApolloProvider&gt;,</p>
<p style="Normal" xid="911">document.getElementById('root')</p>
<p style="Normal" xid="912">)</p>
<p style="Normal" xid="913">serviceWorker.unregister();</p>
<p style="Normal" xid="914"><c></c></p>
<p style="Normal" xid="915"><c></c></p>
<p style="Normal" xid="916">Remarque: Le projet g√©n√©r√© par create-react-app utilise des points-virgules et des guillemets doubles pour les cha√Ænes. Tout le code que vous allez ajouter n'utilisera pas de point-virgule et principalement des guillemets simples. Vous √™tes √©galement libre de supprimer les points-virgules existants et de remplacer les doubles par des guillemets simples üî•</p>
<p style="Normal" xid="917"><c></c></p>
<p style="Normal" xid="918">Essayons de comprendre ce qui se passe dans cet extrait de code:</p>
<p style="Normal" xid="919"><c></c></p>
<p style="Normal" xid="920">Vous importez les d√©pendances requises √† partir des packages install√©s.</p>
<p style="Normal" xid="921">Ici, vous cr√©ez le httpLink qui connectera votre instance ApolloClient √† l'API GraphQL, votre serveur GraphQL s'ex√©cutera sur http: // localhost: 4000.</p>
<p style="Normal" xid="922">Vous instanciez maintenant ApolloClient en passant le httpLink et une nouvelle instance d'un InMemoryCache.</p>
<p style="Normal" xid="923">Enfin, vous rendez le composant racine de votre application React. L'application est envelopp√©e du composant d'ordre sup√©rieur ApolloProvider qui est transmis au client comme accessoire.</p>
<p style="Normal" xid="924"><c></c></p>
<p style="Normal" xid="925">Voil√†, vous √™tes pr√™t √† commencer √† charger des donn√©es dans votre application! üòé</p>
<p style="Normal" xid="926"><c></c></p>
<p style="Normal" xid="927"><c></c></p>
<p style="Normal" xid="928">Backend</p>
<p style="Normal" xid="929"><c></c></p>
<p style="Normal" xid="930">T√©l√©chargement du code serveur</p>
<p style="Normal" xid="931"><c></c></p>
<p style="Normal" xid="932">Comme mentionn√© ci-dessus, pour le backend de ce didacticiel, vous utiliserez simplement le projet final du didacticiel Node.</p>
<p style="Normal" xid="933"><c></c></p>
<p style="Normal" xid="934">Dans votre terminal, acc√©dez au r√©pertoire hackernews-react-apollo et ex√©cutez les commandes suivantes:</p>
<p style="Normal" xid="935"><c></c></p>
<p style="Normal" xid="936">$</p>
<p style="Normal" xid="937">.../hackernews-react-apollo</p>
<p style="Normal" xid="938"><c></c></p>
<p style="Normal" xid="939">curl https://codeload.github.com/howtographql/react-apollo/tar.gz/starter | tar -xz --strip=1 react-apollo-starter/server</p>
<p style="Normal" xid="940"><c></c></p>
<p style="Normal" xid="941"><c></c></p>
<p style="Normal" xid="942">Vous avez maintenant un nouveau r√©pertoire appel√© serveur dans votre projet qui contient tout le code dont vous avez besoin pour votre backend.</p>
<p style="Normal" xid="943"><c></c></p>
<p style="Normal" xid="944">Avant de d√©marrer le serveur, comprenons rapidement les principaux composants:</p>
<p style="Normal" xid="945"><c></c></p>
<p style="Normal" xid="946">prisma: Ce r√©pertoire contient tous les fichiers li√©s √† votre configuration Prisma. Le client Prisma est utilis√© pour acc√©der √† la base de donn√©es dans vos r√©solveurs GraphQL (similaire √† un ORM).</p>
<p style="Normal" xid="947">    prisma.yml est le fichier de configuration racine de votre projet Prisma.</p>
<p style="Normal" xid="948">    datamodel.prisma d√©finit votre mod√®le de donn√©es dans le langage de d√©finition de sch√©ma GraphQL (SDL). Lorsque vous utilisez Prisma, le mod√®le de donn√©es est utilis√© pour d√©crire le sch√©ma de la base de donn√©es.</p>
<p style="Normal" xid="949"><c></c></p>
<p style="Normal" xid="950">src: ce r√©pertoire contient les fichiers source de votre serveur GraphQL.</p>
<p style="Normal" xid="951">    schema.graphql contient votre sch√©ma d'application. Le sch√©ma d'application d√©finit les op√©rations GraphQL que vous pouvez envoyer depuis le frontend. Nous allons examiner de plus pr√®s ce fichier dans un instant.</p>
<p style="Normal" xid="952">    g√©n√©r√© / prisma-client contient le client Prisma g√©n√©r√© automatiquement, une biblioth√®que d'acc√®s √† la base de donn√©es de type s√©curis√© (similaire √† un ORM).</p>
<p style="Normal" xid="953">    resolvers contient les fonctions de r√©solution pour les op√©rations d√©finies dans le sch√©ma d'application.</p>
<p style="Normal" xid="954">    index.js est le point d'entr√©e de votre serveur GraphQL.</p>
<p style="Normal" xid="955"><c></c></p>
<p style="Normal" xid="956">√Ä partir des fichiers mentionn√©s, seul le sch√©ma d'application d√©fini dans server / src / schema.graphql vous convient en tant que d√©veloppeur frontal. Ce fichier contient le sch√©ma GraphQL qui d√©finit toutes les op√©rations (requ√™tes, mutations et abonnements) que vous pouvez envoyer depuis votre application frontale.</p>
<p style="Normal" xid="957"><c></c></p>
<p style="Normal" xid="958">Voici √† quoi cela ressemble:</p>
<p style="Normal" xid="959"><c></c></p>
<p style="Normal" xid="960">hackernews-react-apollo/server/src/schema.graphql</p>
<p style="Normal" xid="961"><c></c></p>
<p style="Normal" xid="962"># import Link, Vote, LinkSubscriptionPayload, VoteSubscriptionPayload from "./generated/prisma.graphql"</p>
<p style="Normal" xid="963"><c></c></p>
<p style="Normal" xid="964">type Query {</p>
<p style="Normal" xid="965">feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!</p>
<p style="Normal" xid="966">}</p>
<p style="Normal" xid="967"><c></c></p>
<p style="Normal" xid="968">type Feed {</p>
<p style="Normal" xid="969">links: [Link!]!</p>
<p style="Normal" xid="970">count: Int!</p>
<p style="Normal" xid="971">}</p>
<p style="Normal" xid="972"><c></c></p>
<p style="Normal" xid="973">type Mutation {</p>
<p style="Normal" xid="974">post(url: String!, description: String!): Link!</p>
<p style="Normal" xid="975">signup(email: String!, password: String!, name: String!): AuthPayload</p>
<p style="Normal" xid="976">login(email: String!, password: String!): AuthPayload</p>
<p style="Normal" xid="977">vote(linkId: ID!): Vote</p>
<p style="Normal" xid="978">}</p>
<p style="Normal" xid="979"><c></c></p>
<p style="Normal" xid="980">type AuthPayload {</p>
<p style="Normal" xid="981">token: String</p>
<p style="Normal" xid="982">user: User</p>
<p style="Normal" xid="983">}</p>
<p style="Normal" xid="984"><c></c></p>
<p style="Normal" xid="985">type User {</p>
<p style="Normal" xid="986">id: ID!</p>
<p style="Normal" xid="987">name: String!</p>
<p style="Normal" xid="988">email: String!</p>
<p style="Normal" xid="989">}</p>
<p style="Normal" xid="990"><c></c></p>
<p style="Normal" xid="991">type Subscription {</p>
<p style="Normal" xid="992">newLink: LinkSubscriptionPayload</p>
<p style="Normal" xid="993">newVote: VoteSubscriptionPayload</p>
<p style="Normal" xid="994">}</p>
<p style="Normal" xid="995"><c></c></p>
<p style="Normal" xid="996">Ce sch√©ma permet les op√©rations suivantes:</p>
<p style="Normal" xid="997"><c></c></p>
<p style="Normal" xid="998">Requ√™tes:</p>
<p style="Normal" xid="999">    flux: r√©cup√®re tous les liens du backend, notez que cette requ√™te permet √©galement des arguments de filtrage, de tri et de pagination</p>
<p style="Normal" xid="1000"><c></c></p>
<p style="Normal" xid="1001">Mutations:</p>
<p style="Normal" xid="1002">    post: permet aux utilisateurs authentifi√©s de cr√©er un nouveau lien</p>
<p style="Normal" xid="1003">    inscription: cr√©er un compte pour un nouvel utilisateur</p>
<p style="Normal" xid="1004">    login: connectez un utilisateur existant</p>
<p style="Normal" xid="1005">    vote: permet aux utilisateurs authentifi√©s de voter pour un lien existant</p>
<p style="Normal" xid="1006"><c></c></p>
<p style="Normal" xid="1007">Abonnements:</p>
<p style="Normal" xid="1008">    newLink: recevez des mises √† jour en temps r√©el lorsqu'un nouveau lien est cr√©√©</p>
<p style="Normal" xid="1009">    newVote: Recevez des mises √† jour en temps r√©el lorsqu'un vote a √©t√© soumis</p>
<p style="Normal" xid="1010"><c></c></p>
<p style="Normal" xid="1011">Par exemple, vous pouvez envoyer la requ√™te de flux suivante pour r√©cup√©rer les 10 premiers liens du serveur:</p>
<p style="Normal" xid="1012"><c></c></p>
<p style="Normal" xid="1013"><c></c></p>
<p style="Normal" xid="1014">{</p>
<p style="Normal" xid="1015">feed(skip: 0, first: 10) {</p>
<p style="Normal" xid="1016">links {</p>
<p style="Normal" xid="1017">  description</p>
<p style="Normal" xid="1018">  url</p>
<p style="Normal" xid="1019">  postedBy {</p>
<p style="Normal" xid="1020">    name</p>
<p style="Normal" xid="1021">  }</p>
<p style="Normal" xid="1022">}</p>
<p style="Normal" xid="1023">}</p>
<p style="Normal" xid="1024">}</p>
<p style="Normal" xid="1025"><c></c></p>
<p style="Normal" xid="1026">R√©sultats de recherche</p>
<p style="Normal" xid="1027">R√©sultat de traduction</p>
<p style="Normal" xid="1028">Anglais</p>
<p style="Normal" xid="1029">Fran√ßais</p>
<p style="Normal" xid="1030"><c></c></p>
<p style="Normal" xid="1031">Ou la mutation d'inscription pour cr√©er un nouvel utilisateur:</p>
<p style="Normal" xid="1032"><c></c></p>
<p style="Normal" xid="1033">mutation {</p>
<p style="Normal" xid="1034">signup(</p>
<p style="Normal" xid="1035">name: "Sarah",</p>
<p style="Normal" xid="1036">email: "sarah@graph.cool",</p>
<p style="Normal" xid="1037">password: "graphql"</p>
<p style="Normal" xid="1038">) {</p>
<p style="Normal" xid="1039">token</p>
<p style="Normal" xid="1040">user {</p>
<p style="Normal" xid="1041">  id</p>
<p style="Normal" xid="1042">}</p>
<p style="Normal" xid="1043">}</p>
<p style="Normal" xid="1044">}</p>
<p style="Normal" xid="1045"><c></c></p>
<p style="Normal" xid="1046"><c></c></p>
<p style="Normal" xid="1047">D√©ploiement du service de base de donn√©es Prisma</p>
<p style="Normal" xid="1048"><c></c></p>
<p style="Normal" xid="1049">Il reste une chose √† faire avant de pouvoir d√©marrer votre serveur et commencer √† lui envoyer des requ√™tes et des mutations. Le projet Prisma doit √™tre d√©ploy√© pour que le serveur GraphQL puisse y acc√©der.</p>
<p style="Normal" xid="1050"><c></c></p>
<p style="Normal" xid="1051">Pour d√©ployer le service, il vous suffit d'installer les d√©pendances du serveur et d'appeler la commande prisma deploy dans le r√©pertoire du serveur.</p>
<p style="Normal" xid="1052"><c></c></p>
<p style="Normal" xid="1053">In your terminal, navigate to the server directory and execute the following commands:</p>
<p style="Normal" xid="1054"><c></c></p>
<p style="Normal" xid="1055"><c></c></p>
<p style="Normal" xid="1056">.../hackernews-react-apollo/server</p>
<p style="Normal" xid="1057"><c></c></p>
<p style="Normal" xid="1058">cd server</p>
<p style="Normal" xid="1059">yarn install</p>
<p style="Normal" xid="1060">yarn prisma deploy</p>
<p style="Normal" xid="1061"><c></c></p>
<p style="Normal" xid="1062">Notez que vous pouvez √©galement omettre le fil prisma dans la commande ci-dessus si la CLI prisma est install√©e globalement sur votre machine (ce que vous pouvez faire avec le fil global add prisma). Dans ce cas, vous pouvez simplement ex√©cuter prisma deploy.</p>
<p style="Normal" xid="1063"><c></c></p>
<p style="Normal" xid="1064">Lorsque vous √™tes invit√© √† indiquer o√π vous souhaitez d√©finir / d√©ployer votre service, s√©lectionnez Serveur de d√©monstration (il n√©cessite une connexion, vous pouvez vous connecter avec votre compte GitHub), puis choisissez une r√©gion, par ex. demo-us1 ou demo-eu1. Le serveur de d√©monstration comprend une instance gratuite d'une base de donn√©es AWS Aurora. (Si Docker est install√©, vous pouvez √©galement d√©ployer localement.)</p>
<p style="Normal" xid="1065"><c></c></p>
<p style="Normal" xid="1066">Remarque: Une fois la commande termin√©e, la CLI √©crit le point de terminaison de l'API Prisma dans votre prisma.yml. Il ressemblera √† ceci: https://eu1.prisma.sh/john-doe/hackernews-node/dev.</p>
<p style="Normal" xid="1067"><c></c></p>
<p style="Normal" xid="1068">Explorer le serveur</p>
<p style="Normal" xid="1069"><c></c></p>
<p style="Normal" xid="1070">Avec le point de terminaison Prisma appropri√© en place, vous pouvez maintenant explorer le serveur!</p>
<p style="Normal" xid="1071"><c></c></p>
<p style="Normal" xid="1072">Acc√©dez au r√©pertoire du serveur et ex√©cutez les commandes suivantes pour d√©marrer le serveur:</p>
<p style="Normal" xid="1073"><c></c></p>
<p style="Normal" xid="1074">.../hackernews-react-apollo/server</p>
<p style="Normal" xid="1075"><c></c></p>
<p style="Normal" xid="1076">yarn start</p>
<p style="Normal" xid="1077"><c></c></p>
<p style="Normal" xid="1078"><c></c></p>
<p style="Normal" xid="1079">Le d√©but de fil ex√©cute le script de d√©marrage d√©fini dans package.json. Le script d√©marre d'abord le serveur (qui s'ex√©cute ensuite sur http: // localhost: 4000), puis ouvre un terrain de jeu GraphQL pour que vous puissiez explorer et travailler avec l'API.</p>
<p style="Normal" xid="1080"><c></c></p>
<p style="Normal" xid="1081"><c></c></p>
<p style="Normal" xid="1082"><c></c></p>
<p style="Normal" xid="1083">Un Playground est un ¬´IDE GraphQL¬ª, fournissant un environnement interactif qui permet d'envoyer des requ√™tes, des mutations et des abonnements √† votre API GraphQL. Il est similaire √† un outil comme Postman que vous connaissez peut-√™tre en travaillant avec les API REST, mais offre de nombreux avantages suppl√©mentaires.</p>
<p style="Normal" xid="1084"><c></c></p>
<p style="Normal" xid="1085">La premi√®re chose √† noter √† propos de Playground est qu'il dispose d'une documentation int√©gr√©e pour son API GraphQL. Cette documentation est g√©n√©r√©e sur la base du sch√©ma GraphQL et peut √™tre ouverte en cliquant sur le bouton vert SCHEMA sur le bord droit du Playground. Par cons√©quent, il vous montre les m√™mes informations que vous avez vues dans le sch√©ma d'application ci-dessus:</p>
<p style="Normal" xid="1086"><c></c></p>
<p style="Normal" xid="1087"><c></c></p>
<p style="Normal" xid="1088"><c></c></p>
<p style="Normal" xid="1089"><c></c></p>
<p style="Normal" xid="1090"><c></c></p>
<p style="Normal" xid="1091"><c></c></p>
<p style="Normal" xid="1092">Le volet gauche du Playground est l'√©diteur que vous pouvez utiliser pour √©crire vos requ√™tes, mutations et abonnements. Une fois que vous avez cliqu√© sur le bouton de lecture au milieu, votre demande est envoy√©e et la r√©ponse du serveur s'affiche dans le volet de r√©sultats √† droite.</p>
<p style="Normal" xid="1093"><c></c></p>
<p style="Normal" xid="1094">Copiez les deux mutations suivantes dans le volet de l'√©diteur - assurez-vous que le Playground par d√©faut du projet d'application est s√©lectionn√© dans le menu de gauche:</p>
<p style="Normal" xid="1095"><c></c></p>
<p style="Normal" xid="1096"><c></c></p>
<p style="Normal" xid="1097"><c></c></p>
<p style="Normal" xid="1098">mutation CreatePrismaLink {</p>
<p style="Normal" xid="1099">post(</p>
<p style="Normal" xid="1100">description: "Prisma turns your database into a GraphQL API üòé",</p>
<p style="Normal" xid="1101">url: "https://www.prismagraphql.com"</p>
<p style="Normal" xid="1102">) {</p>
<p style="Normal" xid="1103">id</p>
<p style="Normal" xid="1104">}</p>
<p style="Normal" xid="1105">}</p>
<p style="Normal" xid="1106"><c></c></p>
<p style="Normal" xid="1107">mutation CreateApolloLink {</p>
<p style="Normal" xid="1108">post(</p>
<p style="Normal" xid="1109">description: "The best GraphQL client for React",</p>
<p style="Normal" xid="1110">url: "https://www.apollographql.com/docs/react/"</p>
<p style="Normal" xid="1111">) {</p>
<p style="Normal" xid="1112">id</p>
<p style="Normal" xid="1113">}</p>
<p style="Normal" xid="1114">}</p>
<p style="Normal" xid="1115"><c></c></p>
<p style="Normal" xid="1116"><c></c></p>
<p style="Normal" xid="1117">√âtant donn√© que vous ajoutez deux mutations √† l'√©diteur √† la fois, les mutations doivent avoir des noms d'op√©ration. Dans votre cas, il s'agit de CreatePrismaLink et CreateApolloLink.</p>
<p style="Normal" xid="1118"><c></c></p>
<p style="Normal" xid="1119">Cliquez sur le bouton Lecture au milieu des deux volets et s√©lectionnez une seule fois chaque mutation dans la liste d√©roulante.</p>
<p style="Normal" xid="1120"><c></c></p>
<p style="Normal" xid="1121">Cela cr√©e deux nouveaux enregistrements Link dans la base de donn√©es. Vous pouvez v√©rifier que les mutations ont r√©ellement fonctionn√© en envoyant la requ√™te suivante dans le Playground d√©j√† ouvert:</p>
<p style="Normal" xid="1122"><c></c></p>
<p style="Normal" xid="1123">{</p>
<p style="Normal" xid="1124">feed {</p>
<p style="Normal" xid="1125">links {</p>
<p style="Normal" xid="1126">  id</p>
<p style="Normal" xid="1127">  description</p>
<p style="Normal" xid="1128">  url</p>
<p style="Normal" xid="1129">}</p>
<p style="Normal" xid="1130">}</p>
<p style="Normal" xid="1131">}</p>
<p style="Normal" xid="1132"><c></c></p>
<p style="Normal" xid="1133"><c></c></p>
<p style="Normal" xid="1134">Remarque: Vous pouvez √©galement envoyer la requ√™te de flux dans le Playground par d√©faut dans la section de l'application.</p>
<p style="Normal" xid="1135"><c></c></p>
<p style="Normal" xid="1136">Si tout s'est bien pass√©, la requ√™te renverra les donn√©es suivantes (les identifiants seront bien s√ªr diff√©rents dans votre cas car ils ont √©t√© g√©n√©r√©s par Prisma et sont globalement uniques):</p>
<p style="Normal" xid="1137"><c></c></p>
<p style="Normal" xid="1138">{</p>
<p style="Normal" xid="1139">"data": {</p>
<p style="Normal" xid="1140">"feed": {</p>
<p style="Normal" xid="1141">  "links": [</p>
<p style="Normal" xid="1142">    {</p>
<p style="Normal" xid="1143">      "id": "cjcnfwjeif1rx012483nh6utk",</p>
<p style="Normal" xid="1144">      "description": "The best GraphQL client",</p>
<p style="Normal" xid="1145">      "url": "https://www.apollographql.com/docs/react/"</p>
<p style="Normal" xid="1146">    },</p>
<p style="Normal" xid="1147">    {</p>
<p style="Normal" xid="1148">      "id": "cjcnfznzff1w601247iili50x",</p>
<p style="Normal" xid="1149">      "description": "Prisma turns your database into a GraphQL API üòé",</p>
<p style="Normal" xid="1150">      "url": "https://www.prismagraphql.com"</p>
<p style="Normal" xid="1151">    }</p>
<p style="Normal" xid="1152">  ]</p>
<p style="Normal" xid="1153">}</p>
<p style="Normal" xid="1154">}</p>
<p style="Normal" xid="1155">}</p>
<p style="Normal" xid="1156"><c></c></p>
<p style="Normal" xid="1157"><c></c></p>
<p style="Normal" xid="1158">Fantastique, votre serveur fonctionne! üëè</p>
<p style="Normal" xid="1159"><c></c></p>
<p style="Normal" xid="1160"><c></c></p>
<p style="Normal" xid="1161">/////////////Partie 2////////////////////////////////////////////////////////////</p>
<p style="Normal" xid="1162"><c></c></p>
<p style="Normal" xid="1163"><c></c></p>
<p style="Normal" xid="1164"><c></c></p>
<p style="Normal" xid="1165">Requ√™tes: chargement des liens</p>
<p style="Normal" xid="1166">Pr√©paration des composants React</p>
<p style="Normal" xid="1167"><c></c></p>
<p style="Normal" xid="1168">La premi√®re fonctionnalit√© que vous impl√©menterez dans l'application est le chargement et l'affichage d'une liste d'√©l√©ments Link. Vous progresserez dans la hi√©rarchie des composants React et commencerez par le composant qui restituera un seul lien.</p>
<p style="Normal" xid="1169"><c></c></p>
<p style="Normal" xid="1170">Cr√©ez un nouveau fichier appel√© Link.js dans le r√©pertoire des composants et ajoutez le code suivant:</p>
<p style="Normal" xid="1171"><c></c></p>
<p style="Normal" xid="1172">../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="1173"><c></c></p>
<p style="Normal" xid="1174">import React, { Component } from 'react'</p>
<p style="Normal" xid="1175"><c></c></p>
<p style="Normal" xid="1176">class Link extends Component {</p>
<p style="Normal" xid="1177">render() {</p>
<p style="Normal" xid="1178">return (</p>
<p style="Normal" xid="1179">  &lt;div&gt;</p>
<p style="Normal" xid="1180">    &lt;div&gt;</p>
<p style="Normal" xid="1181">      {this.props.link.description} ({this.props.link.url})</p>
<p style="Normal" xid="1182">    &lt;/div&gt;</p>
<p style="Normal" xid="1183">  &lt;/div&gt;</p>
<p style="Normal" xid="1184">)</p>
<p style="Normal" xid="1185">}</p>
<p style="Normal" xid="1186">}</p>
<p style="Normal" xid="1187"><c></c></p>
<p style="Normal" xid="1188">export default Link</p>
<p style="Normal" xid="1189"><c></c></p>
<p style="Normal" xid="1190"><c></c></p>
<p style="Normal" xid="1191">Il s'agit d'un simple composant R√©agissez qui a un lien dans ses accessoires et affiche la description et l'URL du lien. C'est de la tarte! üç∞</p>
<p style="Normal" xid="1192"><c></c></p>
<p style="Normal" xid="1193">Ensuite, vous allez impl√©menter le composant qui affiche une liste de liens.</p>
<p style="Normal" xid="1194"><c></c></p>
<p style="Normal" xid="1195"><c></c></p>
<p style="Normal" xid="1196">Encore une fois, dans le r√©pertoire des composants, allez-y et cr√©ez un nouveau fichier appel√© LinkList.js. Ajoutez ensuite le code suivant:</p>
<p style="Normal" xid="1197"><c></c></p>
<p style="Normal" xid="1198"><c></c></p>
<p style="Normal" xid="1199">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="1200"><c></c></p>
<p style="Normal" xid="1201">import React, { Component } from 'react'</p>
<p style="Normal" xid="1202">import Link from './Link'</p>
<p style="Normal" xid="1203"><c></c></p>
<p style="Normal" xid="1204">class LinkList extends Component {</p>
<p style="Normal" xid="1205">render() {</p>
<p style="Normal" xid="1206">const linksToRender = [</p>
<p style="Normal" xid="1207">  {</p>
<p style="Normal" xid="1208">    id: '1',</p>
<p style="Normal" xid="1209">    description: 'Prisma turns your database into a GraphQL API üòé',</p>
<p style="Normal" xid="1210">    url: 'https://www.prismagraphql.com',</p>
<p style="Normal" xid="1211">  },</p>
<p style="Normal" xid="1212">  {</p>
<p style="Normal" xid="1213">    id: '2',</p>
<p style="Normal" xid="1214">    description: 'The best GraphQL client',</p>
<p style="Normal" xid="1215">    url: 'https://www.apollographql.com/docs/react/',</p>
<p style="Normal" xid="1216">  },</p>
<p style="Normal" xid="1217">]</p>
<p style="Normal" xid="1218"><c></c></p>
<p style="Normal" xid="1219">return (</p>
<p style="Normal" xid="1220">  &lt;div&gt;{linksToRender.map(link =&gt; &lt;Link key={link.id} link={link} /&gt;)}&lt;/div&gt;</p>
<p style="Normal" xid="1221">)</p>
<p style="Normal" xid="1222">}</p>
<p style="Normal" xid="1223">}</p>
<p style="Normal" xid="1224"><c></c></p>
<p style="Normal" xid="1225">export default LinkList</p>
<p style="Normal" xid="1226"><c></c></p>
<p style="Normal" xid="1227"><c></c></p>
<p style="Normal" xid="1228">Ici, vous utilisez des donn√©es fictives locales pour l'instant pour vous assurer que la configuration des composants fonctionne. Vous allez bient√¥t remplacer cela par des donn√©es r√©elles charg√©es depuis le serveur - patience, jeune Padawan!</p>
<p style="Normal" xid="1229"><c></c></p>
<p style="Normal" xid="1230"><c></c></p>
<p style="Normal" xid="1231"><c></c></p>
<p style="Normal" xid="1232"><c></c></p>
<p style="Normal" xid="1233">Pour terminer la configuration, ouvrez App.js et remplacez le contenu actuel par ce qui suit:</p>
<p style="Normal" xid="1234"><c></c></p>
<p style="Normal" xid="1235"><c></c></p>
<p style="Normal" xid="1236">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1237"><c></c></p>
<p style="Normal" xid="1238">import React, { Component } from 'react'</p>
<p style="Normal" xid="1239">import LinkList from './LinkList'</p>
<p style="Normal" xid="1240"><c></c></p>
<p style="Normal" xid="1241">class App extends Component {</p>
<p style="Normal" xid="1242">render() {</p>
<p style="Normal" xid="1243">return &lt;LinkList /&gt;</p>
<p style="Normal" xid="1244">}</p>
<p style="Normal" xid="1245">}</p>
<p style="Normal" xid="1246"><c></c></p>
<p style="Normal" xid="1247">export default App</p>
<p style="Normal" xid="1248"><c></c></p>
<p style="Normal" xid="1249"><c></c></p>
<p style="Normal" xid="1250"><c></c></p>
<p style="Normal" xid="1251">Ex√©cutez l'application pour v√©rifier si tout fonctionne jusqu'√† pr√©sent! L'application devrait maintenant afficher les deux liens du tableau linksToRender:</p>
<p style="Normal" xid="1252"><c></c></p>
<p style="Normal" xid="1253"><c></c></p>
<p style="Normal" xid="1254">√âcriture de la requ√™te GraphQL</p>
<p style="Normal" xid="1255"><c></c></p>
<p style="Normal" xid="1256">Vous allez ensuite charger les liens r√©els stock√©s dans la base de donn√©es. La premi√®re chose que vous devez faire pour cela est de d√©finir la requ√™te GraphQL que vous souhaitez envoyer √† l'API.</p>
<p style="Normal" xid="1257"><c></c></p>
<p style="Normal" xid="1258">Voici √† quoi cela ressemble:</p>
<p style="Normal" xid="1259"><c></c></p>
<p style="Normal" xid="1260">{</p>
<p style="Normal" xid="1261">feed {</p>
<p style="Normal" xid="1262">links {</p>
<p style="Normal" xid="1263">  id</p>
<p style="Normal" xid="1264">  createdAt</p>
<p style="Normal" xid="1265">  description</p>
<p style="Normal" xid="1266">  url</p>
<p style="Normal" xid="1267">}</p>
<p style="Normal" xid="1268">}</p>
<p style="Normal" xid="1269">}</p>
<p style="Normal" xid="1270"><c></c></p>
<p style="Normal" xid="1271">Vous pouvez maintenant simplement ex√©cuter cette requ√™te dans un Playground (par rapport au sch√©ma d'application) et r√©cup√©rer les r√©sultats depuis votre serveur GraphQL. Mais comment pouvez-vous l'utiliser dans votre code JavaScript?</p>
<p style="Normal" xid="1272">Requ√™tes avec Apollo Client</p>
<p style="Normal" xid="1273"><c></c></p>
<p style="Normal" xid="1274">Lorsque vous utilisez Apollo, vous avez deux fa√ßons d'envoyer des requ√™tes au serveur.</p>
<p style="Normal" xid="1275"><c></c></p>
<p style="Normal" xid="1276">La premi√®re consiste √† utiliser directement la m√©thode de requ√™te directement sur ApolloClient. C'est un moyen tr√®s direct de r√©cup√©rer des donn√©es et vous permettra de traiter la r√©ponse comme une promesse.</p>
<p style="Normal" xid="1277"><c></c></p>
<p style="Normal" xid="1278">Un exemple pratique ressemblerait √† ceci:</p>
<p style="Normal" xid="1279"><c></c></p>
<p style="Normal" xid="1280">client.query({</p>
<p style="Normal" xid="1281">query: gql`</p>
<p style="Normal" xid="1282">{</p>
<p style="Normal" xid="1283">  feed {</p>
<p style="Normal" xid="1284">    links {</p>
<p style="Normal" xid="1285">      id</p>
<p style="Normal" xid="1286">    }</p>
<p style="Normal" xid="1287">  }</p>
<p style="Normal" xid="1288">}</p>
<p style="Normal" xid="1289">`</p>
<p style="Normal" xid="1290">}).then(response =&gt; console.log(response.data.allLinks))</p>
<p style="Normal" xid="1291"><c></c></p>
<p style="Normal" xid="1292">Cependant, une mani√®re plus d√©clarative lors de l'utilisation de React consiste √† utiliser la nouvelle API de prop de rendu d'Apollo pour g√©rer vos donn√©es GraphQL √† l'aide de composants.</p>
<p style="Normal" xid="1293"><c></c></p>
<p style="Normal" xid="1294">Avec cette approche, tout ce que vous devez faire en mati√®re de r√©cup√©ration de donn√©es est de passer la requ√™te GraphQL en tant que prop et le composant &lt;Query /&gt; r√©cup√©rera les donn√©es pour vous sous le capot, puis il les rendra disponibles dans la prop de rendu du composant une fonction.</p>
<p style="Normal" xid="1295"><c></c></p>
<p style="Normal" xid="1296">En g√©n√©ral, le processus pour vous d'ajouter une logique de r√©cup√©ration de donn√©es sera tr√®s similaire √† chaque fois:</p>
<p style="Normal" xid="1297"><c></c></p>
<p style="Normal" xid="1298">√©crire la requ√™te en tant que constante JavaScript √† l'aide de la fonction d'analyseur gql</p>
<p style="Normal" xid="1299">utiliser le composant &lt;Query /&gt; en passant la requ√™te GraphQL comme prop</p>
<p style="Normal" xid="1300">acc√©der aux r√©sultats de la requ√™te qui sont inject√©s dans la fonction de rendu prop du composant</p>
<p style="Normal" xid="1301"><c></c></p>
<p style="Normal" xid="1302">Ouvrez LinkList.js et ajoutez la requ√™te en haut du fichier:</p>
<p style="Normal" xid="1303"><c></c></p>
<p style="Normal" xid="1304"><c></c></p>
<p style="Normal" xid="1305">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="1306"><c></c></p>
<p style="Normal" xid="1307">const FEED_QUERY = gql`</p>
<p style="Normal" xid="1308">{</p>
<p style="Normal" xid="1309">feed {</p>
<p style="Normal" xid="1310">  links {</p>
<p style="Normal" xid="1311">    id</p>
<p style="Normal" xid="1312">    createdAt</p>
<p style="Normal" xid="1313">    url</p>
<p style="Normal" xid="1314">    description</p>
<p style="Normal" xid="1315">  }</p>
<p style="Normal" xid="1316">}</p>
<p style="Normal" xid="1317">}</p>
<p style="Normal" xid="1318">`</p>
<p style="Normal" xid="1319"><c></c></p>
<p style="Normal" xid="1320">Remplacez √©galement la d√©claration actuelle par ce qui suit:</p>
<p style="Normal" xid="1321"><c></c></p>
<p style="Normal" xid="1322"><c></c></p>
<p style="Normal" xid="1323">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="1324"><c></c></p>
<p style="Normal" xid="1325">return (</p>
<p style="Normal" xid="1326">&lt;Query query={FEED_QUERY}&gt;</p>
<p style="Normal" xid="1327">{() =&gt; linksToRender.map(link =&gt; &lt;Link key={link.id} link={link} /&gt;)}</p>
<p style="Normal" xid="1328">&lt;/Query&gt;</p>
<p style="Normal" xid="1329">)</p>
<p style="Normal" xid="1330"><c></c></p>
<p style="Normal" xid="1331"><c></c></p>
<p style="Normal" xid="1332">Que se passe t-il ici?</p>
<p style="Normal" xid="1333"><c></c></p>
<p style="Normal" xid="1334">Tout d'abord, vous cr√©ez la constante JavaScript appel√©e FEED_QUERY qui stocke la requ√™te. La fonction gql est utilis√©e pour analyser la cha√Æne ordinaire qui contient le code GraphQL (si vous n'√™tes pas familier avec la syntaxe de backtick, vous pouvez lire les litt√©raux de mod√®le balis√©s de JavaScript).</p>
<p style="Normal" xid="1335">Enfin, vous encapsulez le code renvoy√© avec le composant &lt;Query /&gt; en passant FEED_QUERY comme accessoire.</p>
<p style="Normal" xid="1336"><c></c></p>
<p style="Normal" xid="1337">Remarque: notez que nous renvoyons linksToRender en tant que r√©sultat de fonction, cela est d√ª √† la fonction de rendu fournie par le composant &lt;Query /&gt;.</p>
<p style="Normal" xid="1338"><c></c></p>
<p style="Normal" xid="1339"><c></c></p>
<p style="Normal" xid="1340">Pour que ce code fonctionne, vous devez √©galement importer les d√©pendances correspondantes. Ajoutez les deux lignes suivantes en haut du fichier, juste en dessous des autres instructions d'importation:</p>
<p style="Normal" xid="1341"><c></c></p>
<p style="Normal" xid="1342">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="1343"><c></c></p>
<p style="Normal" xid="1344">import { Query } from 'react-apollo'</p>
<p style="Normal" xid="1345">import gql from 'graphql-tag'</p>
<p style="Normal" xid="1346"><c></c></p>
<p style="Normal" xid="1347">G√©nial, c'est tout votre code de r√©cup√©ration de donn√©es, pouvez-vous croire cela? Mais comme vous pouvez le voir, il ne re√ßoit pas de donn√©es de serveur, alors faisons en sorte que cela se produise   </p>
<p style="Normal" xid="1348"><c></c></p>
<p style="Normal" xid="1349">Vous pouvez maintenant enfin supprimer les donn√©es fictives et rendre les liens r√©els qui sont r√©cup√©r√©s du serveur gr√¢ce √† la fonction &lt;Query /&gt; render prop.</p>
<p style="Normal" xid="1350"><c></c></p>
<p style="Normal" xid="1351">Toujours dans LinkList.js, mettez √† jour le composant comme suit:</p>
<p style="Normal" xid="1352"><c></c></p>
<p style="Normal" xid="1353">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="1354"><c></c></p>
<p style="Normal" xid="1355">class LinkList extends Component {</p>
<p style="Normal" xid="1356">render() {</p>
<p style="Normal" xid="1357">return (</p>
<p style="Normal" xid="1358">  &lt;Query query={FEED_QUERY}&gt;</p>
<p style="Normal" xid="1359">    {({ loading, error, data }) =&gt; {</p>
<p style="Normal" xid="1360">      if (loading) return &lt;div&gt;Fetching&lt;/div&gt;</p>
<p style="Normal" xid="1361">      if (error) return &lt;div&gt;Error&lt;/div&gt;</p>
<p style="Normal" xid="1362"><c></c></p>
<p style="Normal" xid="1363">      const linksToRender = data.feed.links</p>
<p style="Normal" xid="1364"><c></c></p>
<p style="Normal" xid="1365">      return (</p>
<p style="Normal" xid="1366">        &lt;div&gt;</p>
<p style="Normal" xid="1367">          {linksToRender.map(link =&gt; &lt;Link key={link.id} link={link} /&gt;)}</p>
<p style="Normal" xid="1368">        &lt;/div&gt;</p>
<p style="Normal" xid="1369">      )</p>
<p style="Normal" xid="1370">    }}</p>
<p style="Normal" xid="1371">  &lt;/Query&gt;</p>
<p style="Normal" xid="1372">)</p>
<p style="Normal" xid="1373">}</p>
<p style="Normal" xid="1374">}</p>
<p style="Normal" xid="1375"><c></c></p>
<p style="Normal" xid="1376">et parcourons ce qui se passe dans ce code. Comme pr√©vu, Apollo a inject√© plusieurs accessoires dans la fonction de rendu du composant. Ces accessoires fournissent eux-m√™mes des informations sur l'√©tat de la demande de r√©seau:</p>
<p style="Normal" xid="1377"><c></c></p>
<p style="Normal" xid="1378">chargement: est vrai tant que la demande est toujours en cours et que la r√©ponse n'a pas √©t√© re√ßue.</p>
<p style="Normal" xid="1379">erreur: en cas d'√©chec de la demande, ce champ contiendra des informations sur ce qui s'est exactement pass√©.</p>
<p style="Normal" xid="1380">donn√©es: il s'agit des donn√©es r√©elles re√ßues du serveur. Il a la propri√©t√© links qui repr√©sente une liste d'√©l√©ments Link.</p>
<p style="Normal" xid="1381"><c></c></p>
<p style="Normal" xid="1382">En fait, les accessoires inject√©s contiennent encore plus de fonctionnalit√©s. Vous pouvez en savoir plus dans la pr√©sentation de l'API.</p>
<p style="Normal" xid="1383"><c></c></p>
<p style="Normal" xid="1384">C'est √ßa! Vous devriez voir exactement le m√™me √©cran qu'auparavant.</p>
<p style="Normal" xid="1385"><c></c></p>
<p style="Normal" xid="1386">Remarque: Si le navigateur sur http: // localhost: 4000 indique uniquement une erreur et est vide sinon, vous avez probablement oubli√© de faire fonctionner votre serveur. Notez que pour que l'application fonctionne, le serveur doit √©galement fonctionner - vous avez donc deux processus en cours d'ex√©cution dans votre terminal: un pour le serveur et un pour l'application React. Pour d√©marrer le serveur, acc√©dez au !r√©pertoire du serveur et ex√©cutez yarn start.</p>
<p style="Normal" xid="1387"><c></c></p>
<p style="Normal" xid="1388">///////////////////////////Partie 3///////////////////////////////</p>
<p style="Normal" xid="1389"><c></c></p>
<p style="Normal" xid="1390"><c></c></p>
<p style="Normal" xid="1391">Mutations: cr√©ation de liens</p>
<p style="Normal" xid="1392"><c></c></p>
<p style="Normal" xid="1393">Dans cette section, vous apprendrez comment envoyer des mutations avec Apollo. Ce n'est pas vraiment diff√©rent de l'envoi de requ√™tes et suit les trois m√™mes √©tapes que celles mentionn√©es pr√©c√©demment, avec des diff√©rences mineures (mais logiques) dans les deux derni√®res √©tapes:</p>
<p style="Normal" xid="1394"><c></c></p>
<p style="Normal" xid="1395">√©crire la mutation en tant que constante JavaScript √† l'aide de la fonction d'analyseur gql</p>
<p style="Normal" xid="1396">utiliser le composant &lt;Mutation /&gt; en passant la mutation GraphQL et les variables (si n√©cessaire) comme accessoires</p>
<p style="Normal" xid="1397">utiliser la fonction de mutation qui est inject√©e dans la fonction de prop de rendu du composant</p>
<p style="Normal" xid="1398"><c></c></p>
<p style="Normal" xid="1399"><c></c></p>
<p style="Normal" xid="1400">Pr√©paration des composants React</p>
<p style="Normal" xid="1401"><c></c></p>
<p style="Normal" xid="1402">Comme pr√©c√©demment, commen√ßons par √©crire le composant React o√π les utilisateurs pourront ajouter de nouveaux liens.</p>
<p style="Normal" xid="1403"><c></c></p>
<p style="Normal" xid="1404">Cr√©ez un nouveau fichier dans le r√©pertoire src / components et appelez-le CreateLink.js. Collez-y ensuite le code suivant:</p>
<p style="Normal" xid="1405"><c></c></p>
<p style="Normal" xid="1406"><c></c></p>
<p style="Normal" xid="1407">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="1408"><c></c></p>
<p style="Normal" xid="1409">import React, { Component } from 'react'</p>
<p style="Normal" xid="1410"><c></c></p>
<p style="Normal" xid="1411">class CreateLink extends Component {</p>
<p style="Normal" xid="1412">state = {</p>
<p style="Normal" xid="1413">description: '',</p>
<p style="Normal" xid="1414">url: '',</p>
<p style="Normal" xid="1415">}</p>
<p style="Normal" xid="1416"><c></c></p>
<p style="Normal" xid="1417">render() {</p>
<p style="Normal" xid="1418">const { description, url } = this.state</p>
<p style="Normal" xid="1419">return (</p>
<p style="Normal" xid="1420">  &lt;div&gt;</p>
<p style="Normal" xid="1421">    &lt;div className="flex flex-column mt3"&gt;</p>
<p style="Normal" xid="1422">      &lt;input</p>
<p style="Normal" xid="1423">        className="mb2"</p>
<p style="Normal" xid="1424">        value={description}</p>
<p style="Normal" xid="1425">        onChange={e =&gt; this.setState({ description: e.target.value })}</p>
<p style="Normal" xid="1426">        type="text"</p>
<p style="Normal" xid="1427">        placeholder="A description for the link"</p>
<p style="Normal" xid="1428">      /&gt;</p>
<p style="Normal" xid="1429">      &lt;input</p>
<p style="Normal" xid="1430">        className="mb2"</p>
<p style="Normal" xid="1431">        value={url}</p>
<p style="Normal" xid="1432">        onChange={e =&gt; this.setState({ url: e.target.value })}</p>
<p style="Normal" xid="1433">        type="text"</p>
<p style="Normal" xid="1434">        placeholder="The URL for the link"</p>
<p style="Normal" xid="1435">      /&gt;</p>
<p style="Normal" xid="1436">    &lt;/div&gt;</p>
<p style="Normal" xid="1437">    &lt;button onClick={`... you'll implement this üîú`}&gt;Submit&lt;/button&gt;</p>
<p style="Normal" xid="1438">  &lt;/div&gt;</p>
<p style="Normal" xid="1439">)</p>
<p style="Normal" xid="1440">}</p>
<p style="Normal" xid="1441">}</p>
<p style="Normal" xid="1442"><c></c></p>
<p style="Normal" xid="1443">export default CreateLink</p>
<p style="Normal" xid="1444"><c></c></p>
<p style="Normal" xid="1445"><c></c></p>
<p style="Normal" xid="1446">Il s'agit d'une configuration standard pour un composant React avec deux champs de saisie o√π les utilisateurs peuvent fournir l'URL et la description du lien qu'ils souhaitent cr√©er. Les donn√©es saisies dans ces champs sont stock√©es dans l'√©tat du composant et seront utilis√©es lors de l'envoi de la mutation.</p>
<p style="Normal" xid="1447"><c></c></p>
<p style="Normal" xid="1448"><c></c></p>
<p style="Normal" xid="1449">√âcrire la mutation</p>
<p style="Normal" xid="1450"><c></c></p>
<p style="Normal" xid="1451">Mais comment pouvez-vous maintenant envoyer la mutation √† votre serveur? Suivons les trois √©tapes pr√©c√©dentes.</p>
<p style="Normal" xid="1452"><c></c></p>
<p style="Normal" xid="1453">Vous devez d'abord d√©finir la mutation dans votre code JavaScript et encapsuler votre composant avec le conteneur graphql. Vous le ferez de la m√™me mani√®re qu'avec la requ√™te pr√©c√©dente.</p>
<p style="Normal" xid="1454"><c></c></p>
<p style="Normal" xid="1455">Dans CreateLink.js, ajoutez l'instruction suivante en haut du fichier:</p>
<p style="Normal" xid="1456"><c></c></p>
<p style="Normal" xid="1457">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="1458"><c></c></p>
<p style="Normal" xid="1459">const POST_MUTATION = gql`</p>
<p style="Normal" xid="1460">mutation PostMutation($description: String!, $url: String!) {</p>
<p style="Normal" xid="1461">post(description: $description, url: $url) {</p>
<p style="Normal" xid="1462">  id</p>
<p style="Normal" xid="1463">  createdAt</p>
<p style="Normal" xid="1464">  url</p>
<p style="Normal" xid="1465">  description</p>
<p style="Normal" xid="1466">}</p>
<p style="Normal" xid="1467">}</p>
<p style="Normal" xid="1468">`</p>
<p style="Normal" xid="1469">Remplacez √©galement le bouton actuel par ce qui suit:</p>
<p style="Normal" xid="1470"><c></c></p>
<p style="Normal" xid="1471"><c></c></p>
<p style="Normal" xid="1472">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="1473"><c></c></p>
<p style="Normal" xid="1474">&lt;Mutation mutation={POST_MUTATION} variables={{ description, url }}&gt;</p>
<p style="Normal" xid="1475">{() =&gt; (</p>
<p style="Normal" xid="1476">&lt;button onClick={`... you'll implement this üîú`}&gt;</p>
<p style="Normal" xid="1477">  Submit</p>
<p style="Normal" xid="1478">&lt;/button&gt;</p>
<p style="Normal" xid="1479">)}</p>
<p style="Normal" xid="1480">&lt;/Mutation&gt;</p>
<p style="Normal" xid="1481"><c></c></p>
<p style="Normal" xid="1482"><c></c></p>
<p style="Normal" xid="1483">Examinons de plus pr√®s pour comprendre ce qui se passe:</p>
<p style="Normal" xid="1484"><c></c></p>
<p style="Normal" xid="1485">Vous cr√©ez d'abord la constante JavaScript appel√©e POST_MUTATION qui stocke la mutation.</p>
<p style="Normal" xid="1486">Maintenant, vous encapsulez l'√©l√©ment bouton en tant que r√©sultat de la fonction de rendu prop avec le composant &lt;Mutation /&gt; passant POST_MUTATION en tant que prop.</p>
<p style="Normal" xid="1487">Enfin, vous passez les √©tats de description et d'URL en tant que variables prop.</p>
<p style="Normal" xid="1488"><c></c></p>
<p style="Normal" xid="1489">Avant de continuer, vous devez importer les d√©pendances Apollo. Ajoutez ce qui suit en haut de CreateLink.js:</p>
<p style="Normal" xid="1490"><c></c></p>
<p style="Normal" xid="1491"><c></c></p>
<p style="Normal" xid="1492">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="1493"><c></c></p>
<p style="Normal" xid="1494">import { Mutation } from 'react-apollo'</p>
<p style="Normal" xid="1495">import gql from 'graphql-tag'</p>
<p style="Normal" xid="1496"><c></c></p>
<p style="Normal" xid="1497">Voyons la mutation en action!</p>
<p style="Normal" xid="1498"><c></c></p>
<p style="Normal" xid="1499">Toujours dans CreateLink.js, remplacez le composant &lt;Mutation /&gt; comme suit:</p>
<p style="Normal" xid="1500"><c></c></p>
<p style="Normal" xid="1501"><c></c></p>
<p style="Normal" xid="1502">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="1503"><c></c></p>
<p style="Normal" xid="1504">&lt;Mutation mutation={POST_MUTATION} variables={{ description, url }}&gt;</p>
<p style="Normal" xid="1505">{postMutation =&gt; &lt;button onClick={postMutation}&gt;Submit&lt;/button&gt;}</p>
<p style="Normal" xid="1506">&lt;/Mutation&gt;</p>
<p style="Normal" xid="1507"><c></c></p>
<p style="Normal" xid="1508"><c></c></p>
<p style="Normal" xid="1509">Comme promis, tout ce que vous devez faire est d'appeler la fonction qu'Apollo injecte dans la fonction de rendu du composant &lt;Mutation /&gt; √† l'int√©rieur de l'√©v√©nement du bouton onClick.</p>
<p style="Normal" xid="1510"><c></c></p>
<p style="Normal" xid="1511">Allez-y et voyez si la mutation fonctionne. Pour pouvoir tester le code, ouvrez App.js et modifiez le rendu pour qu'il se pr√©sente comme suit:</p>
<p style="Normal" xid="1512"><c></c></p>
<p style="Normal" xid="1513"><c></c></p>
<p style="Normal" xid="1514">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1515"><c></c></p>
<p style="Normal" xid="1516">render() {</p>
<p style="Normal" xid="1517">return &lt;CreateLink /&gt;</p>
<p style="Normal" xid="1518">}</p>
<p style="Normal" xid="1519"><c></c></p>
<p style="Normal" xid="1520">Ensuite, importez le composant CreateLink en ajoutant l'instruction suivante en haut d'App.js:</p>
<p style="Normal" xid="1521"><c></c></p>
<p style="Normal" xid="1522"><c></c></p>
<p style="Normal" xid="1523">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1524"><c></c></p>
<p style="Normal" xid="1525">import CreateLink from './CreateLink'</p>
<p style="Normal" xid="1526"><c></c></p>
<p style="Normal" xid="1527">Maintenant, lancez le d√©marrage du fil, vous verrez l'√©cran suivant:</p>
<p style="Normal" xid="1528"><c></c></p>
<p style="Normal" xid="1529"><c></c></p>
<p style="Normal" xid="1530"><c></c></p>
<p style="Normal" xid="1531"><c></c></p>
<p style="Normal" xid="1532"><c></c></p>
<p style="Normal" xid="1533"><c></c></p>
<p style="Normal" xid="1534"><c></c></p>
<p style="Normal" xid="1535"><c></c></p>
<p style="Normal" xid="1536"><c></c></p>
<p style="Normal" xid="1537"><c></c></p>
<p style="Normal" xid="1538"><c></c></p>
<p style="Normal" xid="1539"><c></c></p>
<p style="Normal" xid="1540">Deux champs de saisie et un bouton de soumission - pas tr√®s joli mais fonctionnel.</p>
<p style="Normal" xid="1541"><c></c></p>
<p style="Normal" xid="1542">Saisissez des donn√©es dans les champs, par exemple:</p>
<p style="Normal" xid="1543"><c></c></p>
<p style="Normal" xid="1544">Description: La meilleure ressource d'apprentissage pour GraphQL</p>
<p style="Normal" xid="1545">URL: www.howtographql.com</p>
<p style="Normal" xid="1546"><c></c></p>
<p style="Normal" xid="1547">Cliquez ensuite sur le bouton soumettre. Vous n'obtiendrez aucun retour visuel dans l'interface utilisateur, mais voyons si la requ√™te a r√©ellement fonctionn√© en v√©rifiant la liste actuelle des liens dans un Playground.</p>
<p style="Normal" xid="1548"><c></c></p>
<p style="Normal" xid="1549">Vous pouvez √† nouveau ouvrir un Playground en acc√©dant √† http: // localhost: 4000 dans votre navigateur. Envoyez ensuite la requ√™te suivante:</p>
<p style="Normal" xid="1550"><c></c></p>
<p style="Normal" xid="1551"># Try to write your query here</p>
<p style="Normal" xid="1552">{</p>
<p style="Normal" xid="1553">feed {</p>
<p style="Normal" xid="1554">links {</p>
<p style="Normal" xid="1555">  description</p>
<p style="Normal" xid="1556">  url</p>
<p style="Normal" xid="1557">}</p>
<p style="Normal" xid="1558">}</p>
<p style="Normal" xid="1559">}</p>
<p style="Normal" xid="1560"><c></c></p>
<p style="Normal" xid="1561">Vous verrez la r√©ponse du serveur suivante:</p>
<p style="Normal" xid="1562"><c></c></p>
<p style="Normal" xid="1563">{</p>
<p style="Normal" xid="1564">"data": {</p>
<p style="Normal" xid="1565">"feed": {</p>
<p style="Normal" xid="1566">  "links": [</p>
<p style="Normal" xid="1567">    // ...</p>
<p style="Normal" xid="1568">    {</p>
<p style="Normal" xid="1569">      "description": "The best learning resource for GraphQL",</p>
<p style="Normal" xid="1570">      "url": "www.howtographql.com"</p>
<p style="Normal" xid="1571">    }</p>
<p style="Normal" xid="1572">  ]</p>
<p style="Normal" xid="1573">}</p>
<p style="Normal" xid="1574">}</p>
<p style="Normal" xid="1575">}</p>
<p style="Normal" xid="1576"><c></c></p>
<p style="Normal" xid="1577"><c></c></p>
<p style="Normal" xid="1578">Impressionnant! La mutation fonctionne, excellent travail! üí™</p>
<p style="Normal" xid="1579"><c></c></p>
<p style="Normal" xid="1580"><c></c></p>
<p style="Normal" xid="1581"><c></c></p>
<p style="Normal" xid="1582">////////////////////////Partie 4 /////////////////////////////</p>
<p style="Normal" xid="1583"><c></c></p>
<p style="Normal" xid="1584"><c></c></p>
<p style="Normal" xid="1585">Routing : </p>
<p style="Normal" xid="1586"><c></c></p>
<p style="Normal" xid="1587"><c></c></p>
<p style="Normal" xid="1588">Dans cette section, vous apprendrez √† utiliser la biblioth√®que react-router avec Apollo pour impl√©menter certaines fonctionnalit√©s de navigation!</p>
<p style="Normal" xid="1589"><c></c></p>
<p style="Normal" xid="1590">Installer les d√©pendances</p>
<p style="Normal" xid="1591"><c></c></p>
<p style="Normal" xid="1592">Ajoutez d'abord les d√©pendances requises √† l'application. Ouvrez un terminal, acc√©dez au r√©pertoire de votre projet et saisissez:</p>
<p style="Normal" xid="1593"><c></c></p>
<p style="Normal" xid="1594">.../hackernews-react-apollo</p>
<p style="Normal" xid="1595"><c></c></p>
<p style="Normal" xid="1596">yarn add react-router react-router-dom</p>
<p style="Normal" xid="1597"><c></c></p>
<p style="Normal" xid="1598"><c></c></p>
<p style="Normal" xid="1599">Cr√©er un en-t√™te</p>
<p style="Normal" xid="1600"><c></c></p>
<p style="Normal" xid="1601">Avant de passer √† la configuration des diff√©rents itin√©raires pour votre application, vous devez cr√©er un composant d'en-t√™te que les utilisateurs peuvent utiliser pour naviguer entre les diff√©rentes parties de votre application.</p>
<p style="Normal" xid="1602"><c></c></p>
<p style="Normal" xid="1603"><c></c></p>
<p style="Normal" xid="1604">Cr√©ez un nouveau fichier dans src / components et appelez-le Header.js. Collez ensuite le code suivant √† l'int√©rieur:</p>
<p style="Normal" xid="1605"><c></c></p>
<p style="Normal" xid="1606"><c></c></p>
<p style="Normal" xid="1607">.../hackernews-react-apollo/src/components/Header.js</p>
<p style="Normal" xid="1608"><c></c></p>
<p style="Normal" xid="1609">import React, { Component } from 'react'</p>
<p style="Normal" xid="1610">import { Link } from 'react-router-dom'</p>
<p style="Normal" xid="1611">import { withRouter } from 'react-router'</p>
<p style="Normal" xid="1612"><c></c></p>
<p style="Normal" xid="1613">class Header extends Component {</p>
<p style="Normal" xid="1614">render() {</p>
<p style="Normal" xid="1615">return (</p>
<p style="Normal" xid="1616">  &lt;div className="flex pa1 justify-between nowrap orange"&gt;</p>
<p style="Normal" xid="1617">    &lt;div className="flex flex-fixed black"&gt;</p>
<p style="Normal" xid="1618">      &lt;div className="fw7 mr1"&gt;Hacker News&lt;/div&gt;</p>
<p style="Normal" xid="1619">      &lt;Link to="/" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="1620">        new</p>
<p style="Normal" xid="1621">      &lt;/Link&gt;</p>
<p style="Normal" xid="1622">      &lt;div className="ml1"&gt;|&lt;/div&gt;</p>
<p style="Normal" xid="1623">      &lt;Link to="/create" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="1624">        submit</p>
<p style="Normal" xid="1625">      &lt;/Link&gt;</p>
<p style="Normal" xid="1626">    &lt;/div&gt;</p>
<p style="Normal" xid="1627">  &lt;/div&gt;</p>
<p style="Normal" xid="1628">)</p>
<p style="Normal" xid="1629">}</p>
<p style="Normal" xid="1630">}</p>
<p style="Normal" xid="1631"><c></c></p>
<p style="Normal" xid="1632">export default withRouter(Header)</p>
<p style="Normal" xid="1633"><c></c></p>
<p style="Normal" xid="1634"><c></c></p>
<p style="Normal" xid="1635">Cela rend simplement deux composants Link que les utilisateurs peuvent utiliser pour naviguer entre la LinkList et les composants CreateLink.</p>
<p style="Normal" xid="1636"><c></c></p>
<p style="Normal" xid="1637">Ne vous laissez pas d√©router par le ¬´autre¬ª composant Link utilis√© ici. Celui que vous utilisez dans l'en-t√™te n'a rien √† voir avec le composant Lien que vous avez √©crit auparavant, il se trouve qu'il porte le m√™me nom. Ce lien provient du package react-router-dom et vous permet de naviguer entre les routes √† l'int√©rieur de votre application.</p>
<p style="Normal" xid="1638"><c></c></p>
<p style="Normal" xid="1639">Configurer les itin√©raires</p>
<p style="Normal" xid="1640"><c></c></p>
<p style="Normal" xid="1641">Vous allez configurer les diff√©rents itin√©raires pour l'application dans le composant racine du projet: App.</p>
<p style="Normal" xid="1642"><c></c></p>
<p style="Normal" xid="1643">Ouvrez le fichier App.js correspondant et mettez √† jour le rendu pour inclure l'en-t√™te ainsi que LinkList et les composants CreateLink sous diff√©rentes routes:</p>
<p style="Normal" xid="1644"><c></c></p>
<p style="Normal" xid="1645"><c></c></p>
<p style="Normal" xid="1646">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1647"><c></c></p>
<p style="Normal" xid="1648"><c></c></p>
<p style="Normal" xid="1649">render() {</p>
<p style="Normal" xid="1650">return (</p>
<p style="Normal" xid="1651">&lt;div className="center w85"&gt;</p>
<p style="Normal" xid="1652">  &lt;Header /&gt;</p>
<p style="Normal" xid="1653">  &lt;div className="ph3 pv1 background-gray"&gt;</p>
<p style="Normal" xid="1654">    &lt;Switch&gt;</p>
<p style="Normal" xid="1655">      &lt;Route exact path="/" component={LinkList} /&gt;</p>
<p style="Normal" xid="1656">      &lt;Route exact path="/create" component={CreateLink} /&gt;</p>
<p style="Normal" xid="1657">    &lt;/Switch&gt;</p>
<p style="Normal" xid="1658">  &lt;/div&gt;</p>
<p style="Normal" xid="1659">&lt;/div&gt;</p>
<p style="Normal" xid="1660">)</p>
<p style="Normal" xid="1661">}</p>
<p style="Normal" xid="1662"><c></c></p>
<p style="Normal" xid="1663">Pour que ce code fonctionne, vous devez importer les d√©pendances requises de react-router-dom.</p>
<p style="Normal" xid="1664"><c></c></p>
<p style="Normal" xid="1665">Ajoutez l'instruction suivante en haut du fichier:</p>
<p style="Normal" xid="1666"><c></c></p>
<p style="Normal" xid="1667"><c></c></p>
<p style="Normal" xid="1668">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1669"><c></c></p>
<p style="Normal" xid="1670">import Header from './Header'</p>
<p style="Normal" xid="1671">import { Switch, Route } from 'react-router-dom'</p>
<p style="Normal" xid="1672"><c></c></p>
<p style="Normal" xid="1673">Vous devez maintenant envelopper l'application avec BrowserRouter afin que tous les composants enfants de l'application aient acc√®s √† la fonctionnalit√© de routage.</p>
<p style="Normal" xid="1674"><c></c></p>
<p style="Normal" xid="1675"><c></c></p>
<p style="Normal" xid="1676">Ouvrez index.js et ajoutez l'instruction d'importation suivante en haut:</p>
<p style="Normal" xid="1677"><c></c></p>
<p style="Normal" xid="1678"><c></c></p>
<p style="Normal" xid="1679">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="1680"><c></c></p>
<p style="Normal" xid="1681">import { BrowserRouter } from 'react-router-dom'</p>
<p style="Normal" xid="1682"><c></c></p>
<p style="Normal" xid="1683">Maintenant, mettez √† jour ReactDOM.render et encapsulez toute l'application avec le BrowserRouter:</p>
<p style="Normal" xid="1684"><c></c></p>
<p style="Normal" xid="1685"><c></c></p>
<p style="Normal" xid="1686">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="1687"><c></c></p>
<p style="Normal" xid="1688">ReactDOM.render(</p>
<p style="Normal" xid="1689">&lt;BrowserRouter&gt;</p>
<p style="Normal" xid="1690">&lt;ApolloProvider client={client}&gt;</p>
<p style="Normal" xid="1691">  &lt;App /&gt;</p>
<p style="Normal" xid="1692">&lt;/ApolloProvider&gt;</p>
<p style="Normal" xid="1693">&lt;/BrowserRouter&gt;,</p>
<p style="Normal" xid="1694">document.getElementById('root')</p>
<p style="Normal" xid="1695">)</p>
<p style="Normal" xid="1696"><c></c></p>
<p style="Normal" xid="1697">C'est √ßa. Si vous ex√©cutez √† nouveau l'application, vous pouvez d√©sormais acc√©der √† deux URL. http: // localhost: 3000 / affichera LinkList et http: // localhost: 3000 / create rendra le composant CreateLink que vous venez d'√©crire dans la section pr√©c√©dente.</p>
<p style="Normal" xid="1698"><c></c></p>
<p style="Normal" xid="1699">Impl√©menter la navigation</p>
<p style="Normal" xid="1700"><c></c></p>
<p style="Normal" xid="1701">Pour conclure cette section, vous devez impl√©menter une redirection automatique du composant CreateLink vers le composant LinkList apr√®s qu'une mutation a √©t√© effectu√©e.</p>
<p style="Normal" xid="1702"><c></c></p>
<p style="Normal" xid="1703">Ouvrez CreateLink.js et mettez √† jour le composant &lt;Mutation /&gt; pour qu'il se pr√©sente comme suit:</p>
<p style="Normal" xid="1704"><c></c></p>
<p style="Normal" xid="1705">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="1706"><c></c></p>
<p style="Normal" xid="1707">&lt;Mutation</p>
<p style="Normal" xid="1708">mutation={POST_MUTATION}</p>
<p style="Normal" xid="1709">variables={{ description, url }}</p>
<p style="Normal" xid="1710">onCompleted={() =&gt; this.props.history.push('/')}</p>
<p style="Normal" xid="1711">&gt;</p>
<p style="Normal" xid="1712">{postMutation =&gt; &lt;button onClick={postMutation}&gt;Submit&lt;/button&gt;}</p>
<p style="Normal" xid="1713">&lt;/Mutation&gt;</p>
<p style="Normal" xid="1714"><c></c></p>
<p style="Normal" xid="1715"><c></c></p>
<p style="Normal" xid="1716">Une fois la mutation effectu√©e, react-router-dom va maintenant revenir au composant LinkList accessible sur la route racine: /.</p>
<p style="Normal" xid="1717"><c></c></p>
<p style="Normal" xid="1718">Remarque: Il n'affichera pas le lien nouvellement cr√©√©, il se contentera de rediriger vers l'itin√©raire racine, vous pouvez toujours actualiser pour voir les modifications apport√©es. Nous verrons comment mettre √† jour les donn√©es apr√®s le d√©clenchement de la mutation dans le chapitre Plus de mutations et mise √† jour du magasin!</p>
<p style="Normal" xid="1719"><c></c></p>
<p style="Normal" xid="1720"><c></c></p>
<p style="Normal" xid="1721"><c></c></p>
<p style="Normal" xid="1722">//////////////////Partie5/////////////////////////////////////////////</p>
<p style="Normal" xid="1723"><c></c></p>
<p style="Normal" xid="1724"><c></c></p>
<p style="Normal" xid="1725"><c></c></p>
<p style="Normal" xid="1726">Authentification</p>
<p style="Normal" xid="1727"><c></c></p>
<p style="Normal" xid="1728">Dans cette section, vous apprendrez comment mettre en ≈ìuvre la fonctionnalit√© d'authentification avec Apollo pour fournir des fonctionnalit√©s d'inscription et de connexion √† vos utilisateurs.</p>
<p style="Normal" xid="1729">Pr√©parer les composants React</p>
<p style="Normal" xid="1730"><c></c></p>
<p style="Normal" xid="1731">Comme dans les sections pr√©c√©dentes, vous pr√©parerez le terrain pour la fonctionnalit√© de connexion en pr√©parant les composants React n√©cessaires √† cette fonctionnalit√©. Vous allez commencer par cr√©er le composant Login.</p>
<p style="Normal" xid="1732"><c></c></p>
<p style="Normal" xid="1733">Cr√©ez un nouveau fichier dans src / components et appelez-le Login.js. Collez-y ensuite le code suivant:</p>
<p style="Normal" xid="1734"><c></c></p>
<p style="Normal" xid="1735"><c></c></p>
<p style="Normal" xid="1736">.../hackernews-react-apollo/src/components/Login.js</p>
<p style="Normal" xid="1737"><c></c></p>
<p style="Normal" xid="1738">import React, { Component } from 'react'</p>
<p style="Normal" xid="1739">import { AUTH_TOKEN } from '../constants'</p>
<p style="Normal" xid="1740"><c></c></p>
<p style="Normal" xid="1741">class Login extends Component {</p>
<p style="Normal" xid="1742">state = {</p>
<p style="Normal" xid="1743">login: true, // switch between Login and SignUp</p>
<p style="Normal" xid="1744">email: '',</p>
<p style="Normal" xid="1745">password: '',</p>
<p style="Normal" xid="1746">name: '',</p>
<p style="Normal" xid="1747">}</p>
<p style="Normal" xid="1748"><c></c></p>
<p style="Normal" xid="1749">render() {</p>
<p style="Normal" xid="1750">const { login, email, password, name } = this.state</p>
<p style="Normal" xid="1751">return (</p>
<p style="Normal" xid="1752">  &lt;div&gt;</p>
<p style="Normal" xid="1753">    &lt;h4 className="mv3"&gt;{login ? 'Login' : 'Sign Up'}&lt;/h4&gt;</p>
<p style="Normal" xid="1754">    &lt;div className="flex flex-column"&gt;</p>
<p style="Normal" xid="1755">      {!login &amp;&amp; (</p>
<p style="Normal" xid="1756">        &lt;input</p>
<p style="Normal" xid="1757">          value={name}</p>
<p style="Normal" xid="1758">          onChange={e =&gt; this.setState({ name: e.target.value })}</p>
<p style="Normal" xid="1759">          type="text"</p>
<p style="Normal" xid="1760">          placeholder="Your name"</p>
<p style="Normal" xid="1761">        /&gt;</p>
<p style="Normal" xid="1762">      )}</p>
<p style="Normal" xid="1763">      &lt;input</p>
<p style="Normal" xid="1764">        value={email}</p>
<p style="Normal" xid="1765">        onChange={e =&gt; this.setState({ email: e.target.value })}</p>
<p style="Normal" xid="1766">        type="text"</p>
<p style="Normal" xid="1767">        placeholder="Your email address"</p>
<p style="Normal" xid="1768">      /&gt;</p>
<p style="Normal" xid="1769">      &lt;input</p>
<p style="Normal" xid="1770">        value={password}</p>
<p style="Normal" xid="1771">        onChange={e =&gt; this.setState({ password: e.target.value })}</p>
<p style="Normal" xid="1772">        type="password"</p>
<p style="Normal" xid="1773">        placeholder="Choose a safe password"</p>
<p style="Normal" xid="1774">      /&gt;</p>
<p style="Normal" xid="1775">    &lt;/div&gt;</p>
<p style="Normal" xid="1776">    &lt;div className="flex mt3"&gt;</p>
<p style="Normal" xid="1777">      &lt;div className="pointer mr2 button" onClick={() =&gt; this._confirm()}&gt;</p>
<p style="Normal" xid="1778">        {login ? 'login' : 'create account'}</p>
<p style="Normal" xid="1779">      &lt;/div&gt;</p>
<p style="Normal" xid="1780">      &lt;div</p>
<p style="Normal" xid="1781">        className="pointer button"</p>
<p style="Normal" xid="1782">        onClick={() =&gt; this.setState({ login: !login })}</p>
<p style="Normal" xid="1783">      &gt;</p>
<p style="Normal" xid="1784">        {login</p>
<p style="Normal" xid="1785">          ? 'need to create an account?'</p>
<p style="Normal" xid="1786">          : 'already have an account?'}</p>
<p style="Normal" xid="1787">      &lt;/div&gt;</p>
<p style="Normal" xid="1788">    &lt;/div&gt;</p>
<p style="Normal" xid="1789">  &lt;/div&gt;</p>
<p style="Normal" xid="1790">)</p>
<p style="Normal" xid="1791">}</p>
<p style="Normal" xid="1792"><c></c></p>
<p style="Normal" xid="1793">_confirm = async () =&gt; {</p>
<p style="Normal" xid="1794">// ... you'll implement this üîú</p>
<p style="Normal" xid="1795">}</p>
<p style="Normal" xid="1796"><c></c></p>
<p style="Normal" xid="1797">_saveUserData = token =&gt; {</p>
<p style="Normal" xid="1798">localStorage.setItem(AUTH_TOKEN, token)</p>
<p style="Normal" xid="1799">}</p>
<p style="Normal" xid="1800">}</p>
<p style="Normal" xid="1801"><c></c></p>
<p style="Normal" xid="1802">export default Login</p>
<p style="Normal" xid="1803"><c></c></p>
<p style="Normal" xid="1804"><c></c></p>
<p style="Normal" xid="1805">Comprenons rapidement la structure de ce nouveau composant, qui peut avoir deux √©tats majeurs:</p>
<p style="Normal" xid="1806"><c></c></p>
<p style="Normal" xid="1807">Un √©tat est pour les utilisateurs qui ont d√©j√† un compte et qui n'ont besoin que de se connecter. Dans cet √©tat, le composant ne rendra que deux champs de saisie pour que l'utilisateur fournisse son e-mail et son mot de passe. Notez que state.login sera vrai dans ce cas.</p>
<p style="Normal" xid="1808">Le deuxi√®me √©tat est destin√© aux utilisateurs qui n'ont pas encore cr√©√© de compte et qui doivent donc toujours s'inscrire. Ici, vous rendez √©galement un troisi√®me champ de saisie o√π les utilisateurs peuvent fournir leur nom. Dans ce cas, state.login sera faux.</p>
<p style="Normal" xid="1809"><c></c></p>
<p style="Normal" xid="1810">La m√©thode _confirm sera utilis√©e pour impl√©menter les mutations que nous devons envoyer pour la fonctionnalit√© de connexion.</p>
<p style="Normal" xid="1811"><c></c></p>
<p style="Normal" xid="1812">Ensuite, vous devez √©galement fournir le fichier constants.js que nous utilisons pour d√©finir la cl√© des informations d'identification que nous stockons dans le localStorage du navigateur.</p>
<p style="Normal" xid="1813"><c></c></p>
<p style="Normal" xid="1814">Avertissement: le stockage des JWT dans localStorage n'est pas une approche s√ªre pour impl√©menter l'authentification sur le frontend. Parce que ce tutoriel est ax√© sur GraphQL, nous voulons garder les choses simples et nous les utilisons donc ici. Vous pouvez en savoir plus sur ce sujet ici.</p>
<p style="Normal" xid="1815"><c></c></p>
<p style="Normal" xid="1816"><c></c></p>
<p style="Normal" xid="1817">Dans src, cr√©ez un nouveau fichier appel√© constants.js et ajoutez la d√©finition suivante:</p>
<p style="Normal" xid="1818"><c></c></p>
<p style="Normal" xid="1819"><c></c></p>
<p style="Normal" xid="1820">.../hackernews-react-apollo/src/constants.js</p>
<p style="Normal" xid="1821"><c></c></p>
<p style="Normal" xid="1822">export const AUTH_TOKEN = 'auth-token'</p>
<p style="Normal" xid="1823"><c></c></p>
<p style="Normal" xid="1824">Avec ce composant en place, vous pouvez ajouter une nouvelle route √† votre configuration react-router-dom.</p>
<p style="Normal" xid="1825"><c></c></p>
<p style="Normal" xid="1826">Ouvrez App.js et mettez √† jour le rendu pour inclure la nouvelle route</p>
<p style="Normal" xid="1827"><c></c></p>
<p style="Normal" xid="1828"><c></c></p>
<p style="Normal" xid="1829">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1830"><c></c></p>
<p style="Normal" xid="1831">render() {</p>
<p style="Normal" xid="1832">return (</p>
<p style="Normal" xid="1833">&lt;div className="center w85"&gt;</p>
<p style="Normal" xid="1834">  &lt;Header /&gt;</p>
<p style="Normal" xid="1835">  &lt;div className="ph3 pv1 background-gray"&gt;</p>
<p style="Normal" xid="1836">    &lt;Switch&gt;</p>
<p style="Normal" xid="1837">      &lt;Route exact path="/" component={LinkList} /&gt;</p>
<p style="Normal" xid="1838">      &lt;Route exact path="/create" component={CreateLink} /&gt;</p>
<p style="Normal" xid="1839">      &lt;Route exact path="/login" component={Login} /&gt;</p>
<p style="Normal" xid="1840">    &lt;/Switch&gt;</p>
<p style="Normal" xid="1841">  &lt;/div&gt;</p>
<p style="Normal" xid="1842">&lt;/div&gt;</p>
<p style="Normal" xid="1843">)</p>
<p style="Normal" xid="1844">}</p>
<p style="Normal" xid="1845"><c></c></p>
<p style="Normal" xid="1846"><c></c></p>
<p style="Normal" xid="1847">Importez √©galement le composant Login au-dessus du m√™me fichier:</p>
<p style="Normal" xid="1848"><c></c></p>
<p style="Normal" xid="1849"><c></c></p>
<p style="Normal" xid="1850">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="1851"><c></c></p>
<p style="Normal" xid="1852">import Login from './Login'</p>
<p style="Normal" xid="1853"><c></c></p>
<p style="Normal" xid="1854">Enfin, allez-y et ajoutez un lien vers l'en-t√™te qui permet aux utilisateurs de naviguer vers la page de connexion.</p>
<p style="Normal" xid="1855"><c></c></p>
<p style="Normal" xid="1856">Ouvrez Header.js et mettez √† jour le rendu pour qu'il se pr√©sente comme suit:</p>
<p style="Normal" xid="1857"><c></c></p>
<p style="Normal" xid="1858"><c></c></p>
<p style="Normal" xid="1859">.../hackernews-react-apollo/src/components/Header.js</p>
<p style="Normal" xid="1860"><c></c></p>
<p style="Normal" xid="1861">render() {</p>
<p style="Normal" xid="1862">const authToken = localStorage.getItem(AUTH_TOKEN)</p>
<p style="Normal" xid="1863">return (</p>
<p style="Normal" xid="1864">&lt;div className="flex pa1 justify-between nowrap orange"&gt;</p>
<p style="Normal" xid="1865">  &lt;div className="flex flex-fixed black"&gt;</p>
<p style="Normal" xid="1866">    &lt;div className="fw7 mr1"&gt;Hacker News&lt;/div&gt;</p>
<p style="Normal" xid="1867">    &lt;Link to="/" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="1868">      new</p>
<p style="Normal" xid="1869">    &lt;/Link&gt;</p>
<p style="Normal" xid="1870">    {authToken &amp;&amp; (</p>
<p style="Normal" xid="1871">      &lt;div className="flex"&gt;</p>
<p style="Normal" xid="1872">        &lt;div className="ml1"&gt;|&lt;/div&gt;</p>
<p style="Normal" xid="1873">        &lt;Link to="/create" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="1874">          submit</p>
<p style="Normal" xid="1875">        &lt;/Link&gt;</p>
<p style="Normal" xid="1876">      &lt;/div&gt;</p>
<p style="Normal" xid="1877">    )}</p>
<p style="Normal" xid="1878">  &lt;/div&gt;</p>
<p style="Normal" xid="1879">  &lt;div className="flex flex-fixed"&gt;</p>
<p style="Normal" xid="1880">    {authToken ? (</p>
<p style="Normal" xid="1881">      &lt;div</p>
<p style="Normal" xid="1882">        className="ml1 pointer black"</p>
<p style="Normal" xid="1883">        onClick={() =&gt; {</p>
<p style="Normal" xid="1884">          localStorage.removeItem(AUTH_TOKEN)</p>
<p style="Normal" xid="1885">          this.props.history.push(`/`)</p>
<p style="Normal" xid="1886">        }}</p>
<p style="Normal" xid="1887">      &gt;</p>
<p style="Normal" xid="1888">        logout</p>
<p style="Normal" xid="1889">      &lt;/div&gt;</p>
<p style="Normal" xid="1890">    ) : (</p>
<p style="Normal" xid="1891">      &lt;Link to="/login" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="1892">        login</p>
<p style="Normal" xid="1893">      &lt;/Link&gt;</p>
<p style="Normal" xid="1894">    )}</p>
<p style="Normal" xid="1895">  &lt;/div&gt;</p>
<p style="Normal" xid="1896">&lt;/div&gt;</p>
<p style="Normal" xid="1897">)</p>
<p style="Normal" xid="1898">}</p>
<p style="Normal" xid="1899"><c></c></p>
<p style="Normal" xid="1900">Vous r√©cup√©rez d'abord le authToken du stockage local. Si l'authToken n'est pas disponible, le bouton d'envoi ne sera plus rendu. De cette fa√ßon, vous vous assurez que seuls les utilisateurs authentifi√©s peuvent cr√©er de nouveaux liens.</p>
<p style="Normal" xid="1901"><c></c></p>
<p style="Normal" xid="1902">Vous ajoutez √©galement un deuxi√®me bouton √† droite de l'en-t√™te que les utilisateurs peuvent utiliser pour se connecter et se d√©connecter.</p>
<p style="Normal" xid="1903"><c></c></p>
<p style="Normal" xid="1904">Enfin, vous devez importer la d√©finition de cl√© √† partir de constants.js dans Header.js. Ajoutez l'instruction suivante en haut du fichier:</p>
<p style="Normal" xid="1905"><c></c></p>
<p style="Normal" xid="1906"><c></c></p>
<p style="Normal" xid="1907">.../hackernews-react-apollo/src/components/Header.js</p>
<p style="Normal" xid="1908"><c></c></p>
<p style="Normal" xid="1909">import { AUTH_TOKEN } from '../constants'</p>
<p style="Normal" xid="1910"><c></c></p>
<p style="Normal" xid="1911"><c></c></p>
<p style="Normal" xid="1912">Voici √† quoi ressemble le composant pr√™t:</p>
<p style="Normal" xid="1913"><c></c></p>
<p style="Normal" xid="1914"><c></c></p>
<p style="Normal" xid="1915"><c></c></p>
<p style="Normal" xid="1916"><c></c></p>
<p style="Normal" xid="1917"><c></c></p>
<p style="Normal" xid="1918"><c></c></p>
<p style="Normal" xid="1919"><c></c></p>
<p style="Normal" xid="1920"><c></c></p>
<p style="Normal" xid="1921"><c></c></p>
<p style="Normal" xid="1922"><c></c></p>
<p style="Normal" xid="1923"><c></c></p>
<p style="Normal" xid="1924"><c></c></p>
<p style="Normal" xid="1925"><c></c></p>
<p style="Normal" xid="1926"><c></c></p>
<p style="Normal" xid="1927"><c></c></p>
<p style="Normal" xid="1928"><c></c></p>
<p style="Normal" xid="1929"><c></c></p>
<p style="Normal" xid="1930"><c></c></p>
<p style="Normal" xid="1931">Parfait, vous √™tes maintenant pr√™t √† impl√©menter la fonctionnalit√© d'authentification.</p>
<p style="Normal" xid="1932">Utilisation des mutations d'authentification</p>
<p style="Normal" xid="1933"><c></c></p>
<p style="Normal" xid="1934">l'inscription et la connexion sont deux mutations GraphQL normales que vous pouvez utiliser de la m√™me mani√®re que vous l'avez fait avec la mutation createLink d'avant.</p>
<p style="Normal" xid="1935"><c></c></p>
<p style="Normal" xid="1936"><c></c></p>
<p style="Normal" xid="1937"><c></c></p>
<p style="Normal" xid="1938">Ouvrez Login.js et ajoutez les deux d√©finitions suivantes en haut du fichier:</p>
<p style="Normal" xid="1939"><c></c></p>
<p style="Normal" xid="1940"><c></c></p>
<p style="Normal" xid="1941">.../hackernews-react-apollo/src/components/Login.js</p>
<p style="Normal" xid="1942"><c></c></p>
<p style="Normal" xid="1943">const SIGNUP_MUTATION = gql`</p>
<p style="Normal" xid="1944">mutation SignupMutation($email: String!, $password: String!, $name: String!) {</p>
<p style="Normal" xid="1945">signup(email: $email, password: $password, name: $name) {</p>
<p style="Normal" xid="1946">  token</p>
<p style="Normal" xid="1947">}</p>
<p style="Normal" xid="1948">}</p>
<p style="Normal" xid="1949">`</p>
<p style="Normal" xid="1950"><c></c></p>
<p style="Normal" xid="1951">const LOGIN_MUTATION = gql`</p>
<p style="Normal" xid="1952">mutation LoginMutation($email: String!, $password: String!) {</p>
<p style="Normal" xid="1953">login(email: $email, password: $password) {</p>
<p style="Normal" xid="1954">  token</p>
<p style="Normal" xid="1955">}</p>
<p style="Normal" xid="1956">}</p>
<p style="Normal" xid="1957"><c></c></p>
<p style="Normal" xid="1958"><c></c></p>
<p style="Normal" xid="1959">Les deux mutations ressemblent beaucoup aux mutations que vous avez d√©j√† vues auparavant. Ils prennent un certain nombre d'arguments et renvoient le jeton que vous pouvez joindre aux demandes suivantes pour authentifier l'utilisateur (c'est-√†-dire indiquer qu'une demande est faite au nom de cet utilisateur). Vous apprendrez üîú comment proc√©der.</p>
<p style="Normal" xid="1960"><c></c></p>
<p style="Normal" xid="1961"><c></c></p>
<p style="Normal" xid="1962">Ensuite, recherchez l'√©l√©ment div qui porte le nom de classe flex mt3 et remplacez-le par ce qui suit:</p>
<p style="Normal" xid="1963"><c></c></p>
<p style="Normal" xid="1964"><c></c></p>
<p style="Normal" xid="1965">.../hackernews-react-apollo/src/components/Login.js</p>
<p style="Normal" xid="1966"><c></c></p>
<p style="Normal" xid="1967">&lt;div className="flex mt3"&gt;</p>
<p style="Normal" xid="1968">&lt;Mutation</p>
<p style="Normal" xid="1969">mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}</p>
<p style="Normal" xid="1970">variables={{ email, password, name }}</p>
<p style="Normal" xid="1971">onCompleted={data =&gt; this._confirm(data)}</p>
<p style="Normal" xid="1972">&gt;</p>
<p style="Normal" xid="1973">{mutation =&gt; (</p>
<p style="Normal" xid="1974">  &lt;div className="pointer mr2 button" onClick={mutation}&gt;</p>
<p style="Normal" xid="1975">    {login ? 'login' : 'create account'}</p>
<p style="Normal" xid="1976">  &lt;/div&gt;</p>
<p style="Normal" xid="1977">)}</p>
<p style="Normal" xid="1978">&lt;/Mutation&gt;</p>
<p style="Normal" xid="1979">&lt;div</p>
<p style="Normal" xid="1980">className="pointer button"</p>
<p style="Normal" xid="1981">onClick={() =&gt; this.setState({ login: !login })}</p>
<p style="Normal" xid="1982">&gt;</p>
<p style="Normal" xid="1983">{login ? 'need to create an account?' : 'already have an account?'}</p>
<p style="Normal" xid="1984">&lt;/div&gt;</p>
<p style="Normal" xid="1985">&lt;/div&gt;</p>
<p style="Normal" xid="1986"><c></c></p>
<p style="Normal" xid="1987">Avant de regarder de plus pr√®s l'impl√©mentation du composant &lt;Mutation /&gt;, allez-y et ajoutez les importations requises.</p>
<p style="Normal" xid="1988"><c></c></p>
<p style="Normal" xid="1989">Toujours dans Login.js, ajoutez l'instruction suivante en haut du fichier:</p>
<p style="Normal" xid="1990"><c></c></p>
<p style="Normal" xid="1991">.../hackernews-react-apollo/src/components/Login.js</p>
<p style="Normal" xid="1992"><c></c></p>
<p style="Normal" xid="1993">import { Mutation } from 'react-apollo'</p>
<p style="Normal" xid="1994">import gql from 'graphql-tag'</p>
<p style="Normal" xid="1995"><c></c></p>
<p style="Normal" xid="1996"><c></c></p>
<p style="Normal" xid="1997"><c></c></p>
<p style="Normal" xid="1998">Maintenant, comprenons ce qui se passe avec le composant &lt;Mutation /&gt; que vous venez d'ajouter.</p>
<p style="Normal" xid="1999"><c></c></p>
<p style="Normal" xid="2000">Le code est assez simple. Si l'utilisateur veut simplement se connecter, vous appelez loginMutation, sinon vous utilisez signupMutation, et la mutation sera d√©clench√©e lors de l'√©v√©nement onClick de div. Les mutations GraphQL re√ßoivent les valeurs d'√©tat de l'e-mail, du mot de passe et du nom sous forme de param√®tres transmis √† la variable prop. Enfin, une fois la mutation termin√©e, nous appelons la fonction _confirm, en passant les donn√©es renvoy√©es par la mutation comme argument.</p>
<p style="Normal" xid="2001"><c></c></p>
<p style="Normal" xid="2002">Tr√®s bien, il ne vous reste plus qu'√† impl√©menter la fonction _confirm!</p>
<p style="Normal" xid="2003"><c></c></p>
<p style="Normal" xid="2004"><c></c></p>
<p style="Normal" xid="2005">Ouvrez Login.js et mettez √† jour _confirm comme suit:</p>
<p style="Normal" xid="2006"><c></c></p>
<p style="Normal" xid="2007"><c></c></p>
<p style="Normal" xid="2008">.../hackernews-react-apollo/src/components/Login.js</p>
<p style="Normal" xid="2009"><c></c></p>
<p style="Normal" xid="2010">_confirm = async data =&gt; {</p>
<p style="Normal" xid="2011">const { token } = this.state.login ? data.login : data.signup</p>
<p style="Normal" xid="2012">this._saveUserData(token)</p>
<p style="Normal" xid="2013">this.props.history.push(`/`)</p>
<p style="Normal" xid="2014">}</p>
<p style="Normal" xid="2015"><c></c></p>
<p style="Normal" xid="2016"><c></c></p>
<p style="Normal" xid="2017">Une fois la mutation effectu√©e, vous stockez le jeton renvoy√© dans localStorage et revenez √† la route racine.</p>
<p style="Normal" xid="2018"><c></c></p>
<p style="Normal" xid="2019">Remarque: les donn√©es renvoy√©es par mutation reposent sur la d√©finition de la mutation GraphQL, c'est pourquoi nous devons obtenir le jeton en fonction de la mutation d√©clench√©e.</p>
<p style="Normal" xid="2020"><c></c></p>
<p style="Normal" xid="2021">Vous pouvez maintenant cr√©er un compte en fournissant un nom, un e-mail et un mot de passe. Une fois que vous avez fait cela, le bouton d'envoi sera √† nouveau rendu:</p>
<p style="Normal" xid="2022"><c></c></p>
<p style="Normal" xid="2023"><c></c></p>
<p style="Normal" xid="2024"><c></c></p>
<p style="Normal" xid="2025"><c></c></p>
<p style="Normal" xid="2026"><c></c></p>
<p style="Normal" xid="2027"><c></c></p>
<p style="Normal" xid="2028"><c></c></p>
<p style="Normal" xid="2029"><c></c></p>
<p style="Normal" xid="2030"><c></c></p>
<p style="Normal" xid="2031"><c></c></p>
<p style="Normal" xid="2032"><c></c></p>
<p style="Normal" xid="2033"><c></c></p>
<p style="Normal" xid="2034"><c></c></p>
<p style="Normal" xid="2035"><c></c></p>
<p style="Normal" xid="2036"><c></c></p>
<p style="Normal" xid="2037"><c></c></p>
<p style="Normal" xid="2038">Si vous ne l'avez pas encore fait auparavant, allez-y et testez la fonctionnalit√© de connexion. Ex√©cutez Yarn Start et ouvrez http: // localhost: 3000 / login. Cliquez ensuite sur la n√©cessit√© de cr√©er un compte? -Bouton et fournissez des donn√©es utilisateur pour l'utilisateur que vous cr√©ez. Enfin, cliquez sur le bouton cr√©er un compte. Si tout s'est bien pass√©, l'application revient √† la route racine et votre utilisateur a √©t√© cr√©√©. Vous pouvez v√©rifier que le nouvel utilisateur est l√† en envoyant la requ√™te des utilisateurs dans le dev Playground dans le projet de base de donn√©es.</p>
<p style="Normal" xid="2039">Configuration d'Apollo avec le jeton d'authentification</p>
<p style="Normal" xid="2040"><c></c></p>
<p style="Normal" xid="2041">Maintenant que les utilisateurs peuvent se connecter et obtenir un jeton qui les authentifie aupr√®s du serveur GraphQL, vous devez r√©ellement vous assurer que le jeton est attach√© √† toutes les demandes envoy√©es √† l'API.</p>
<p style="Normal" xid="2042"><c></c></p>
<p style="Normal" xid="2043">√âtant donn√© que toutes les demandes d'API sont r√©ellement cr√©√©es et envoy√©es par l'instance ApolloClient dans votre application, vous devez vous assurer qu'elle conna√Æt le jeton de l'utilisateur! Heureusement, Apollo fournit un bon moyen d'authentifier toutes les demandes en utilisant le concept de middleware, impl√©ment√© en tant que lien Apollo.</p>
<p style="Normal" xid="2044"><c></c></p>
<p style="Normal" xid="2045">Tout d'abord, vous devez ajouter les d√©pendances requises √† l'application. Ouvrez un terminal, acc√©dez au r√©pertoire de votre projet et saisissez:</p>
<p style="Normal" xid="2046"><c></c></p>
<p style="Normal" xid="2047"><c></c></p>
<p style="Normal" xid="2048">.../hackernews-react-apollo</p>
<p style="Normal" xid="2049"><c></c></p>
<p style="Normal" xid="2050">yarn add apollo-link-context</p>
<p style="Normal" xid="2051"><c></c></p>
<p style="Normal" xid="2052"><c></c></p>
<p style="Normal" xid="2053">Voyons le lien d'authentification en action!</p>
<p style="Normal" xid="2054"><c></c></p>
<p style="Normal" xid="2055">Ouvrez index.js et mettez le code suivant entre la cr√©ation de httpLink et l'instanciation d'ApolloClient:</p>
<p style="Normal" xid="2056"><c></c></p>
<p style="Normal" xid="2057"><c></c></p>
<p style="Normal" xid="2058">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="2059"><c></c></p>
<p style="Normal" xid="2060">const authLink = setContext((_, { headers }) =&gt; {</p>
<p style="Normal" xid="2061">const token = localStorage.getItem(AUTH_TOKEN)</p>
<p style="Normal" xid="2062">return {</p>
<p style="Normal" xid="2063">headers: {</p>
<p style="Normal" xid="2064">  ...headers,</p>
<p style="Normal" xid="2065">  authorization: token ? `Bearer ${token}` : ''</p>
<p style="Normal" xid="2066">}</p>
<p style="Normal" xid="2067">}</p>
<p style="Normal" xid="2068">})</p>
<p style="Normal" xid="2069"><c></c></p>
<p style="Normal" xid="2070"><c></c></p>
<p style="Normal" xid="2071">Avant de continuer, vous devez importer les d√©pendances Apollo. Ajoutez ce qui suit en haut de index.js:</p>
<p style="Normal" xid="2072"><c></c></p>
<p style="Normal" xid="2073"><c></c></p>
<p style="Normal" xid="2074">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="2075"><c></c></p>
<p style="Normal" xid="2076">import { setContext } from 'apollo-link-context'</p>
<p style="Normal" xid="2077"><c></c></p>
<p style="Normal" xid="2078">Ce middleware sera invoqu√© chaque fois qu'ApolloClient envoie une demande au serveur. Apollo Links vous permet de cr√©er des middlewares qui vous permettent de modifier les requ√™tes avant qu'elles ne soient envoy√©es au serveur.</p>
<p style="Normal" xid="2079"><c></c></p>
<p style="Normal" xid="2080">Voyons comment cela fonctionne dans notre code: d'abord, nous obtenons le jeton d'authentification de localStorage s'il existe; apr√®s cela, nous renvoyons les en-t√™tes au contexte afin que httpLink puisse les lire.</p>
<p style="Normal" xid="2081"><c></c></p>
<p style="Normal" xid="2082">Remarque: Vous pouvez en savoir plus sur l'authentification d'Apollo ici.</p>
<p style="Normal" xid="2083"><c></c></p>
<p style="Normal" xid="2084"><c></c></p>
<p style="Normal" xid="2085"><c></c></p>
<p style="Normal" xid="2086">Maintenant, vous devez √©galement vous assurer qu'ApolloClient est instanci√© avec le lien correct - mettez √† jour l'appel du constructeur comme suit:</p>
<p style="Normal" xid="2087"><c></c></p>
<p style="Normal" xid="2088"><c></c></p>
<p style="Normal" xid="2089"><c></c></p>
<p style="Normal" xid="2090"><c></c></p>
<p style="Normal" xid="2091">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="2092"><c></c></p>
<p style="Normal" xid="2093"><c></c></p>
<p style="Normal" xid="2094"><c></c></p>
<p style="Normal" xid="2095">puis importez directement la cl√© dont vous avez besoin pour r√©cup√©rer le jeton de localStorage au-dessus du m√™me fichier:</p>
<p style="Normal" xid="2096"><c></c></p>
<p style="Normal" xid="2097"><c></c></p>
<p style="Normal" xid="2098">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="2099"><c></c></p>
<p style="Normal" xid="2100">import { AUTH_TOKEN } from './constants'</p>
<p style="Normal" xid="2101"><c></c></p>
<p style="Normal" xid="2102">C'est tout - maintenant toutes vos demandes d'API seront authentifi√©es si un jeton est disponible.</p>
<p style="Normal" xid="2103"><c></c></p>
<p style="Normal" xid="2104">Exiger une authentification c√¥t√© serveur</p>
<p style="Normal" xid="2105"><c></c></p>
<p style="Normal" xid="2106">La derni√®re chose que vous pourriez faire dans ce chapitre est de v√©rifier comment garantir que seuls les utilisateurs authentifi√©s peuvent publier de nouveaux liens. De plus, chaque lien cr√©√© par une post-mutation doit automatiquement d√©finir l'utilisateur qui a envoy√© la demande pour son champ postedBy.</p>
<p style="Normal" xid="2107"><c></c></p>
<p style="Normal" xid="2108"><c></c></p>
<p style="Normal" xid="2109">Ouvrez /server/src/resolvers/Mutation.js et regardez comment il a √©t√© impl√©ment√©:</p>
<p style="Normal" xid="2110"><c></c></p>
<p style="Normal" xid="2111"><c></c></p>
<p style="Normal" xid="2112">.../hackernews-react-apollo/server/src/resolvers/Mutation.js</p>
<p style="Normal" xid="2113"><c></c></p>
<p style="Normal" xid="2114">function post(parent, { url, description }, context) {</p>
<p style="Normal" xid="2115">const userId = getUserId(context)</p>
<p style="Normal" xid="2116">return context.prisma.createLink({</p>
<p style="Normal" xid="2117">url,</p>
<p style="Normal" xid="2118">description,</p>
<p style="Normal" xid="2119">postedBy: {</p>
<p style="Normal" xid="2120">  connect: {</p>
<p style="Normal" xid="2121">    id: userId</p>
<p style="Normal" xid="2122">  }</p>
<p style="Normal" xid="2123">}</p>
<p style="Normal" xid="2124">})</p>
<p style="Normal" xid="2125">}</p>
<p style="Normal" xid="2126"><c></c></p>
<p style="Normal" xid="2127">Avec cela, vous extrayez l'ID utilisateur de l'en-t√™te Autorisation de la demande et l'utilisez pour le connecter directement avec le lien cr√©√©. Notez que getUserId g√©n√©rera une erreur si le champ n'est pas fourni ou si un jeton non valide peut √™tre extrait.</p>
<p style="Normal" xid="2128"><c></c></p>
<p style="Normal" xid="2129"><c></c></p>
<p style="Normal" xid="2130">////////////////////////////////Partie 6 /////////////////////////////////////////////////////////////////////////////</p>
<p style="Normal" xid="2131"><c></c></p>
<p style="Normal" xid="2132"><c></c></p>
<p style="Normal" xid="2133">Plus de mutations et mise √† jour de la boutique</p>
<p style="Normal" xid="2134"><c></c></p>
<p style="Normal" xid="2135">La prochaine fonctionnalit√© que vous impl√©menterez est la fonction de vote! Les utilisateurs authentifi√©s sont autoris√©s √† soumettre un vote pour un lien. Les liens les plus vot√©s seront ensuite affich√©s sur un itin√©raire s√©par√©!</p>
<p style="Normal" xid="2136">Pr√©paration des composants React</p>
<p style="Normal" xid="2137"><c></c></p>
<p style="Normal" xid="2138">Une fois de plus, la premi√®re √©tape pour impl√©menter cette nouvelle fonctionnalit√© est de pr√©parer vos composants React pour la fonctionnalit√© attendue.</p>
<p style="Normal" xid="2139"><c></c></p>
<p style="Normal" xid="2140">Ouvrez Link.js et mettez √† jour le rendu pour qu'il se pr√©sente comme suit:</p>
<p style="Normal" xid="2141"><c></c></p>
<p style="Normal" xid="2142"><c></c></p>
<p style="Normal" xid="2143">.../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="2144"><c></c></p>
<p style="Normal" xid="2145">render() {</p>
<p style="Normal" xid="2146">const authToken = localStorage.getItem(AUTH_TOKEN)</p>
<p style="Normal" xid="2147">return (</p>
<p style="Normal" xid="2148">&lt;div className="flex mt2 items-start"&gt;</p>
<p style="Normal" xid="2149">  &lt;div className="flex items-center"&gt;</p>
<p style="Normal" xid="2150">    &lt;span className="gray"&gt;{this.props.index + 1}.&lt;/span&gt;</p>
<p style="Normal" xid="2151">    {authToken &amp;&amp; (</p>
<p style="Normal" xid="2152">      &lt;div className="ml1 gray f11" onClick={() =&gt; this._voteForLink()}&gt;</p>
<p style="Normal" xid="2153">        ‚ñ≤</p>
<p style="Normal" xid="2154">      &lt;/div&gt;</p>
<p style="Normal" xid="2155">    )}</p>
<p style="Normal" xid="2156">  &lt;/div&gt;</p>
<p style="Normal" xid="2157">  &lt;div className="ml1"&gt;</p>
<p style="Normal" xid="2158">    &lt;div&gt;</p>
<p style="Normal" xid="2159">      {this.props.link.description} ({this.props.link.url})</p>
<p style="Normal" xid="2160">    &lt;/div&gt;</p>
<p style="Normal" xid="2161">    &lt;div className="f6 lh-copy gray"&gt;</p>
<p style="Normal" xid="2162">      {this.props.link.votes.length} votes | by{' '}</p>
<p style="Normal" xid="2163">      {this.props.link.postedBy</p>
<p style="Normal" xid="2164">        ? this.props.link.postedBy.name</p>
<p style="Normal" xid="2165">        : 'Unknown'}{' '}</p>
<p style="Normal" xid="2166">      {timeDifferenceForDate(this.props.link.createdAt)}</p>
<p style="Normal" xid="2167">    &lt;/div&gt;</p>
<p style="Normal" xid="2168">  &lt;/div&gt;</p>
<p style="Normal" xid="2169">&lt;/div&gt;</p>
<p style="Normal" xid="2170">)</p>
<p style="Normal" xid="2171">}</p>
<p style="Normal" xid="2172"><c></c></p>
<p style="Normal" xid="2173">Vous pr√©parez d√©j√† le composant Lien pour afficher le nombre de votes pour chaque lien et le nom de l'utilisateur qui l'a publi√©. De plus, vous rendrez le bouton de vote positif si un utilisateur est actuellement connect√© - c'est pour cela que vous utilisez l'authToken. Si le lien n'est pas associ√© √† un utilisateur, le nom de l'utilisateur sera affich√© comme inconnu.</p>
<p style="Normal" xid="2174"><c></c></p>
<p style="Normal" xid="2175">Notez que vous utilisez √©galement une fonction appel√©e timeDifferenceForDate qui obtient les informations createdAt pour chaque lien. La fonction prendra l'horodatage et le convertira en une cha√Æne plus conviviale, par exemple "il y a 3 heures".</p>
<p style="Normal" xid="2176"><c></c></p>
<p style="Normal" xid="2177">Allez-y et impl√©mentez ensuite la fonction timeDifferenceForDate pour pouvoir l'importer et l'utiliser dans le composant Link.</p>
<p style="Normal" xid="2178"><c></c></p>
<p style="Normal" xid="2179">Cr√©ez un nouveau fichier appel√© utils.js dans le r√©pertoire src et collez-y le code suivant:</p>
<p style="Normal" xid="2180"><c></c></p>
<p style="Normal" xid="2181"><c></c></p>
<p style="Normal" xid="2182">.../hackernews-react-apollo/src/utils.js</p>
<p style="Normal" xid="2183"><c></c></p>
<p style="Normal" xid="2184">function timeDifference(current, previous) {</p>
<p style="Normal" xid="2185">const milliSecondsPerMinute = 60 * 1000</p>
<p style="Normal" xid="2186">const milliSecondsPerHour = milliSecondsPerMinute * 60</p>
<p style="Normal" xid="2187">const milliSecondsPerDay = milliSecondsPerHour * 24</p>
<p style="Normal" xid="2188">const milliSecondsPerMonth = milliSecondsPerDay * 30</p>
<p style="Normal" xid="2189">const milliSecondsPerYear = milliSecondsPerDay * 365</p>
<p style="Normal" xid="2190"><c></c></p>
<p style="Normal" xid="2191">const elapsed = current - previous</p>
<p style="Normal" xid="2192"><c></c></p>
<p style="Normal" xid="2193">if (elapsed &lt; milliSecondsPerMinute / 3) {</p>
<p style="Normal" xid="2194">return 'just now'</p>
<p style="Normal" xid="2195">}</p>
<p style="Normal" xid="2196"><c></c></p>
<p style="Normal" xid="2197">if (elapsed &lt; milliSecondsPerMinute) {</p>
<p style="Normal" xid="2198">return 'less than 1 min ago'</p>
<p style="Normal" xid="2199">} else if (elapsed &lt; milliSecondsPerHour) {</p>
<p style="Normal" xid="2200">return Math.round(elapsed / milliSecondsPerMinute) + ' min ago'</p>
<p style="Normal" xid="2201">} else if (elapsed &lt; milliSecondsPerDay) {</p>
<p style="Normal" xid="2202">return Math.round(elapsed / milliSecondsPerHour) + ' h ago'</p>
<p style="Normal" xid="2203">} else if (elapsed &lt; milliSecondsPerMonth) {</p>
<p style="Normal" xid="2204">return Math.round(elapsed / milliSecondsPerDay) + ' days ago'</p>
<p style="Normal" xid="2205">} else if (elapsed &lt; milliSecondsPerYear) {</p>
<p style="Normal" xid="2206">return Math.round(elapsed / milliSecondsPerMonth) + ' mo ago'</p>
<p style="Normal" xid="2207">} else {</p>
<p style="Normal" xid="2208">return Math.round(elapsed / milliSecondsPerYear) + ' years ago'</p>
<p style="Normal" xid="2209">}</p>
<p style="Normal" xid="2210">}</p>
<p style="Normal" xid="2211"><c></c></p>
<p style="Normal" xid="2212">export function timeDifferenceForDate(date) {</p>
<p style="Normal" xid="2213">const now = new Date().getTime()</p>
<p style="Normal" xid="2214">const updated = new Date(date).getTime()</p>
<p style="Normal" xid="2215">return timeDifference(now, updated)</p>
<p style="Normal" xid="2216">}</p>
<p style="Normal" xid="2217"><c></c></p>
<p style="Normal" xid="2218"><c></c></p>
<p style="Normal" xid="2219"><c></c></p>
<p style="Normal" xid="2220">De retour dans Link.js, importez AUTH_TOKEN et timeDifferenceForDate en haut du fichier:</p>
<p style="Normal" xid="2221"><c></c></p>
<p style="Normal" xid="2222"><c></c></p>
<p style="Normal" xid="2223">.../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="2224"><c></c></p>
<p style="Normal" xid="2225">import { AUTH_TOKEN } from '../constants'</p>
<p style="Normal" xid="2226">import { timeDifferenceForDate } from '../utils'</p>
<p style="Normal" xid="2227">Enfin, chaque √©l√©ment Link rendra √©galement sa position √† l'int√©rieur de la liste, vous devez donc transmettre un index √† partir du composant LinkList.</p>
<p style="Normal" xid="2228"><c></c></p>
<p style="Normal" xid="2229">Ouvrez LinkList.js et mettez √† jour le rendu des composants Link √† l'int√©rieur du composant &lt;Query&gt; dans le rendu pour inclure √©galement la position du lien:</p>
<p style="Normal" xid="2230"><c></c></p>
<p style="Normal" xid="2231">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2232"><c></c></p>
<p style="Normal" xid="2233"><c></c></p>
<p style="Normal" xid="2234"><c></c></p>
<p style="Normal" xid="2235">// &lt;Query query={FEED_QUERY}&gt;</p>
<p style="Normal" xid="2236">// ...</p>
<p style="Normal" xid="2237">return (</p>
<p style="Normal" xid="2238">&lt;div&gt;</p>
<p style="Normal" xid="2239">{linksToRender.map((link, index) =&gt; (</p>
<p style="Normal" xid="2240">  &lt;Link key={link.id} link={link} index={index} /&gt;</p>
<p style="Normal" xid="2241">))}</p>
<p style="Normal" xid="2242">&lt;/div&gt;</p>
<p style="Normal" xid="2243">)</p>
<p style="Normal" xid="2244">// ...</p>
<p style="Normal" xid="2245">// &lt;/Query&gt;</p>
<p style="Normal" xid="2246"><c></c></p>
<p style="Normal" xid="2247"><c></c></p>
<p style="Normal" xid="2248"><c></c></p>
<p style="Normal" xid="2249"><c></c></p>
<p style="Normal" xid="2250">Notez que l'application ne fonctionnera pas pour le moment, car les votes ne sont pas encore inclus dans la requ√™te. Vous r√©glerez cela ensuite!</p>
<p style="Normal" xid="2251"><c></c></p>
<p style="Normal" xid="2252"><c></c></p>
<p style="Normal" xid="2253">Ouvrez LinkList.js et mettez √† jour la d√©finition de FEED_QUERY pour qu'elle se pr√©sente comme suit:</p>
<p style="Normal" xid="2254"><c></c></p>
<p style="Normal" xid="2255"><c></c></p>
<p style="Normal" xid="2256">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2257"><c></c></p>
<p style="Normal" xid="2258">const FEED_QUERY = gql`</p>
<p style="Normal" xid="2259">{</p>
<p style="Normal" xid="2260">feed {</p>
<p style="Normal" xid="2261">  links {</p>
<p style="Normal" xid="2262">    id</p>
<p style="Normal" xid="2263">    createdAt</p>
<p style="Normal" xid="2264">    url</p>
<p style="Normal" xid="2265">    description</p>
<p style="Normal" xid="2266">    postedBy {</p>
<p style="Normal" xid="2267">      id</p>
<p style="Normal" xid="2268">      name</p>
<p style="Normal" xid="2269">    }</p>
<p style="Normal" xid="2270">    votes {</p>
<p style="Normal" xid="2271">      id</p>
<p style="Normal" xid="2272">      user {</p>
<p style="Normal" xid="2273">        id</p>
<p style="Normal" xid="2274">      }</p>
<p style="Normal" xid="2275">    }</p>
<p style="Normal" xid="2276">  }</p>
<p style="Normal" xid="2277">}</p>
<p style="Normal" xid="2278">}</p>
<p style="Normal" xid="2279">`</p>
<p style="Normal" xid="2280"><c></c></p>
<p style="Normal" xid="2281">Tout ce que vous faites ici est d'inclure des informations sur l'utilisateur qui a publi√© un lien ainsi que des informations sur les votes des liens dans la charge utile de la requ√™te. Vous pouvez maintenant ex√©cuter √† nouveau l'application et les liens seront correctement affich√©s.</p>
<p style="Normal" xid="2282"><c></c></p>
<p style="Normal" xid="2283">R√©sultats de recherche</p>
<p style="Normal" xid="2284">R√©sultat de traduction</p>
<p style="Normal" xid="2285">Anglais</p>
<p style="Normal" xid="2286">Fran√ßais</p>
<p style="Normal" xid="2287"><c></c></p>
<p style="Normal" xid="2288">Remarque: Si vous ne pouvez pas r√©cup√©rer les liens, red√©marrez le serveur et rechargez le navigateur. Vous pouvez √©galement v√©rifier si tout fonctionne comme pr√©vu sur GraphQL Playground!</p>
<p style="Normal" xid="2289"><c></c></p>
<p style="Normal" xid="2290">Passons maintenant et impl√©mentons la mutation du vote!</p>
<p style="Normal" xid="2291"><c></c></p>
<p style="Normal" xid="2292">Appel de la mutation</p>
<p style="Normal" xid="2293"><c></c></p>
<p style="Normal" xid="2294">Ouvrez Link.js et ajoutez la d√©finition de mutation suivante en haut du fichier.</p>
<p style="Normal" xid="2295"><c></c></p>
<p style="Normal" xid="2296"><c></c></p>
<p style="Normal" xid="2297">.../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="2298"><c></c></p>
<p style="Normal" xid="2299">const VOTE_MUTATION = gql`</p>
<p style="Normal" xid="2300">mutation VoteMutation($linkId: ID!) {</p>
<p style="Normal" xid="2301">vote(linkId: $linkId) {</p>
<p style="Normal" xid="2302">  id</p>
<p style="Normal" xid="2303">  link {</p>
<p style="Normal" xid="2304">   id</p>
<p style="Normal" xid="2305">    votes {</p>
<p style="Normal" xid="2306">      id</p>
<p style="Normal" xid="2307">      user {</p>
<p style="Normal" xid="2308">        id</p>
<p style="Normal" xid="2309">      }</p>
<p style="Normal" xid="2310">    }</p>
<p style="Normal" xid="2311">  }</p>
<p style="Normal" xid="2312">  user {</p>
<p style="Normal" xid="2313">    id</p>
<p style="Normal" xid="2314">  }</p>
<p style="Normal" xid="2315">}</p>
<p style="Normal" xid="2316">}</p>
<p style="Normal" xid="2317">`</p>
<p style="Normal" xid="2318"><c></c></p>
<p style="Normal" xid="2319">Une fois de plus, remplacez √©galement l'√©l√©ment div des noms de classe flex items-center actuels par ce qui suit:</p>
<p style="Normal" xid="2320"><c></c></p>
<p style="Normal" xid="2321"><c></c></p>
<p style="Normal" xid="2322"><c></c></p>
<p style="Normal" xid="2323">.../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="2324"><c></c></p>
<p style="Normal" xid="2325">&lt;div className="flex items-center"&gt;</p>
<p style="Normal" xid="2326">&lt;span className="gray"&gt;{this.props.index + 1}.&lt;/span&gt;</p>
<p style="Normal" xid="2327">{authToken &amp;&amp; (</p>
<p style="Normal" xid="2328">&lt;Mutation mutation={VOTE_MUTATION} variables={{ linkId: this.props.link.id }}&gt;</p>
<p style="Normal" xid="2329">  {voteMutation =&gt; (</p>
<p style="Normal" xid="2330">    &lt;div className="ml1 gray f11" onClick={voteMutation}&gt;</p>
<p style="Normal" xid="2331">      ‚ñ≤</p>
<p style="Normal" xid="2332">    &lt;/div&gt;</p>
<p style="Normal" xid="2333">  )}</p>
<p style="Normal" xid="2334">&lt;/Mutation&gt;</p>
<p style="Normal" xid="2335">)}</p>
<p style="Normal" xid="2336">&lt;/div&gt;</p>
<p style="Normal" xid="2337"><c></c></p>
<p style="Normal" xid="2338">Cette √©tape devrait maintenant sembler assez famili√®re. Vous ajoutez la possibilit√© d'appeler voteMutation dans notre composant fonctionnel en utilisant le composant &lt;Mutation /&gt; (nous transmettons √©galement VOTE_MUTATION et link.id comme accessoires).</p>
<p style="Normal" xid="2339"><c></c></p>
<p style="Normal" xid="2340">Encore une fois, vous devez importer Mutation et graphql au-dessus du fichier Link.js:</p>
<p style="Normal" xid="2341"><c></c></p>
<p style="Normal" xid="2342"><c></c></p>
<p style="Normal" xid="2343">.../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="2344"><c></c></p>
<p style="Normal" xid="2345">import { Mutation } from 'react-apollo'</p>
<p style="Normal" xid="2346">import gql from 'graphql-tag'</p>
<p style="Normal" xid="2347"><c></c></p>
<p style="Normal" xid="2348">Vous pouvez maintenant aller tester l'impl√©mentation! Ex√©cutez le d√©marrage du fil dans hackernews-react-apollo et cliquez sur le bouton upvote sur un lien. Vous ne recevez pas encore de commentaires sur l'interface utilisateur, mais apr√®s avoir actualis√© la page, vous verrez les votes ajout√©s.</p>
<p style="Normal" xid="2349"><c></c></p>
<p style="Normal" xid="2350">N'oubliez pas: vous devez √™tre connect√© pour pouvoir voter sur les liens!</p>
<p style="Normal" xid="2351"><c></c></p>
<p style="Normal" xid="2352">Dans la section suivante, vous apprendrez comment mettre √† jour automatiquement l'interface utilisateur apr√®s chaque mutation!</p>
<p style="Normal" xid="2353">Mise √† jour du cache</p>
<p style="Normal" xid="2354"><c></c></p>
<p style="Normal" xid="2355">Une chose int√©ressante √† propos d'Apollo est que vous pouvez contr√¥ler manuellement le contenu du cache. C'est vraiment pratique, surtout apr√®s qu'une mutation a √©t√© effectu√©e. Il permet de d√©terminer pr√©cis√©ment comment vous souhaitez que le cache soit mis √† jour. Ici, vous allez l'utiliser pour vous assurer que l'interface utilisateur affiche le nombre correct de votes juste apr√®s la mutation du vote.</p>
<p style="Normal" xid="2356"><c></c></p>
<p style="Normal" xid="2357">Vous impl√©menterez cette fonctionnalit√© en utilisant les donn√©es de mise en cache d'Apollo.</p>
<p style="Normal" xid="2358"><c></c></p>
<p style="Normal" xid="2359">Ouvrez Link.js et dans le composant &lt;Mutation /&gt; ajoutez le prop de mise √† jour comme ceci:</p>
<p style="Normal" xid="2360"><c></c></p>
<p style="Normal" xid="2361"><c></c></p>
<p style="Normal" xid="2362">.../hackernews-react-apollo/src/components/Link.js</p>
<p style="Normal" xid="2363"><c></c></p>
<p style="Normal" xid="2364">&lt;Mutation</p>
<p style="Normal" xid="2365">mutation={VOTE_MUTATION}</p>
<p style="Normal" xid="2366">variables={{ linkId: this.props.link.id }}</p>
<p style="Normal" xid="2367">update={(store, { data: { vote } }) =&gt;</p>
<p style="Normal" xid="2368">this.props.updateStoreAfterVote(store, vote, this.props.link.id)</p>
<p style="Normal" xid="2369">}</p>
<p style="Normal" xid="2370">&gt;</p>
<p style="Normal" xid="2371">{voteMutation =&gt; (</p>
<p style="Normal" xid="2372">&lt;div className="ml1 gray f11" onClick={voteMutation}&gt;</p>
<p style="Normal" xid="2373">  ‚ñ≤</p>
<p style="Normal" xid="2374">&lt;/div&gt;</p>
<p style="Normal" xid="2375">)}</p>
<p style="Normal" xid="2376">&lt;/Mutation&gt;</p>
<p style="Normal" xid="2377"><c></c></p>
<p style="Normal" xid="2378">La fonction de mise √† jour que vous transmettez comme accessoire au composant &lt;Mutation /&gt; sera appel√©e directement apr√®s que le serveur a renvoy√© la r√©ponse. Il re√ßoit la charge utile de la mutation (donn√©es) et le cache actuel (magasin) comme arguments. Vous pouvez ensuite utiliser cette entr√©e pour d√©terminer un nouvel √©tat pour le cache.</p>
<p style="Normal" xid="2379"><c></c></p>
<p style="Normal" xid="2380">Notez que vous √™tes d√©j√† en train de d√©structurer la r√©ponse du serveur et d'en r√©cup√©rer le champ de vote.</p>
<p style="Normal" xid="2381"><c></c></p>
<p style="Normal" xid="2382">Tr√®s bien, alors maintenant vous savez ce qu'est cette fonction de mise √† jour, mais l'impl√©mentation r√©elle se fera dans le composant parent de Link, qui est LinkList.</p>
<p style="Normal" xid="2383"><c></c></p>
<p style="Normal" xid="2384">Ouvrez LinkList.js et ajoutez la m√©thode suivante dans la port√©e du composant LinkList:</p>
<p style="Normal" xid="2385"><c></c></p>
<p style="Normal" xid="2386"><c></c></p>
<p style="Normal" xid="2387">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2388"><c></c></p>
<p style="Normal" xid="2389">_updateCacheAfterVote = (store, createVote, linkId) =&gt; {</p>
<p style="Normal" xid="2390">const data = store.readQuery({ query: FEED_QUERY })</p>
<p style="Normal" xid="2391"><c></c></p>
<p style="Normal" xid="2392">const votedLink = data.feed.links.find(link =&gt; link.id === linkId)</p>
<p style="Normal" xid="2393">votedLink.votes = createVote.link.votes</p>
<p style="Normal" xid="2394"><c></c></p>
<p style="Normal" xid="2395">store.writeQuery({ query: FEED_QUERY, data })</p>
<p style="Normal" xid="2396"><c></c></p>
<p style="Normal" xid="2397"><c></c></p>
<p style="Normal" xid="2398">Que se passe t-il ici?</p>
<p style="Normal" xid="2399"><c></c></p>
<p style="Normal" xid="2400">Vous commencez par lire l'√©tat actuel des donn√©es mises en cache pour FEED_QUERY dans le magasin.</p>
<p style="Normal" xid="2401">Vous r√©cup√©rez maintenant le lien pour lequel l'utilisateur vient de voter dans cette liste. Vous manipulez √©galement ce lien en r√©initialisant ses votes aux votes qui viennent d'√™tre renvoy√©s par le serveur.</p>
<p style="Normal" xid="2402">Enfin, vous prenez les donn√©es modifi√©es et les r√©√©crivez dans le magasin.</p>
<p style="Normal" xid="2403"><c></c></p>
<p style="Normal" xid="2404">Ensuite, vous devez transmettre cette fonction au lien afin qu'elle puisse √™tre appel√©e √† partir de l√†.</p>
<p style="Normal" xid="2405"><c></c></p>
<p style="Normal" xid="2406">Toujours dans LinkList.js, mettez √† jour la fa√ßon dont les composants Link sont renvoy√©s:</p>
<p style="Normal" xid="2407"><c></c></p>
<p style="Normal" xid="2408"><c></c></p>
<p style="Normal" xid="2409">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2410"><c></c></p>
<p style="Normal" xid="2411">&lt;Link</p>
<p style="Normal" xid="2412">key={link.id}</p>
<p style="Normal" xid="2413">link={link}</p>
<p style="Normal" xid="2414">index={index}</p>
<p style="Normal" xid="2415">updateStoreAfterVote={this._updateCacheAfterVote}</p>
<p style="Normal" xid="2416">/&gt;</p>
<p style="Normal" xid="2417"><c></c></p>
<p style="Normal" xid="2418"><c></c></p>
<p style="Normal" xid="2419">C'est √ßa! La fonction de mise √† jour sera maintenant ex√©cut√©e et assurez-vous que le magasin est correctement mis √† jour apr√®s qu'une mutation a √©t√© effectu√©e. La mise √† jour du magasin d√©clenchera un nouveau rendu du composant et mettra ainsi √† jour l'interface utilisateur avec les informations correctes!</p>
<p style="Normal" xid="2420"><c></c></p>
<p style="Normal" xid="2421">Pendant que nous y sommes, impl√©mentons √©galement la mise √† jour pour ajouter de nouveaux liens!</p>
<p style="Normal" xid="2422"><c></c></p>
<p style="Normal" xid="2423">Ouvrez CreateLink.js et en suivant ce que nous avons fait auparavant, mettez √† jour le composant &lt;Mutation /&gt; en passant la mise √† jour en tant que prop comme suit:</p>
<p style="Normal" xid="2424"><c></c></p>
<p style="Normal" xid="2425"><c></c></p>
<p style="Normal" xid="2426">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="2427"><c></c></p>
<p style="Normal" xid="2428">&lt;Mutation</p>
<p style="Normal" xid="2429">mutation={POST_MUTATION}</p>
<p style="Normal" xid="2430">variables={{ description, url }}</p>
<p style="Normal" xid="2431">onCompleted={() =&gt; this.props.history.push('/')}</p>
<p style="Normal" xid="2432">update={(store, { data: { post } }) =&gt; {</p>
<p style="Normal" xid="2433">const data = store.readQuery({ query: FEED_QUERY })</p>
<p style="Normal" xid="2434">data.feed.links.unshift(post)</p>
<p style="Normal" xid="2435">store.writeQuery({</p>
<p style="Normal" xid="2436">  query: FEED_QUERY,</p>
<p style="Normal" xid="2437">  data</p>
<p style="Normal" xid="2438">})</p>
<p style="Normal" xid="2439">}}</p>
<p style="Normal" xid="2440">&gt;</p>
<p style="Normal" xid="2441">{postMutation =&gt; &lt;button onClick={postMutation}&gt;Submit&lt;/button&gt;}</p>
<p style="Normal" xid="2442">&lt;/Mutation&gt;</p>
<p style="Normal" xid="2443"><c></c></p>
<p style="Normal" xid="2444">La fonction de mise √† jour fonctionne de mani√®re tr√®s similaire √† la pr√©c√©dente. Vous lisez d'abord l'√©tat actuel des r√©sultats de FEED_QUERY. Ensuite, vous ins√©rez le lien le plus r√©cent au d√©but et √©crivez les r√©sultats de la requ√™te dans le magasin.</p>
<p style="Normal" xid="2445"><c></c></p>
<p style="Normal" xid="2446">La derni√®re chose que vous devez faire pour que cela fonctionne est d'importer FEED_QUERY dans ce fichier:</p>
<p style="Normal" xid="2447"><c></c></p>
<p style="Normal" xid="2448"><c></c></p>
<p style="Normal" xid="2449">.../hackernews-react-apollo/src/components/CreateLink.js</p>
<p style="Normal" xid="2450"><c></c></p>
<p style="Normal" xid="2451">import { FEED_QUERY } from './LinkList'</p>
<p style="Normal" xid="2452"><c></c></p>
<p style="Normal" xid="2453">Inversement, il doit √©galement √™tre export√© de l'endroit o√π il est d√©fini.</p>
<p style="Normal" xid="2454"><c></c></p>
<p style="Normal" xid="2455">Ouvrez LinkList.js et ajustez la d√©finition de FEED_QUERY en y ajoutant le mot-cl√© d'exportation:</p>
<p style="Normal" xid="2456"><c></c></p>
<p style="Normal" xid="2457"><c></c></p>
<p style="Normal" xid="2458">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2459"><c></c></p>
<p style="Normal" xid="2460">export const FEED_QUERY = ...</p>
<p style="Normal" xid="2461"><c></c></p>
<p style="Normal" xid="2462">G√©nial, maintenant le magasin met √©galement √† jour avec les bonnes informations apr√®s l'ajout de nouveaux liens. L'application se met en forme</p>
<p style="Normal" xid="2463"><c></c></p>
<p style="Normal" xid="2464"><c></c></p>
<p style="Normal" xid="2465">://///////////////////////////////Partie 7 ///////////////////////////////////////////////</p>
<p style="Normal" xid="2466"><c></c></p>
<p style="Normal" xid="2467"><c></c></p>
<p style="Normal" xid="2468">Filtrage: recherche dans la liste des liens</p>
<p style="Normal" xid="2469"><c></c></p>
<p style="Normal" xid="2470">Dans cette section, vous allez impl√©menter une fonction de recherche et d√©couvrir les capacit√©s de filtrage de votre API GraphQL.</p>
<p style="Normal" xid="2471">Pr√©paration des composants React</p>
<p style="Normal" xid="2472"><c></c></p>
<p style="Normal" xid="2473">La recherche sera disponible sous une nouvelle route et impl√©ment√©e dans un nouveau composant React.</p>
<p style="Normal" xid="2474"><c></c></p>
<p style="Normal" xid="2475">Commencez par cr√©er un nouveau fichier appel√© Search.js dans src / components et ajoutez le code suivant:</p>
<p style="Normal" xid="2476"><c></c></p>
<p style="Normal" xid="2477"><c></c></p>
<p style="Normal" xid="2478">.../hackernews-react-apollo/src/components/Search.js</p>
<p style="Normal" xid="2479"><c></c></p>
<p style="Normal" xid="2480">import React, { Component } from 'react'</p>
<p style="Normal" xid="2481">import { withApollo } from 'react-apollo'</p>
<p style="Normal" xid="2482">import gql from 'graphql-tag'</p>
<p style="Normal" xid="2483">import Link from './Link'</p>
<p style="Normal" xid="2484"><c></c></p>
<p style="Normal" xid="2485">class Search extends Component {</p>
<p style="Normal" xid="2486"><c></c></p>
<p style="Normal" xid="2487">state = {</p>
<p style="Normal" xid="2488">links: [],</p>
<p style="Normal" xid="2489">filter: ''</p>
<p style="Normal" xid="2490">}</p>
<p style="Normal" xid="2491"><c></c></p>
<p style="Normal" xid="2492">render() {</p>
<p style="Normal" xid="2493">return (</p>
<p style="Normal" xid="2494">  &lt;div&gt;</p>
<p style="Normal" xid="2495">    &lt;div&gt;</p>
<p style="Normal" xid="2496">      Search</p>
<p style="Normal" xid="2497">      &lt;input</p>
<p style="Normal" xid="2498">        type='text'</p>
<p style="Normal" xid="2499">        onChange={e =&gt; this.setState({ filter: e.target.value })}</p>
<p style="Normal" xid="2500">      /&gt;</p>
<p style="Normal" xid="2501">      &lt;button onClick={() =&gt; this._executeSearch()}&gt;OK&lt;/button&gt;</p>
<p style="Normal" xid="2502">    &lt;/div&gt;</p>
<p style="Normal" xid="2503">    {this.state.links.map((link, index) =&gt; (</p>
<p style="Normal" xid="2504">      &lt;Link key={link.id} link={link} index={index} /&gt;</p>
<p style="Normal" xid="2505">    ))}</p>
<p style="Normal" xid="2506">  &lt;/div&gt;</p>
<p style="Normal" xid="2507">)</p>
<p style="Normal" xid="2508">}</p>
<p style="Normal" xid="2509"><c></c></p>
<p style="Normal" xid="2510">_executeSearch = async () =&gt; {</p>
<p style="Normal" xid="2511">// ... you'll implement this üîú</p>
<p style="Normal" xid="2512">}</p>
<p style="Normal" xid="2513">}</p>
<p style="Normal" xid="2514"><c></c></p>
<p style="Normal" xid="2515">export default withApollo(Search)</p>
<p style="Normal" xid="2516">Encore une fois, c'est une configuration assez standard. Vous affichez un champ de saisie dans lequel l'utilisateur peut saisir une cha√Æne de recherche.</p>
<p style="Normal" xid="2517"><c></c></p>
<p style="Normal" xid="2518">Notez que le champ des liens dans l'√©tat du composant contiendra tous les liens √† rendre, donc cette fois nous n'acc√©dons pas aux r√©sultats de la requ√™te via les accessoires du composant! Nous parlerons √©galement de la fonction withApollo que vous utilisez lorsque vous exportez un peu le composant!</p>
<p style="Normal" xid="2519"><c></c></p>
<p style="Normal" xid="2520">Ajoutez maintenant le composant de recherche en tant que nouvel itin√©raire vers l'application. Ouvrez App.js et mettez √† jour le rendu pour qu'il se pr√©sente comme suit:</p>
<p style="Normal" xid="2521"><c></c></p>
<p style="Normal" xid="2522"><c></c></p>
<p style="Normal" xid="2523">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="2524"><c></c></p>
<p style="Normal" xid="2525">render() {</p>
<p style="Normal" xid="2526">return (</p>
<p style="Normal" xid="2527">&lt;div className='center w85'&gt;</p>
<p style="Normal" xid="2528">  &lt;Header /&gt;</p>
<p style="Normal" xid="2529">  &lt;div className='ph3 pv1 background-gray'&gt;</p>
<p style="Normal" xid="2530">    &lt;Switch&gt;</p>
<p style="Normal" xid="2531">      &lt;Route exact path='/' component={LinkList} /&gt;</p>
<p style="Normal" xid="2532">      &lt;Route exact path='/create' component={CreateLink} /&gt;</p>
<p style="Normal" xid="2533">      &lt;Route exact path='/login' component={Login} /&gt;</p>
<p style="Normal" xid="2534">      &lt;Route exact path='/search' component={Search} /&gt;</p>
<p style="Normal" xid="2535">    &lt;/Switch&gt;</p>
<p style="Normal" xid="2536">  &lt;/div&gt;</p>
<p style="Normal" xid="2537">&lt;/div&gt;</p>
<p style="Normal" xid="2538">)</p>
<p style="Normal" xid="2539">}</p>
<p style="Normal" xid="2540"><c></c></p>
<p style="Normal" xid="2541"><c></c></p>
<p style="Normal" xid="2542">Importez √©galement le composant de recherche en haut du fichier:</p>
<p style="Normal" xid="2543"><c></c></p>
<p style="Normal" xid="2544"><c></c></p>
<p style="Normal" xid="2545">.../hackernews-react-apollo/src/components/App.js</p>
<p style="Normal" xid="2546"><c></c></p>
<p style="Normal" xid="2547">import Search from './Search'</p>
<p style="Normal" xid="2548"><c></c></p>
<p style="Normal" xid="2549">Pour que l'utilisateur puisse naviguer confortablement vers la fonctionnalit√© de recherche, vous devez √©galement ajouter un nouvel √©l√©ment de navigation √† l'en-t√™te.</p>
<p style="Normal" xid="2550"><c></c></p>
<p style="Normal" xid="2551">Ouvrez Header.js et mettez un nouveau lien entre new et submit:</p>
<p style="Normal" xid="2552"><c></c></p>
<p style="Normal" xid="2553"><c></c></p>
<p style="Normal" xid="2554">.../hackernews-react-apollo/src/components/Header.js</p>
<p style="Normal" xid="2555"><c></c></p>
<p style="Normal" xid="2556">&lt;div className="flex flex-fixed black"&gt;</p>
<p style="Normal" xid="2557">&lt;div className="fw7 mr1"&gt;Hacker News&lt;/div&gt;</p>
<p style="Normal" xid="2558">&lt;Link to="/" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="2559">new</p>
<p style="Normal" xid="2560">&lt;/Link&gt;</p>
<p style="Normal" xid="2561">&lt;div className="ml1"&gt;|&lt;/div&gt;</p>
<p style="Normal" xid="2562">&lt;Link to="/search" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="2563">search</p>
<p style="Normal" xid="2564">&lt;/Link&gt;</p>
<p style="Normal" xid="2565">{authToken &amp;&amp; (</p>
<p style="Normal" xid="2566">&lt;div className="flex"&gt;</p>
<p style="Normal" xid="2567">  &lt;div className="ml1"&gt;|&lt;/div&gt;</p>
<p style="Normal" xid="2568">  &lt;Link to="/create" className="ml1 no-underline black"&gt;</p>
<p style="Normal" xid="2569">    submit</p>
<p style="Normal" xid="2570">  &lt;/Link&gt;</p>
<p style="Normal" xid="2571">&lt;/div&gt;</p>
<p style="Normal" xid="2572">)}</p>
<p style="Normal" xid="2573">&lt;/div&gt;</p>
<p style="Normal" xid="2574"><c></c></p>
<p style="Normal" xid="2575">Vous pouvez maintenant acc√©der √† la fonction de recherche √† l'aide du nouveau bouton dans l'en-t√™te:</p>
<p style="Normal" xid="2576"><c></c></p>
<p style="Normal" xid="2577"><c></c></p>
<p style="Normal" xid="2578"><c></c></p>
<p style="Normal" xid="2579"><c></c></p>
<p style="Normal" xid="2580"><c></c></p>
<p style="Normal" xid="2581"><c></c></p>
<p style="Normal" xid="2582"><c></c></p>
<p style="Normal" xid="2583"><c></c></p>
<p style="Normal" xid="2584"><c></c></p>
<p style="Normal" xid="2585"><c></c></p>
<p style="Normal" xid="2586"><c></c></p>
<p style="Normal" xid="2587"><c></c></p>
<p style="Normal" xid="2588"><c></c></p>
<p style="Normal" xid="2589"><c></c></p>
<p style="Normal" xid="2590"><c></c></p>
<p style="Normal" xid="2591"><c></c></p>
<p style="Normal" xid="2592">Tr√®s bien, revenons maintenant au composant de recherche et voyons comment nous pouvons impl√©menter la recherche r√©elle.</p>
<p style="Normal" xid="2593">Liens de filtrage</p>
<p style="Normal" xid="2594"><c></c></p>
<p style="Normal" xid="2595">Ouvrez Search.js et ajoutez la d√©finition de requ√™te suivante en haut du fichier:</p>
<p style="Normal" xid="2596"><c></c></p>
<p style="Normal" xid="2597"><c></c></p>
<p style="Normal" xid="2598">.../hackernews-react-apollo/src/components/Search.js</p>
<p style="Normal" xid="2599"><c></c></p>
<p style="Normal" xid="2600">const FEED_SEARCH_QUERY = gql`</p>
<p style="Normal" xid="2601">query FeedSearchQuery($filter: String!) {</p>
<p style="Normal" xid="2602">feed(filter: $filter) {</p>
<p style="Normal" xid="2603">  links {</p>
<p style="Normal" xid="2604">    id</p>
<p style="Normal" xid="2605">    url</p>
<p style="Normal" xid="2606">    description</p>
<p style="Normal" xid="2607">    createdAt</p>
<p style="Normal" xid="2608">    postedBy {</p>
<p style="Normal" xid="2609">      id</p>
<p style="Normal" xid="2610">      name</p>
<p style="Normal" xid="2611">    }</p>
<p style="Normal" xid="2612">    votes {</p>
<p style="Normal" xid="2613">      id</p>
<p style="Normal" xid="2614">      user {</p>
<p style="Normal" xid="2615">        id</p>
<p style="Normal" xid="2616">      }</p>
<p style="Normal" xid="2617">    }</p>
<p style="Normal" xid="2618">  }</p>
<p style="Normal" xid="2619">}</p>
<p style="Normal" xid="2620">}</p>
<p style="Normal" xid="2621">`</p>
<p style="Normal" xid="2622"><c></c></p>
<p style="Normal" xid="2623">Cette requ√™te ressemble √† la requ√™te de flux utilis√©e dans LinkList. Cependant, cette fois, il prend un argument appel√© filtre qui sera utilis√© pour contraindre la liste des liens que vous souhaitez r√©cup√©rer.</p>
<p style="Normal" xid="2624"><c></c></p>
<p style="Normal" xid="2625">Le filtre r√©el est construit et utilis√© dans le r√©solveur de flux impl√©ment√© dans server / src / resolvers / Query.js:</p>
<p style="Normal" xid="2626"><c></c></p>
<p style="Normal" xid="2627"><c></c></p>
<p style="Normal" xid="2628">.../hackernews-react-apollo/server/src/resolvers/Query.js</p>
<p style="Normal" xid="2629"><c></c></p>
<p style="Normal" xid="2630">async function feed(parent, args, context) {</p>
<p style="Normal" xid="2631">const count = await context.prisma</p>
<p style="Normal" xid="2632">.linksConnection({</p>
<p style="Normal" xid="2633">  where: {</p>
<p style="Normal" xid="2634">    OR: [</p>
<p style="Normal" xid="2635">      { description_contains: args.filter },</p>
<p style="Normal" xid="2636">      { url_contains: args.filter },</p>
<p style="Normal" xid="2637">    ],</p>
<p style="Normal" xid="2638">  },</p>
<p style="Normal" xid="2639">})</p>
<p style="Normal" xid="2640">.aggregate()</p>
<p style="Normal" xid="2641">.count()</p>
<p style="Normal" xid="2642">const links = await context.prisma.links({</p>
<p style="Normal" xid="2643">where: {</p>
<p style="Normal" xid="2644">  OR: [</p>
<p style="Normal" xid="2645">    { description_contains: args.filter },</p>
<p style="Normal" xid="2646">    { url_contains: args.filter },</p>
<p style="Normal" xid="2647">  ],</p>
<p style="Normal" xid="2648">},</p>
<p style="Normal" xid="2649">skip: args.skip,</p>
<p style="Normal" xid="2650">first: args.first,</p>
<p style="Normal" xid="2651">orderBy: args.orderBy,</p>
<p style="Normal" xid="2652">})</p>
<p style="Normal" xid="2653">return {</p>
<p style="Normal" xid="2654">count,</p>
<p style="Normal" xid="2655">links,</p>
<p style="Normal" xid="2656">}</p>
<p style="Normal" xid="2657">}</p>
<p style="Normal" xid="2658"><c></c></p>
<p style="Normal" xid="2659">Remarque: Pour comprendre ce qui se passe dans ce r√©solveur, consultez le didacticiel Node.</p>
<p style="Normal" xid="2660"><c></c></p>
<p style="Normal" xid="2661">Dans ce cas, deux conditions sont sp√©cifi√©es: Un lien n'est renvoy√© que si son URL contient le filtre fourni ou sa description contient le filtre fourni. Les deux conditions sont combin√©es √† l'aide de l'op√©rateur OR de Prisma.</p>
<p style="Normal" xid="2662"><c></c></p>
<p style="Normal" xid="2663">Parfait, la requ√™te est d√©finie! Mais cette fois, nous voulons r√©ellement charger les donn√©es √† chaque fois que l'utilisateur clique sur le bouton de recherche - pas lors de la charge initiale du composant.</p>
<p style="Normal" xid="2664"><c></c></p>
<p style="Normal" xid="2665">C'est le but de la fonction withApollo. Cette fonction injecte l'instance ApolloClient que vous avez cr√©√©e dans index.js dans le composant de recherche en tant que nouvel accessoire appel√© client.</p>
<p style="Normal" xid="2666"><c></c></p>
<p style="Normal" xid="2667">Ce client dispose d'une m√©thode appel√©e requ√™te que vous pouvez utiliser pour envoyer une requ√™te manuellement au lieu d'utiliser le composant d'ordre sup√©rieur graphql.</p>
<p style="Normal" xid="2668"><c></c></p>
<p style="Normal" xid="2669">Voici √† quoi ressemble le code. Ouvrez Search.js et impl√©mentez _executeSearch comme suit:</p>
<p style="Normal" xid="2670"><c></c></p>
<p style="Normal" xid="2671"><c></c></p>
<p style="Normal" xid="2672"><c></c></p>
<p style="Normal" xid="2673">.../hackernews-react-apollo/src/components/Search.js</p>
<p style="Normal" xid="2674"><c></c></p>
<p style="Normal" xid="2675">_executeSearch = async () =&gt; {</p>
<p style="Normal" xid="2676">const { filter } = this.state</p>
<p style="Normal" xid="2677">const result = await this.props.client.query({</p>
<p style="Normal" xid="2678">query: FEED_SEARCH_QUERY,</p>
<p style="Normal" xid="2679">variables: { filter },</p>
<p style="Normal" xid="2680">})</p>
<p style="Normal" xid="2681">const links = result.data.feed.links</p>
<p style="Normal" xid="2682">this.setState({ links })</p>
<p style="Normal" xid="2683">}</p>
<p style="Normal" xid="2684"><c></c></p>
<p style="Normal" xid="2685"><c></c></p>
<p style="Normal" xid="2686">Fran√ßais</p>
<p style="Normal" xid="2687"><c></c></p>
<p style="Normal" xid="2688">L'impl√©mentation est presque triviale. Vous ex√©cutez manuellement FEED_SEARCH_QUERY et r√©cup√©rez les liens de la r√©ponse renvoy√©e par le serveur. Ces liens sont ensuite plac√©s dans l'√©tat du composant afin de pouvoir √™tre rendus.</p>
<p style="Normal" xid="2689"><c></c></p>
<p style="Normal" xid="2690">Allez-y et testez l'application en ex√©cutant yarn start dans un terminal et en acc√©dant √† http: // localhost: 3000 / search. Tapez ensuite une cha√Æne de recherche dans le champ de texte, cliquez sur le bouton de recherche et v√©rifiez que les liens renvoy√©s correspondent aux conditions du filtre.</p>
<p style="Normal" xid="2691"><c></c></p>
<p style="Normal" xid="2692">////////////////////////////: partie 8///////////////////////////////////////////////</p>
<p style="Normal" xid="2693"><c></c></p>
<p style="Normal" xid="2694"><c></c></p>
<p style="Normal" xid="2695"><c></c></p>
<p style="Normal" xid="2696">Mises √† jour en temps r√©el avec abonnements GraphQL</p>
<p style="Normal" xid="2697"><c></c></p>
<p style="Normal" xid="2698">Cette section est consacr√©e √† l'int√©gration de fonctionnalit√©s en temps r√©el dans l'application √† l'aide d'abonnements GraphQL.</p>
<p style="Normal" xid="2699">Que sont les abonnements GraphQL?</p>
<p style="Normal" xid="2700"><c></c></p>
<p style="Normal" xid="2701">Les abonnements sont une fonctionnalit√© GraphQL permettant au serveur d'envoyer des donn√©es √† ses clients lorsqu'un √©v√©nement sp√©cifique se produit. Les abonnements sont g√©n√©ralement mis en ≈ìuvre avec WebSockets, o√π le serveur maintient une connexion stable avec le client. Cela signifie que lorsque vous travaillez avec des abonnements, vous rompez le cycle de demande-r√©ponse qui a √©t√© utilis√© pour toutes les interactions pr√©c√©dentes avec l'API. Le client √©tablit maintenant une connexion stable avec le serveur en sp√©cifiant l'√©v√©nement qui l'int√©resse. Chaque fois que cet √©v√©nement particulier se produit, le serveur utilise la connexion pour envoyer les donn√©es attendues au client.</p>
<p style="Normal" xid="2702">Abonnements avec Apollo</p>
<p style="Normal" xid="2703"><c></c></p>
<p style="Normal" xid="2704">Lorsque vous utilisez Apollo, vous devez configurer votre ApolloClient avec des informations sur le point de terminaison des abonnements. Cela se fait en ajoutant un autre ApolloLink √† la cha√Æne de middleware Apollo. Cette fois, c'est le WebSocketLink du package apollo-link-ws.</p>
<p style="Normal" xid="2705"><c></c></p>
<p style="Normal" xid="2706">Allez d'abord ajouter cette d√©pendance √† votre application.</p>
<p style="Normal" xid="2707"><c></c></p>
<p style="Normal" xid="2708">Ouvrez un terminal et acc√©dez au r√©pertoire racine du projet. Ex√©cutez ensuite la commande suivante:</p>
<p style="Normal" xid="2709"><c></c></p>
<p style="Normal" xid="2710">$</p>
<p style="Normal" xid="2711">.../hackernews-react-apollo</p>
<p style="Normal" xid="2712"><c></c></p>
<p style="Normal" xid="2713">yarn add apollo-link-ws</p>
<p style="Normal" xid="2714"><c></c></p>
<p style="Normal" xid="2715">Remarque: pour que apollo-link-ws fonctionne, vous devez √©galement installer subscriptions-transport-ws</p>
<p style="Normal" xid="2716"><c></c></p>
<p style="Normal" xid="2717">yarn add subscriptions-transport-ws</p>
<p style="Normal" xid="2718"><c></c></p>
<p style="Normal" xid="2719">Ensuite, assurez-vous que votre instance ApolloClient conna√Æt le serveur d'abonnement.</p>
<p style="Normal" xid="2720"><c></c></p>
<p style="Normal" xid="2721">Ouvrez index.js et ajoutez l'importation suivante en haut du fichier:</p>
<p style="Normal" xid="2722"><c></c></p>
<p style="Normal" xid="2723"><c></c></p>
<p style="Normal" xid="2724">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="2725"><c></c></p>
<p style="Normal" xid="2726">import { split } from 'apollo-link'</p>
<p style="Normal" xid="2727">import { WebSocketLink } from 'apollo-link-ws'</p>
<p style="Normal" xid="2728">import { getMainDefinition } from 'apollo-utilities'</p>
<p style="Normal" xid="2729"><c></c></p>
<p style="Normal" xid="2730"><c></c></p>
<p style="Normal" xid="2731">Notez que vous importez d√©sormais √©galement la fonction de fractionnement √† partir de "apollo-link".</p>
<p style="Normal" xid="2732"><c></c></p>
<p style="Normal" xid="2733">Cr√©ez maintenant un nouveau WebSocketLink qui repr√©sente la connexion WebSocket. Utilisez split pour un ¬´routage¬ª appropri√© des requ√™tes et mettez √† jour l'appel constructeur d'ApolloClient comme ceci:</p>
<p style="Normal" xid="2734"><c></c></p>
<p style="Normal" xid="2735"><c></c></p>
<p style="Normal" xid="2736">.../hackernews-react-apollo/src/index.js</p>
<p style="Normal" xid="2737"><c></c></p>
<p style="Normal" xid="2738">const wsLink = new WebSocketLink({</p>
<p style="Normal" xid="2739">uri: `ws://localhost:4000`,</p>
<p style="Normal" xid="2740">options: {</p>
<p style="Normal" xid="2741">reconnect: true,</p>
<p style="Normal" xid="2742">connectionParams: {</p>
<p style="Normal" xid="2743">  authToken: localStorage.getItem(AUTH_TOKEN),</p>
<p style="Normal" xid="2744">}</p>
<p style="Normal" xid="2745">}</p>
<p style="Normal" xid="2746">})</p>
<p style="Normal" xid="2747"><c></c></p>
<p style="Normal" xid="2748">const link = split(</p>
<p style="Normal" xid="2749">({ query }) =&gt; {</p>
<p style="Normal" xid="2750">const { kind, operation } = getMainDefinition(query)</p>
<p style="Normal" xid="2751">return kind === 'OperationDefinition' &amp;&amp; operation === 'subscription'</p>
<p style="Normal" xid="2752">},</p>
<p style="Normal" xid="2753">wsLink,</p>
<p style="Normal" xid="2754">authLink.concat(httpLink)</p>
<p style="Normal" xid="2755">)</p>
<p style="Normal" xid="2756"><c></c></p>
<p style="Normal" xid="2757">const client = new ApolloClient({</p>
<p style="Normal" xid="2758">link,</p>
<p style="Normal" xid="2759">cache: new InMemoryCache()</p>
<p style="Normal" xid="2760">})</p>
<p style="Normal" xid="2761"><c></c></p>
<p style="Normal" xid="2762">Vous instanciez un WebSocketLink qui conna√Æt le point de terminaison des abonnements. Le point de terminaison des abonnements dans ce cas est similaire au point de terminaison HTTP, sauf qu'il utilise le protocole ws au lieu du protocole http. Notez que vous authentifiez √©galement la connexion Websocket avec le jeton de l'utilisateur que vous r√©cup√©rez de localStorage.</p>
<p style="Normal" xid="2763"><c></c></p>
<p style="Normal" xid="2764">split est utilis√© pour ¬´acheminer¬ª une demande vers un lien middleware sp√©cifique. Il prend trois arguments, le premier est une fonction de test qui renvoie un bool√©en. Les deux arguments restants sont de nouveau de type ApolloLink. Si test renvoie vrai, la demande sera transmise au lien pass√© en tant que deuxi√®me argument. Si faux, au troisi√®me.</p>
<p style="Normal" xid="2765"><c></c></p>
<p style="Normal" xid="2766">Dans votre cas, la fonction de test v√©rifie si l'op√©ration demand√©e est un abonnement. Si tel est le cas, il sera transmis au wsLink, sinon (s'il s'agit d'une requ√™te ou d'une mutation), authLink.concat (httpLink) s'en chargera:</p>
<p style="Normal" xid="2767"><c></c></p>
<p style="Normal" xid="2768">S'abonner √† de nouveaux liens</p>
<p style="Normal" xid="2769"><c></c></p>
<p style="Normal" xid="2770">Pour que l'application se mette √† jour en temps r√©el lorsque de nouveaux liens sont cr√©√©s, vous devez vous abonner aux √©v√©nements qui se produisent sur le type de lien. Il existe g√©n√©ralement trois types d'√©v√©nements auxquels vous pouvez vous abonner lorsque vous utilisez Prisma:</p>
<p style="Normal" xid="2771"><c></c></p>
<p style="Normal" xid="2772">un nouveau lien est cr√©√©</p>
<p style="Normal" xid="2773">un lien existant est mis √† jour</p>
<p style="Normal" xid="2774">un lien existant est supprim√©</p>
<p style="Normal" xid="2775"><c></c></p>
<p style="Normal" xid="2776">Vous impl√©menterez l'abonnement dans le composant LinkList, car c'est l√† que tous les liens sont affich√©s.</p>
<p style="Normal" xid="2777"><c></c></p>
<p style="Normal" xid="2778">Ouvrez LinkList.js et mettez √† jour le composant actuel comme suit:</p>
<p style="Normal" xid="2779"><c></c></p>
<p style="Normal" xid="2780"><c></c></p>
<p style="Normal" xid="2781">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2782"><c></c></p>
<p style="Normal" xid="2783">class LinkList extends Component {</p>
<p style="Normal" xid="2784">_updateCacheAfterVote = (store, createVote, linkId) =&gt; {</p>
<p style="Normal" xid="2785">const data = store.readQuery({ query: FEED_QUERY })</p>
<p style="Normal" xid="2786"><c></c></p>
<p style="Normal" xid="2787">const votedLink = data.feed.links.find(link =&gt; link.id === linkId)</p>
<p style="Normal" xid="2788">votedLink.votes = createVote.link.votes</p>
<p style="Normal" xid="2789"><c></c></p>
<p style="Normal" xid="2790">store.writeQuery({ query: FEED_QUERY, data })</p>
<p style="Normal" xid="2791">}</p>
<p style="Normal" xid="2792"><c></c></p>
<p style="Normal" xid="2793">_subscribeToNewLinks = async () =&gt; {</p>
<p style="Normal" xid="2794">// ... you'll implement this üîú</p>
<p style="Normal" xid="2795">}</p>
<p style="Normal" xid="2796"><c></c></p>
<p style="Normal" xid="2797">render() {</p>
<p style="Normal" xid="2798">return (</p>
<p style="Normal" xid="2799">  &lt;Query query={FEED_QUERY}&gt;</p>
<p style="Normal" xid="2800">    {({ loading, error, data, subscribeToMore }) =&gt; {</p>
<p style="Normal" xid="2801">      if (loading) return &lt;div&gt;Fetching&lt;/div&gt;</p>
<p style="Normal" xid="2802">      if (error) return &lt;div&gt;Error&lt;/div&gt;</p>
<p style="Normal" xid="2803"><c></c></p>
<p style="Normal" xid="2804">      this._subscribeToNewLinks(subscribeToMore)</p>
<p style="Normal" xid="2805"><c></c></p>
<p style="Normal" xid="2806">      const linksToRender = data.feed.links</p>
<p style="Normal" xid="2807"><c></c></p>
<p style="Normal" xid="2808">      return (</p>
<p style="Normal" xid="2809">        &lt;div&gt;</p>
<p style="Normal" xid="2810">          {linksToRender.map((link, index) =&gt; (</p>
<p style="Normal" xid="2811">            &lt;Link</p>
<p style="Normal" xid="2812">              key={link.id}</p>
<p style="Normal" xid="2813">              link={link}</p>
<p style="Normal" xid="2814">              index={index}</p>
<p style="Normal" xid="2815">              updateStoreAfterVote={this._updateCacheAfterVote}</p>
<p style="Normal" xid="2816">            /&gt;</p>
<p style="Normal" xid="2817">          ))}</p>
<p style="Normal" xid="2818">        &lt;/div&gt;</p>
<p style="Normal" xid="2819">      )</p>
<p style="Normal" xid="2820">    }}</p>
<p style="Normal" xid="2821">  &lt;/Query&gt;</p>
<p style="Normal" xid="2822">)</p>
<p style="Normal" xid="2823">}</p>
<p style="Normal" xid="2824">}</p>
<p style="Normal" xid="2825"><c></c></p>
<p style="Normal" xid="2826"><c></c></p>
<p style="Normal" xid="2827">Voyons ce qui se passe ici! Vous utilisez le composant &lt;Query /&gt; comme d'habitude, mais vous utilisez maintenant subscribeToMore re√ßu comme accessoire dans la fonction d'accessoire de rendu du composant. En appelant _subscribeToNewLinks avec sa fonction subscribeToMore respective, vous vous assurez que le composant est r√©ellement abonn√© aux √©v√©nements. Cet appel ouvre une connexion Websocket au serveur d'abonnement.</p>
<p style="Normal" xid="2828"><c></c></p>
<p style="Normal" xid="2829">Toujours dans LinkList.js, impl√©mentez _subscribeToNewLinks comme ceci:</p>
<p style="Normal" xid="2830"><c></c></p>
<p style="Normal" xid="2831"><c></c></p>
<p style="Normal" xid="2832">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2833"><c></c></p>
<p style="Normal" xid="2834">_subscribeToNewLinks = subscribeToMore =&gt; {</p>
<p style="Normal" xid="2835">subscribeToMore({</p>
<p style="Normal" xid="2836">document: NEW_LINKS_SUBSCRIPTION,</p>
<p style="Normal" xid="2837">updateQuery: (prev, { subscriptionData }) =&gt; {</p>
<p style="Normal" xid="2838">  if (!subscriptionData.data) return prev</p>
<p style="Normal" xid="2839">  const newLink = subscriptionData.data.newLink</p>
<p style="Normal" xid="2840">  const exists = prev.feed.links.find(({ id }) =&gt; id === newLink.id);</p>
<p style="Normal" xid="2841">  if (exists) return prev;</p>
<p style="Normal" xid="2842"><c></c></p>
<p style="Normal" xid="2843">  return Object.assign({}, prev, {</p>
<p style="Normal" xid="2844">    feed: {</p>
<p style="Normal" xid="2845">      links: [newLink, ...prev.feed.links],</p>
<p style="Normal" xid="2846">      count: prev.feed.links.length + 1,</p>
<p style="Normal" xid="2847">      __typename: prev.feed.__typename</p>
<p style="Normal" xid="2848">    }</p>
<p style="Normal" xid="2849">  })</p>
<p style="Normal" xid="2850">}</p>
<p style="Normal" xid="2851">})</p>
<p style="Normal" xid="2852">}</p>
<p style="Normal" xid="2853"><c></c></p>
<p style="Normal" xid="2854"><c></c></p>
<p style="Normal" xid="2855">Vous passez deux arguments pour vous abonner √† Plus:</p>
<p style="Normal" xid="2856"><c></c></p>
<p style="Normal" xid="2857">document: cela repr√©sente la requ√™te d'abonnement elle-m√™me. Dans votre cas, l'abonnement se d√©clenchera chaque fois qu'un nouveau lien est cr√©√©.</p>
<p style="Normal" xid="2858">updateQuery: similaire √† la mise √† jour du cache, cette fonction vous permet de d√©terminer comment le magasin doit √™tre mis √† jour avec les informations envoy√©es par le serveur apr√®s que l'√©v√©nement s'est produit. En fait, il suit exactement le m√™me principe qu'un r√©ducteur Redux: il prend comme arguments l'√©tat pr√©c√©dent (de la requ√™te √† laquelle subscribeToMore a √©t√© appel√©e) et les donn√©es d'abonnement envoy√©es par le serveur. Vous pouvez ensuite d√©terminer comment fusionner les donn√©es d'abonnement dans l'√©tat existant et renvoyer les donn√©es mises √† jour. Tout ce que vous faites dans updateQuery est de r√©cup√©rer le nouveau lien √† partir des donn√©es d'abonnement re√ßues, de le fusionner dans la liste de liens existante et de renvoyer le r√©sultat de cette op√©ration.</p>
<p style="Normal" xid="2859"><c></c></p>
<p style="Normal" xid="2860">La derni√®re chose que vous devez faire pour que cela fonctionne est d'ajouter le NEW_LINKS_SUBSCRIPTION en haut du fichier:</p>
<p style="Normal" xid="2861"><c></c></p>
<p style="Normal" xid="2862"><c></c></p>
<p style="Normal" xid="2863">.../hackernews-react-apollo/src/components/LinkList.js</p>
<p style="Normal" xid="2864"><c></c></p>
<p style="Normal" xid="2865">const NEW_LINKS_SUBSCRIPTION = gql`</p>
<p style="Normal" xid="2866">subscription {</p>
<p style="Normal" xid="2867">newLink {</p>
<p style="Normal" xid="2868">  id</p>
<p style="Normal" xid="2869">  url</p>
<p style="Normal" xid="2870">  description</p>
<p style="Normal" xid="2871">  createdAt</p>
<p style="Normal" xid="2872">  postedBy {</p>
<p style="Normal" xid="2873">    id</p>
<p style="Normal" xid="2874">    name</p>
<p style="Normal" xid="2875">  }</p>
<p style="Normal" xid="2876">  votes {</p>
<p style="Normal" xid="2877">    id</p>
<p style="Normal" xid="2878">    user {</p>
<p style="Normal" xid="2879">      id</p>
<p style="Normal" xid="2880">    }</p>
<p style="Normal" xid="2881">  }</p>
<p style="Normal" xid="2882">}</p>
<p style="Normal" xid="2883">}</p>
<p style="Normal" xid="2884">`</p>
<p style="Normal" xid="2885"><c></c></p>
<p style="Normal" xid="2886"><c></c></p>
<p style="Normal" xid="2887"><c></c></p>
<p style="Normal" xid="2888"><c></c></p>
<p style="Normal" xid="2889"><c></c></p>
<p style="Normal" xid="2890"><c></c></p>
<p style="Normal" xid="2891"><c></c></p>
<p style="Normal" xid="2892"><c></c></p>
<p style="Normal" xid="2893"><c></c></p>
<p style="Normal" xid="2894"><c></c></p>
<p style="Normal" xid="2895">////////////////////////////////partie 9////////////////////////////////////////////////////////////////////</p>
<p style="Normal" xid="2896"><c></c></p>
<p style="Normal" xid="2897" props="font-weight:normal; font-size:12pt; font-family:Liberation Serif; color:#000000"><c props="font-size:14pt; color:#222222; text-transform:none; font-weight:normal">Pagination<br/>Le dernier sujet que nous aborderons dans ce didacticiel est la pagination. Vous allez impl√©menter une approche de pagination simple afin que les utilisateurs puissent voir les liens en petits morceaux plut√¥t que d'avoir une liste extr√™mement longue d'√©l√©ments Link.<br/><br/>Pr√©paration des composants React<br/>Encore une fois, vous devez d'abord pr√©parer les composants React pour cette nouvelle fonctionnalit√©. En fait, nous ajusterons l√©g√®rement la configuration de routage actuelle. Voici l'id√©e: le composant LinkList sera utilis√© pour deux cas d'utilisation (et itin√©raires) diff√©rents. La premi√®re consiste √† afficher les 10 liens les plus vot√©s. Son deuxi√®me cas d'utilisation consiste √† afficher de nouveaux liens dans une liste s√©par√©e en plusieurs pages que l'utilisateur peut parcourir.<br/><br/>Ouvrez App.js et ajustez la m√©thode de rendu comme suit:</c><c props="font-size:28.000000pt; color:#222222; text-transform:none; font-weight:normal"><br/></c><c props="font-size:14pt; color:#222222; text-transform:none; font-weight:normal"><br/>... / hackernews-react-apollo / src / components / App.js</c></p>
<p style="Normal" xid="2898"><c></c></p>
<p style="Normal" xid="2899"><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">render</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">() {<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">return</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> (<br/>    &lt;div className=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'center w85'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">&gt;<br/>      &lt;Header /&gt;<br/>      &lt;div className=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'ph3 pv1 background-gray'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">&gt;<br/>        &lt;Switch&gt;<br/>          &lt;Route exact path=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> render={() =&gt; &lt;Redirect to=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/new/1'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> /&gt;} /&gt;<br/>          &lt;Route exact path=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/create'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> component={CreateLink} /&gt;<br/>          &lt;Route exact path=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/login'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> component={Login} /&gt;<br/>          &lt;Route exact path=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/search'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> component={Search} /&gt;<br/>          &lt;Route exact path=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/top'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> component={LinkList} /&gt;<br/>          &lt;Route exact path=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/new/:page'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> component={LinkList} /&gt;<br/>        &lt;/Switch&gt;<br/>      &lt;/div&gt;<br/>    &lt;/div&gt;<br/>  )<br/>}</c></p>
<p style="Normal" xid="2900"><c></c></p>
<p style="Normal" xid="2901"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Assurez-vous d'importer le composant de redirection afin de ne pas obtenir d'erreurs. Mettez √† jour l'importation du routeur en haut du fichier: ... / hackernews-react-apollo / src / components / App.js</c></p>
<p style="Normal" xid="2902"><c></c></p>
<p style="Normal" xid="2903"><c></c></p>
<p style="Normal" xid="2904"><c></c></p>
<p style="Normal" xid="2905" props="text-align:left; dom-dir:ltr">Vous avez maintenant ajout√© deux nouvelles routes: / top et / new /: page. Ce dernier lit la valeur de la page dans l'url afin que ces informations soient disponibles dans le composant rendu, ici c'est LinkList.</p>
<p style="Normal" xid="2906" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2907" props="text-align:left; dom-dir:ltr">L'itin√©raire racine / redirige maintenant vers la premi√®re page de l'itin√©raire o√π les nouveaux messages sont affich√©s.</p>
<p style="Normal" xid="2908" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2909" props="text-align:left; dom-dir:ltr">Avant de continuer, ajoutez rapidement un nouvel √©l√©ment de navigation au composant En-t√™te qui am√®ne l'utilisateur √† l'itin√©raire / top.</p>
<p style="Normal" xid="2910"><c></c></p>
<p style="Normal" xid="2911"><c></c></p>
<p style="Normal" xid="2912"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Ouvrez Header.js ajoutez les lignes suivantes entre les routes de recherche / et /: ... / hackernews-react-apollo / src / components / Header.js</c></p>
<p style="Normal" xid="2913"><c></c></p>
<p style="Normal" xid="2914"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">&lt;Link to=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">"/top"</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> className=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">"ml1 no-underline black"</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">&gt;<br/>  top<br/>&lt;/Link&gt;<br/>&lt;div className=</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">"ml1"</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">&gt;|&lt;/div&gt;</c></p>
<p style="Normal" xid="2915"><c></c></p>
<p style="Normal" xid="2916"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Vous devez √©galement ajouter une certaine logique au composant LinkList pour tenir compte des deux responsabilit√©s diff√©rentes qu'il a maintenant. Ouvrez LinkList.js et ajoutez trois arguments √† FeedQuery en rempla√ßant la d√©finition FEED_QUERY par ce qui suit:</c></p>
<p style="Normal" xid="2917"><c></c></p>
<p style="Normal" xid="2918"><c></c></p>
<p style="Normal" xid="2919" props="text-align:left; dom-dir:ltr">export const FEED_QUERY = gql`</p>
<p style="Normal" xid="2920" props="text-align:left; dom-dir:ltr">query FeedQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {</p>
<p style="Normal" xid="2921" props="text-align:left; dom-dir:ltr"> feed(first: $first, skip: $skip, orderBy: $orderBy) {</p>
<p style="Normal" xid="2922" props="text-align:left; dom-dir:ltr">   links {</p>
<p style="Normal" xid="2923" props="text-align:left; dom-dir:ltr">     id</p>
<p style="Normal" xid="2924" props="text-align:left; dom-dir:ltr">     createdAt</p>
<p style="Normal" xid="2925" props="text-align:left; dom-dir:ltr">     url</p>
<p style="Normal" xid="2926" props="text-align:left; dom-dir:ltr">     description</p>
<p style="Normal" xid="2927" props="text-align:left; dom-dir:ltr">     postedBy {</p>
<p style="Normal" xid="2928" props="text-align:left; dom-dir:ltr">       id</p>
<p style="Normal" xid="2929" props="text-align:left; dom-dir:ltr">       name</p>
<p style="Normal" xid="2930" props="text-align:left; dom-dir:ltr">     }</p>
<p style="Normal" xid="2931" props="text-align:left; dom-dir:ltr">     votes {</p>
<p style="Normal" xid="2932" props="text-align:left; dom-dir:ltr">       id</p>
<p style="Normal" xid="2933" props="text-align:left; dom-dir:ltr">       user {</p>
<p style="Normal" xid="2934" props="text-align:left; dom-dir:ltr">         id</p>
<p style="Normal" xid="2935" props="text-align:left; dom-dir:ltr">       }</p>
<p style="Normal" xid="2936" props="text-align:left; dom-dir:ltr">     }</p>
<p style="Normal" xid="2937" props="text-align:left; dom-dir:ltr">   }</p>
<p style="Normal" xid="2938" props="text-align:left; dom-dir:ltr">   count</p>
<p style="Normal" xid="2939" props="text-align:left; dom-dir:ltr"> }</p>
<p style="Normal" xid="2940" props="text-align:left; dom-dir:ltr">}</p>
<p style="Normal" xid="2941" props="text-align:left; dom-dir:ltr">`</p>
<p style="Normal" xid="2942" props="text-align:left; font-weight:normal; font-size:12pt; font-family:Liberation Sans; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2943"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">La requ√™te accepte d√©sormais les arguments que nous utiliserons pour impl√©menter la pagination et l'ordre. skip d√©finit le d√©calage o√π la requ√™te commencera. Si vous avez transmis une valeur de, par exemple 10 pour cet argument, cela signifie que les 10 premiers √©l√©ments de la liste ne seront pas inclus dans la r√©ponse. d√©finit ensuite la limite ou le nombre d'√©l√©ments que vous souhaitez charger √† partir de cette liste. Supposons que vous passez le 10 pour le saut et le 5 pour le premier, vous recevrez les √©l√©ments 10 √† 15 de la liste. orderBy d√©finit comment la liste retourn√©e doit √™tre tri√©e.<br/><br/>Mais comment passer les variables lors de l'utilisation du composant &lt;Query /&gt; qui r√©cup√®re les donn√©es sous le capot? Vous devez fournir les arguments dans les variables prop directement l√† o√π vous d√©clarez le composant.</c></p>
<p style="Normal" xid="2944"><c></c></p>
<p style="Normal" xid="2945"><c></c></p>
<p style="Normal" xid="2946" props="text-align:left; dom-dir:ltr">Toujours dans LinkList.js, ajoutez la m√©thode suivante dans la port√©e du composant LinkList:</p>
<p style="Normal" xid="2947" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2948" props="text-align:left; dom-dir:ltr">... / hackernews-react-apollo / src / components / LinkList.js</p>
<p style="Normal" xid="2949" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2950" props="text-align:left; dom-dir:ltr"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">_getQueryVariables = () =&gt; {<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> isNewPage = </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.location.pathname.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">includes</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'new'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> page = </c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">parseInt</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.match.params.page, </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">10</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> skip = isNewPage ? (page - </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">1</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">) * LINKS_PER_PAGE : </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">0</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> first = isNewPage ? LINKS_PER_PAGE : </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">100</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> orderBy = isNewPage ? </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'createdAt_DESC'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> : </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">null</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">return</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> { first, skip, orderBy }<br/>}</c></p>
<p style="Normal" xid="2951" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2952" props="text-align:left; dom-dir:ltr"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Et mettez √† jour la d√©finition du composant &lt;Query /&gt; comme suit:</c></p>
<p style="Normal" xid="2953" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Normal" xid="2954" props="text-align:left; dom-dir:ltr"><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/LinkList.js" xid="2955"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/LinkList.js</c></a></p>
<p style="Normal" xid="2957" props="text-align:left; dom-dir:ltr"><c></c></p>
<p style="Plain Text" xid="2958" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:11pt; font-family:Courier; text-transform:none; color:#393a34">&lt;Query query={FEED_QUER variables={</c><c props="font-weight:normal; font-size:11pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:11pt; font-family:Courier; text-transform:none; color:#393a34">.</c><c props="font-weight:bold; font-size:11pt; font-family:Courier; text-transform:none; color:#9a050f">_getQueryVariables</c><c props="font-weight:normal; font-size:11pt; font-family:Courier; text-transform:none; color:#393a34">()}&gt;</c></p>
<p style="Plain Text" xid="2959" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:9pt; color:#222222; text-transform:none; font-weight:normal">Vous passez maintenant en premier, ignorez, les valeurs orderBy en tant que variables bas√©es sur la page en cours (this.props.match.params.page) qui est utilis√©e pour calculer le bloc de liens que vous r√©cup√©rez.<br/><br/>Notez √©galement que vous incluez l'attribut de commande createdAt_DESC pour la nouvelle page pour vous assurer que les liens les plus r√©cents sont affich√©s en premier. La commande de l'itin√©raire / top sera calcul√©e manuellement en fonction du nombre de votes pour chaque lien.<br/><br/>Vous devez √©galement d√©finir la constante LINKS_PER_PAGE, puis l'importer dans le composant LinkList.</c></p>
<p style="Plain Text" xid="2960" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2961" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Ouvrez src / constants.js et ajoutez la d√©finition suivante:</c><c props="font-size:28.000000pt; color:#222222; text-transform:none; font-weight:normal"><br/><br/></c><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">... / hackernews-react-apollo / src / constants.js</c><c props="font-size:28.000000pt; color:#222222; text-transform:none; font-weight:normal"><br/></c><c props="lang:fr-FR; font-size:12pt; font-weight:normal; font-family:Liberation Serif; color:#222222">export const LINKS_PER_PAGE = 5</c></p>
<p style="Normal" xid="2962" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Impl√©mentation de la navigation Ensuite, vous avez besoin de fonctionnalit√©s pour que l'utilisateur puisse basculer entre les pages. Ajoutez d'abord deux √©l√©ments de bouton au bas du composant LinkList qui peuvent √™tre utilis√©s pour naviguer dans les deux sens.</c></p>
<p style="Normal" xid="2963" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2964" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Ajustez maintenant l'instruction d'importation depuis ../constants dans LinkList.js pour inclure √©galement la nouvelle constante: ... / hackernews-react-apollo / src / components / LinkList.js</c></p>
<p style="Normal" xid="2965" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2966" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Avant de continuer, vous pouvez en savoir plus sur React Fragments - un mod√®le courant pour qu'un composant renvoie plusieurs √©l√©ments sans ajouter de n≈ìuds suppl√©mentaires au DOM ‚ú® N'oubliez pas d'ajouter Fragment en haut du fichier:</c></p>
<p style="Normal" xid="2967" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2968" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/LinkList.js" xid="2969"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/LinkList.js</c></a></p>
<p style="Plain Text" xid="2971" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">import</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> React, { Component, Fragment } </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">from</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'react'</c></p>
<p style="Plain Text" xid="2972" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Plain Text" xid="2973" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:12pt; font-family:Liberation Serif; text-transform:none; color:#222222">√âtant donn√© que la </c></p>
<p style="Plain Text" xid="2974" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:12pt; font-family:Liberation Serif; text-transform:none; color:#222222">configuration est maintenant un peu plus compliqu√©e, vous allez calculer la liste des liens √† rendre dans une m√©thode distincte.</c></p>
<p style="Normal" xid="2975" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2976" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2977" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Toujours dans LinkList.js, ajoutez l'impl√©mentation de m√©thode suivante:</c></p>
<p style="Normal" xid="2978" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2979" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2980" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/LinkList.js" xid="2981"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/LinkList.js</c></a></p>
<p style="Normal" xid="2983" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2984" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">_getLinksToRender = data =&gt; {<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> isNewPage = </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.location.pathname.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">includes</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'new'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">if</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> (isNewPage) {<br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">return</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> data.feed.links<br/>  }<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> rankedLinks = data.feed.links.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">slice</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">()<br/>  rankedLinks.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">sort</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">((l1, l2) =&gt; l2.votes.length - l1.votes.length)<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">return</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> rankedLinks<br/>}</c></p>
<p style="Normal" xid="2985" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2986" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Pour la nouvelle page, vous retournerez simplement tous les liens renvoy√©s par la requ√™te. C'est logique, car ici, vous n'avez pas √† apporter de modifications manuelles</c><c props="font-size:28.000000pt; color:#222222; text-transform:none; font-weight:normal"> </c><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">√† la liste √† rendre. Si l'utilisateur a charg√© le composant √† partir de l'itin√©raire / top, vous trierez la liste en fonction du nombre de votes et renverrez les 10 premiers liens.</c><c props="font-size:28.000000pt; color:#222222; text-transform:none; font-weight:normal"><br/><br/></c><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Ensuite, vous allez impl√©menter la fonctionnalit√© des boutons Pr√©c√©dent et Suivant.</c></p>
<p style="Normal" xid="2987" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Dans LinkList.js, ajoutez les deux m√©thodes suivantes qui seront appel√©es lorsque les boutons seront enfonc√©s:</c></p>
<p style="Normal" xid="2988" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2989" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/LinkList.js" xid="2990"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/LinkList.js</c></a></p>
<p style="Normal" xid="2992" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2993" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">_nextPage = data =&gt; {<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> page = </c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">parseInt</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.match.params.page, </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">10</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">if</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> (page &lt;= data.feed.count / LINKS_PER_PAGE) {<br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> nextPage = page + </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">1</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.history.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">push</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">`/new/</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">${nextPage}</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">`</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  }<br/>}<br/><br/>_previousPage = () =&gt; {<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> page = </c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">parseInt</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.match.params.page, </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">10</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">if</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> (page &gt; </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">1</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">) {<br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> previousPage = page - </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">1</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.history.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">push</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">`/new/</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">${previousPage}</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">`</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  }<br/>}</c></p>
<p style="Normal" xid="2994" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2995" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">La mise en ≈ìuvre de ceux-ci est tr√®s simple. Vous r√©cup√©rez la page actuelle de l'URL et impl√©mentez un contr√¥le de coh√©rence pour vous assurer qu'il est judicieux de paginer d'avant en arri√®re. Ensuite, vous calculez simplement la page suivante et dites au routeur o√π naviguer ensuite. Le routeur rechargera alors le composant avec une nouvelle page dans l'url qui sera utilis√©e pour calculer le bon segment de liens √† charger. Ex√©cutez l'application en tapant yarn start dans un terminal et utilisez les nouveaux boutons pour paginer dans votre liste de liens! Ajustements finaux Gr√¢ce aux modifications que nous avons apport√©es √† FEED_QUERY, vous remarquerez que les fonctions de mise √† jour de vos mutations ne fonctionnent plus. En effet, readQuery s'attend d√©sormais √† recevoir les m√™mes variables que nous avons d√©finies auparavant. Remarque: readQuery fonctionne essentiellement de la m√™me mani√®re que la m√©thode de requ√™te sur ApolloClient que vous avez utilis√©e pour impl√©menter la recherche. Cependant, au lieu d'appeler le serveur, il r√©soudra simplement la requ√™te par rapport au magasin local! Si une requ√™te a √©t√© extraite du serveur avec des variables, readQuery doit √©galement conna√Ætre les variables pour s'assurer qu'elle peut fournir les bonnes informations √† partir du cache.</c></p>
<p style="Normal" xid="2996" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2997" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Avec ces informations, ouvrez LinkList.js et mettez √† jour la m√©thode _updateCacheAfterVote pour qu'elle se pr√©sente comme suit:</c></p>
<p style="Normal" xid="2998" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="2999" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/LinkList.js" xid="3000"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/LinkList.js</c></a></p>
<p style="Normal" xid="3002" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3003" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="7" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3004" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">_updateCacheAfterVote = (store, createVote, linkId) =&gt; {<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> isNewPage = </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.location.pathname.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">includes</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'new'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> page = </c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">parseInt</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.match.params.page, </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">10</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)<br/><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> skip = isNewPage ? (page - </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">1</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">) * LINKS_PER_PAGE : </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">0</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> first = isNewPage ? LINKS_PER_PAGE : </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">100</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> orderBy = isNewPage ? </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'createdAt_DESC'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> : </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">null</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>  </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> data = store.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">readQuery</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">({<br/>    query: FEED_QUERY,<br/>    variables: { first, skip, orderBy }<br/>  })<br/></c></p>
<p style="Normal" xid="3005" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3006" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3007" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3008" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Tout ce qui se passe ici est le calcul des variables selon que l'utilisateur est actuellement sur / top ou / new route. Enfin, vous devez √©galement ajuster l'impl√©mentation de la mise √† jour lorsque de nouveaux liens sont cr√©√©s.</c></p>
<p style="Normal" xid="3009" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3010" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; color:#222222; text-transform:none; font-weight:normal">Ouvrez CreateLink.js et remplacez le composant &lt;Mutation /&gt; actuel comme suit:</c></p>
<p style="Normal" xid="3011" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3012" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/CreateLink.js" xid="3013"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/CreateLink.js</c></a></p>
<p style="Plain Text" xid="3015" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Plain Text" xid="3016" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">&lt;Mutation<br/>  mutation={POST_MUTATION}<br/>  variables={{ description, url }}<br/>  onCompleted={() =&gt; </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">this</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">.props.history.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">push</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'/new/1'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">)}<br/>  update={(store, { data: { post } }) =&gt; {<br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> first = LINKS_PER_PAGE<br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> skip = </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#36acaa">0</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> orderBy = </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#e3116c">'createdAt_DESC'</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"><br/>    </c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#00a4db">const</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"> data = store.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">readQuery</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">({<br/>      query: FEED_QUERY,<br/>      variables: { first, skip, orderBy }<br/>    })<br/>    data.feed.links.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">unshift</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">(post)<br/>    store.</c><c props="font-weight:bold; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#9a050f">writeQuery</c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">({<br/>      query: FEED_QUERY,<br/>      data,</c></p>
<p style="Plain Text" xid="8" props="font-family:Liberation Serif; dom-dir:ltr; font-style:normal; font-weight:normal; lang:fr-FR; text-align:left; text-indent:0px; text-decoration:none; orphans:2; widows:2; color:222222; text-position:normal; line-height:1.200000; font-size:28pt"><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34"></c><c props="font-weight:normal; font-size:13.000000pt; font-family:Courier; text-transform:none; color:#393a34">      variables: { first, skip, orderBy }<br/>    })<br/>  }}<br/>&gt;<br/>  {postMutation =&gt; &lt;button onClick={postMutation}&gt;Submit&lt;/button&gt;}<br/>&lt;/Mutation&gt;</c></p>
<p style="Normal" xid="3017" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3018" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:11pt; font-weight:normal; text-transform:none; color:#222222; font-style:normal">√âtant donn√© que vous n'avez pas encore la constante LINKS_PER_PAGE disponible dans ce composant, assurez-vous de l'importer en haut du fichier:</c></p>
<p style="Normal" xid="9" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; color:#222222; text-transform:none; font-size:28.000000pt; font-style:normal"></c></p>
<p style="Normal" xid="10" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; font-weight:normal; text-transform:none; color:#222222; font-style:normal"></c><a xlink:href="https://github.com/howtographql/react-apollo/blob/master/src/components/CreateLink.js" xid="11"><c props="font-weight:bold; font-size:12.000000pt">.../hackernews-react-apollo/src/components/CreateLink.js</c></a></p>
<p style="Normal" xid="13" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="14" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; color:#00a4db; font-family:Courier; text-transform:none; font-size:13.000000pt; font-style:normal">import</c><c props="font-weight:normal; color:#393a34; font-family:Courier; text-transform:none; font-size:13.000000pt; font-style:normal"> { LINKS_PER_PAGE } </c><c props="font-weight:normal; color:#00a4db; font-family:Courier; text-transform:none; font-size:13.000000pt; font-style:normal">from</c><c props="font-weight:normal; color:#393a34; font-family:Courier; text-transform:none; font-size:13.000000pt; font-style:normal"> </c><c props="font-weight:normal; color:#e3116c; font-family:Courier; text-transform:none; font-size:13.000000pt; font-style:normal">'../constants'</c></p>
<p style="Normal" xid="15" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; color:#393a34; text-transform:none; font-size:12pt; font-style:normal"></c></p>
<p style="Normal" xid="16" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; font-weight:normal; text-transform:none; color:#222222; font-style:normal">Vous avez maintenant ajout√© un syst√®me de pagination simple √† l'application, permettant aux utilisateurs de charger des liens en petits morceaux au lieu de les charger tous d'avance.</c></p>
<p style="Normal" xid="17" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="18" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Plain Text" xid="3019" props="font-family:Liberation Serif; dom-dir:ltr; font-style:normal; font-weight:normal; lang:fr-FR; text-align:left; text-indent:0px; text-decoration:none; orphans:2; widows:2; color:222222; text-position:normal; line-height:1.200000; font-size:28pt"><c></c></p>
<p style="Normal" xid="3029" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-size:12pt; font-weight:normal; text-transform:none; color:#222222; font-style:normal">Sommaire<br/>Dans ce didacticiel, vous avez appris √† cr√©er un clone Hackernews complet avec React et Apollo Client. Vous avez impl√©ment√© plusieurs fonctionnalit√©s, telles que l'affichage d'une liste de liens, l'inscription et l'authentification, la cr√©ation de nouveaux liens, le vote sur les liens, la pagination ainsi que les mises √† jour en temps r√©el avec les abonnements GraphQL. Pour un didacticiel plus long </c><c props="" props="font-weight:normal; color:#222222; text-transform:none; font-size:28.000000pt; font-style:normal">qui couvre les fonctionnalit√©s plus avanc√©es d'Apollo Client, consultez le Guide GraphQL.<br/><br/>Pour savoir comment cr√©er le backend que vous avez utilis√© pour ce didacticiel, consultez le didacticiel Node.JS.<br/><br/>Le backend √©tait aliment√© par graphql-yoga, une biblioth√®que de serveur GraphQL simple et rapide construite sur Express.js. Il est livr√© avec plusieurs fonctionnalit√©s, telles que la prise en charge pr√™te √† l'emploi pour GraphQL Playground et les abonnements GraphQL en temps r√©el.<br/><br/>Les r√©solveurs de votre serveur GraphQL sont impl√©ment√©s √† l'aide du client Prisma responsable de l'acc√®s √† la base de donn√©es.<br/><br/>Si vous voulez plonger plus profond√©ment et faire partie de la superbe communaut√© GraphQL, voici quelques recommandations de ressources et de communaut√© pour vous:<br/><br/>Blog Prisma: le blog propose r√©guli√®rement des contenus nouveaux et int√©ressants sur GraphQL, des actualit√©s de la communaut√© aux plong√©es techniques et divers didacticiels.<br/>GraphQL Weekly: une newsletter hebdomadaire GraphQL avec des nouvelles de l'√©cosyst√®me GraphQL<br/>GraphQL Conf: le plus grand rassemblement au monde de passionn√©s de GraphQL au c≈ìur de Berlin<br/>Prisma Slack: Une √©quipe Slack avec des discussions anim√©es autour de tout GraphQL &amp; Prisma</c></p>
<p style="Normal" xid="3027" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; color:#222222; text-transform:none; font-size:28.000000pt; font-style:normal"></c></p>
<p style="Normal" xid="3028" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c props="font-weight:normal; color:#222222; text-transform:none; font-size:28.000000pt; font-style:normal"></c></p>
<p style="Normal" xid="3021" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3022" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Plain Text" xid="3023" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Plain Text" xid="3024" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3025" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"><c></c></p>
<p style="Normal" xid="3026" props="text-align:left; text-indent:0px; line-height:1.200000; dom-dir:ltr; orphans:2; widows:2"></p>
</section>
<data>
<d name="0" mime-type="image/png" base64="yes">
iVBORw0KGgoAAAANSUhEUgAACB4AAAakCAIAAADWEN2ZAAAABGdBTUEAALGPC/xhBQAAQABJ
REFUeAHs3Xe8FOXdsPGHYsUGKAYQ0VhAjYIdC0URW0CsWLBrVCzR2JPYW4zlNRpiQY1GUQJ2
QREEBREVW0RERUUFBUUFuz7YeC+ZPJPJzO6ePXt298zuXvuHn5nZmbt87yO7e//u0mTRokX/
40sBBRRQQAEFFFBAAQUUUEABBapdoEmTJtVeReungAIKKKCAAmUSaFqmfMxGAQUUUEABBRRQ
QAEFFFBAAQUUUEABBRRQQAEFqkKgeVXUwkoooIACCiiggAIKKKCAAgoooEBeAq5ekBeTNymg
QGUKjBo1ioL37du3MotvqRWoDIFgHqSzFiqjtSylAgoooIACCiiggAIKKKCAAgoooIACCiig
gAIpETC0kJKGsBgKKKCAAgoooIACCiiggAIKKKCAAgoooIACClSGgKGFymgnS6mAAgoooIAC
CiiggAIKKKCAAgoooIACCiigQEoEDC2kpCEshgIKKKCAAgoooIACCiiggAIKKKCAAgoooIAC
lSFgaKEy2slSKqCAAgoooIACCiiggAIKKKCAAgoooIACCiiQEgFDCylpCIuhgAIKKKCAAgoo
oIACCiiggAIKKKCAAgoooEBlCBhaqIx2spQKKKCAAgoooIACCiiggAIKKKCAAgoooIACCqRE
wNBCShrCYiiggAIKKKCAAgoooIACCiiggAIKKKCAAgooUBkChhYqo50spQIKKKCAAgoooIAC
CiiggAIKKKCAAgoooIACKREwtJCShrAYCiiggAIKKKCAAgoooIACCiiggAIKKKCAAgpUhoCh
hcpoJ0upgAIKKKCAAgoooIACCiiggAIKKKCAAgoooEBKBAwtpKQhLIYCCiiggAIKKKCAAgoo
oIACCiiggAIKKKCAApUhYGihMtrJUiqggAIKKKCAAgoooIACCiiggAIKKKCAAgookBIBQwsp
aQiLoYACCiiggAIKKKCAAgoooIACCiiggAIKKKBAZQgYWqiMdrKUCiiggAIKKKCAAgoooIAC
CiiggAIKKKCAAgqkRMDQQkoawmIooIACCiiggAIKKKCAAgoooIACCiiggAIKKFAZAoYWKqOd
LKUCCiiggAIKKKCAAgoooIACCiiggAIKKKCAAikRMLSQkoawGAoooIACCiiggAIKKKCAAgoo
oIACCiiggAIKVIaAoYXKaCdLqYACCiiggAIKKKCAAgoooIACCiiggAIKKKBASgQMLaSkISyG
AgoooIACCiiggAIKKKCAAgoooIACCiiggAKVIWBooTLayVIqoIACCiiggAIKKKCAAgoooIAC
CiiggAIKKJASAUMLKWkIi6GAAgoooIACCiiggAIKKKCAAgoooIACCiigQGUIGFqojHaylAoo
oIACCiiggAIKKKCAAgoooIACCiiggAIKpETA0EJKGsJiKKCAAgoooIACCiiggAIKKKCAAgoo
oIACCihQGQKGFiqjnSylAgoooIACCiiggAIKKKCAAgoooIACCiiggAIpETC0kJKGsBgKKKCA
AgoooIACCiiggAIKKKCAAgoooIACClSGgKGFymgnS6mAAgoooIACCiiggAIKKKCAAgoooIAC
CiigQEoEDC2kpCEshgIKKKCAAgoooIACCiiggAIKKKCAAgoooIAClSFgaKEy2slSKqCAAgoo
oIACCiiggAIKKKCAAgoooIACCiiQEgFDCylpCIuhgAIKKKCAAgoooIACCiiggAIKKKCAAgoo
oEBlCBhaqIx2spQKKKCAAgoooIACCiiggAIKKKCAAgoooIACCqREwNBCShrCYiiggAIKKKCA
AgoooIACCiiggAIKKKCAAgooUBkChhYqo50spQIKKKCAAgoooIACCiiggAIKKKCAAgoooIAC
KREwtJCShrAYCiiggAIKKKCAAgoooIACCiiggAIKKKCAAgpUhoChhcpoJ0upgAIKKKCAAgoo
oIACCiiggAIKKKCAAgoooEBKBAwtpKQhLIYCCiiggAIKKKCAAgoooIACCiiggAIKKKCAApUh
YGihMtrJUiqggAIKKKCAAgoooIACCiiggAIKKKCAAgookBIBQwspaQiLoYACCiiggAIKKKCA
AgoooIACCiiggAIKKKBAZQgYWqiMdrKUCiiggAIKKKCAAgoooIACCiiggAIKKKCAAgqkRMDQ
QkoawmIooIACCiiggAIKKKCAAgoooIACCiiggAIKKFAZAoYWKqOdLKUCCiiggAIKKKCAAgoo
oIACCiiggAIKKKCAAikRMLSQkoawGAoooIACCiiggAIKKKCAAgoooIACCiiggAIKVIaAoYXK
aCdLqYACCiiggAIKKKCAAgoooIACCiiggAIKKKBASgQMLaSkISyGAgoooIACCiiggAIKKKCA
AgoooIACCiiggAKVIWBooTLayVIqoIACCiiggAIKKKCAAgoooIACCiiggAIKKJASAUMLKWkI
i6GAAgoooIACCiiggAIKKKCAAgoooIACCiigQGUIGFqojHaylAoooIACCiiggAIKKKCAAgoo
oIACCiiggAIKpETA0EJKGsJiKKCAAgoooIACCiiggAIKKKCAAgoooIACCihQGQKGFiqjnSyl
AgoooIACCiiggAIKKKCAAgoooIACCiiggAIpETC0kJKGsBgKKKCAAgoooIACCiiggAIKKKCA
AgoooIACClSGgKGFymgnS6mAAgoooIACCiiggAIKKKCAAgoooIACCiigQEoEDC2kpCEshgIK
KKCAAgoooIACCiiggAIKKKCAAgoooIAClSFgaKEy2slSKqCAAgoooIACCiiggAIKKKCAAgoo
oIACCiiQEgFDCylpCIuhgAIKKKCAAgoooIACCiiggAIKKKCAAgoooEBlCBhaqIx2spQKKKCA
AgoooIACCiiggAIKKKCAAgoooIACCqREwNBCShrCYiiggAIKKKCAAgoooIACCiiggAIKKKCA
AgooUBkChhYqo50spQIKKKCAAgoooIACCiiggAIKKKCAAgoooIACKREwtJCShrAYCiiggAIK
KKCAAgoooIACCiiggAIKKKCAAgpUhoChhcpoJ0upgAIKKKCAAgoooIACCiiggAIKKKCAAgoo
oEBKBAwtpKQhLIYCCiiggAIKKKCAAgoooIACCiiggAIKKKCAApUhYGihMtrJUiqggAIKKKCA
AgoooIACCiiggAIKKKCAAgookBIBQwspaQiLoYACCiiggAIKKKCAAgoooIACCiiggAIKKKBA
ZQgYWqiMdrKUCiiggAIKKKCAAgoooIACCiiggAIKKKCAAgqkRMDQQkoawmIooIACCiiggAIK
KKCAAgoooIACCiiggAIKKFAZAoYWKqOdLKUCCiiggAIKKKCAAgoooIACCiiggAIKKKCAAikR
MLSQkoawGAoooIACCiiggAIKKKCAAgoooIACCiiggAIKVIaAoYXKaCdLqYACCiiggAIKKKCA
AgoooIACCiiggAIKKKBASgQMLaSkISyGAgoooIACCiiggAIKKKCAAgoooIACCiiggAKVIWBo
oTLayVIqoIACCiiggAIKKKCAAgoooIACCiiggAIKKJASAUMLKWkIi6GAAgoooIACCiiggAIK
KKCAAgoooIACCiigQGUIGFqojHaylAoooIACCiiggAIKKKCAAgoooIACCiiggAIKpETA0EJK
GsJiKKCAAgoooIACCiiggAIKKKCAAgoooIACCihQGQKGFiqjnSylAgoooIACCiiggAIKKKCA
AgoooIACCiiggAIpETC0kJKGsBgKKKCAAgoooIACCiiggAIKKKCAAgoooIACClSGgKGFymgn
S6mAAgoooIACCiiggAIKKKCAAgoooIACCiigQEoEmqekHBZDgRoRmDp16v333z9x4sS5c+fO
mTPnq6++qpGKp62ayy+/fLvFr549e+6+++5dunRJWwktjwIKKKCAAgoooIACCiiggAIKKKCA
AqkVaLJo0aLUFs6CKVBNAkQU/vCHP7z22mvVVKmqqct66613ySWXEGOomhpZEQUUUEABBRRQ
QAEFkgJNmjThov0ASRmvKKBA1QiMGjWKuvTt27dqamRFFEihQPCNwgWRUtg0FqnaBGbPnt29
e/c99tjDuEJqm5amoYFoJhortYW0YAoooIACCiiggAIKKKCAAgoooIACCqREwNBCShrCYlSt
wOTJkzfffPMnn3yyamtYRRWjmWgsmqyK6mRVFFBAAQUUUEABBRRQQAEFFFBAAQUUKL6AoYXi
m5qiAqEAndS9e/f+6KOPwisepFyAxqLJjC6kvJksngIKKKCAAgoooIACCiiggAIKKKBA4woY
Wmhcf3OvZgGW1tlzzz0XLlxYzZWsxrrRZDScKyNVY9taJwUUUEABBRRQQAEFFFBAAQUUUECB
4ggYWiiOo6kokBQYOHCg8xWSLBVxhYaj+SqiqBZSAQUUUEABBRRQQAEFFFBAAQUUUECB8gsY
Wii/uTnWhMD999/v/goV3dI0H41Y0VWw8AoooIACCiiggAIKKKCAAgoooIACCpRIwNBCiWBN
ttYF/vCHP9Q6QeXX30as/Da0BgoooIACCiiggAIKKKCAAgoooIACJREwtFASVhOtcYGXXnrp
tddeq3GEKqg+jUhTVkFFrIICCiiggAIKKKCAAgoooIACCiiggALFFTC0UFxPU1PgZwEX0qma
v4MHHnigaupiRRRQQAEFFFBAAQUUUEABBRRQQAEFFCiWgKGFYkmajgL/EXjiiSf+c+JRJQtM
nDixkotv2RVQQAEFFFBAAQUUUEABBRRQQAEFFCiJgKGFkrCaaI0LzJkzp8YFqqb6NmXVNKUV
UUABBRRQQAEFFFBAAQUUUEABBRQoooChhSJimpQC/xaYO3euFtUhYFNWRztaCwUUUEABBRRQ
QAEFFFBAAQUUUECB4go0L25ypqaAAgh89dVXeTosWrQozzu9rbgCTZo0ySfB/Jsyn9S8RwEF
FFBAAQUUUEABBRRQQAEFFFBAgeoQcNZCdbSjtVBAAQUUUEABBRRQQAEFFFBAAQUUUEABBRRQ
oEwChhbKBG02CiiggAIKKKCAAgoooIACCiiggAIKKKCAAgpUh4ChhepoR2uhgAIKKKCAAgoo
oIACCiiggAIKKKCAAgoooECZBAwtlAnabBRQQAEFFFBAAQUUUEABBRRQQAEFFFBAAQUUqA4B
QwvV0Y7WQgEFFFBAAQUUUEABBRRQQAEFFFBAAQUUUECBMgkYWigTtNkooIACCiiggAIKKKCA
AgoooIACCiiggAIKKFAdAoYWqqMdrYUCCiiggAIKKKCAAgoooIACCiiggAIKKKCAAmUSMLRQ
JmizUUABBRRQQAEFFFBAAQUUUEABBRRQQAEFFFCgOgQMLVRHO1oLBRRQQAEFFFBAAQUUUEAB
BRRQQAEFFFBAAQXKJGBooUzQZqOAAgoooIACCiiggAIKKKCAAgoooIACCiigQHUIGFqojna0
FgoooIACCiiggAIKKKCAAgoooIACCiiggAIKlEnA0EKZoM1GAQUUUEABBRRQQAEFFFBAAQUU
UEABBRRQQIHqEDC0UB3taC0UUEABBRRQQAEFFFBAAQUUUEABBRRQQAEFFCiTgKGFMkGbjQIK
KKCAAgoooIACCiiggAIKKKCAAgoooIAC1SFgaKE62tFaKKCAAgoooIACCiiggAIKKKCAAgoo
oIACCihQJgFDC2WCNhsFFFBAAQUUUEABBRRQQAEFFFBAAQUUUEABBapDwNBCdbSjtVBAAQUU
UEABBRRQQAEFFMhLYObMmd98801et3qTAgoooIACCiigQBYBQwtZYLysgAIKKKCAAgoooIAC
CihQjQKXXXZZq1atdtxxxyuvvPKVV16pxipaJwUUUEABBRRQoOQChhZKTmwGCiiggAIKKKCA
AgoooIACqRJYuHDho48+euqpp2644Ybt27c//PDDhw8fPn/+/FQV0sIooIACCiiggAJpFmie
5sJZNgUUUEABBRRQQAEFFFBAAQVKIXDggQc2b9587Nixc+fOvWXxq2nTppttttnOO++80047
bbnlls2aNStFvqapgAIKKKCAAgpUh4CzFqqjHa2FAgoooIACCiiggAIKKKBAPQS6d+9OQGHO
nDlTp05liaTevXsvscQSzz777AUXXLDNNtu0bt167733vvHGG2fNmlWPRL1VAQUUUEABBRSo
GQFnLdRMU1tRBRRQQAEFFFBAAQUUUECBhMBGi1+nnXYaeztPmDBhzOLXjBkz7ln84vbOnTsz
j4FXz549l1122UQCXlBAAQUUUEABBWpRwNBCLba6dVZAAQUUUEABBRRQQAEFFIgJEDbYdfGL
60xWCGIM48ePf33x6+qrr15qqaWY6xCEGdikIfa4pwoooIACCiigQE0JNFm0aFFNVdjKKlAG
gSZNmuSZi/8D5glV9Ntso6KTFpZg/g1RWPo+pYACCiiggAIKlE7gsMMOI8ywww47sHpS6XIp
bsrBty9/hhRX1dQUUCBVAqNGjaI8ffv2TVWpLIwCVSYQfKNwr4Uqa1aro4ACCiiggAIKKKCA
AgooUA4BOujtoy8HtHkooIACCiigQCoFXBAplc1ioRRQQIHaEPDXeG20s7VUQAEFFFAgXQJH
H330kCFDbrjhhqOOOipbyWbPnh0siDRu3LjPP/88uI0FkbbddttgQSQ2aMj2rNcVUEABBRRQ
QIFaEDC0UAutbB0VUEABBRRQQAEFFFBAAQXqEGAb54kTJwYRBbZXCO/u1KlTEE7o1auX2ziH
LB4ooIACCiigQI0LGFqo8T8Aq6+AAgoooIACCiiggAIK1LTAtGnTgnDCpEmTFi5cGFisuOKK
vXv3DiIKHTt2rGkgK6+AAgoooIACCmQSMLSQScVrCiiggAIKKKCAAgoooIACVS1AIOGZZ54h
qDB37tygok2bNt1iiy123HHHnXfeecstt2ze3N/LVf0XYOUUUEABBRRQoGECflVqmJ9PK6CA
AgoooIACCpRd4MMPP5wyZQoDjefPn79gwQJ6A1dd/OrQoQPLlay88splL5EZKqBA5QkMHTo0
KHS7du0IJzBBoU+fPq1bt668mlhiBRRQQAEFFFCgMQQMLTSGunkqoIACCiiggAIK1F/g7bff
vv322++4444333wz29NNmjTZeOONGXHMNq2rr756ttu8roACNS7Ahszdu3cP1jvacMMNa1zD
6iuggAIKKKCAAgUINFm0aFEBj/mIAgrkEKBTI8e70bf8HzCqUc5j26ic2ualgAIKNFzgjTfe
OPvss++66678PzpZyeSAAw4444wz1l9//YYXwBQUUKCaBGbOnNm2bdva3JA5+Bqc/7+l1dTu
1kUBBWpEYNSoUdS0b9++NVJfq6lAowgE3yiaNkreZqqAAgoooIACCiigQD4C33333emnn77B
BhuMGDGiXn1hP/zww2233bbRRhude+65HOeTl/cooECNCKy11lq1GVeokfa1mgoooIACCihQ
HgFDC+VxNhcFFFBAAQUUUECBegu89dZbW2211eWXX15wbODHH3+84IILtt56a5Kqd/Y+oIAC
CiiggAIKKKCAAgookEXAvRaywHhZAQUUUEABBRRQoFEFpk6dysaqH330UcZSMOK4W7du7Nvc
pk2bn376ae7i1/PPP//1118n73/uuee23Xbb8ePHM/sh+a5XFFBAAQUUUEABBRRQQAEF6itg
aKG+Yt6vgAIKKKCAAgooUHKBf/3rX9tvv/1nn30Wy4kdFPbee2+2aGYiwpJLLhl793//93+J
H7B00p133hmb6DBv3rztttuOd92vNYbmqQIKKKCAAgoooIACCihQgIALIhWA5iMKKKCAAgoo
oIACJRRgpkL//v2TcYXddtuNzVeHDRvWq1evZFyBAi299NK//vWv//GPf0ybNm2PPfaIFfHj
jz9mGgT/jV33VAEFFFBAAQUUUEABBRRQoL4Czlqor5j3K6CAAgoooIACCpRQgNWN9tlnn/fe
ey+aBzGDm266aeDAgdGLOY47d+5877333nLLLccccwwbQYd3fvjhh4cddtioUaPCKx4ooIAC
CpRU4Kuvvvrb3/726aef7rLLLj179ixpXlWQOLPrnnzyyVatWhFiX3311Ytbo9GjR7/66qu/
/OUvd91116WWWqpeic+ZM4eCMXeQIP3yyy9fr2e9WQEFFFCgWgWctVCtLWu9FFBAAQUUUECB
ihS48cYbn3jiiWjRV1pppTFjxuQfVwifJYrw2GOP8Xh4hYOHHnqITq7oFY8VUEABBUonMGnS
JP7Vffvtt9dbb73S5VI1KdP7///+3/9bccUVW7duXdxKsRcRH6ZnnXXW5MmTY/H7fDJ64YUX
LrzwwmuvvdbJf/lweY8CCihQIwLOWqiRhraaCiiggAK5BL755psJEyZwR+/evWNjuFiYhY1h
gyFaQRL8MJs4cWKu5P7vvSZNmjBAj7MCHgnSeHPx6//S+x/KtsYaa3Ts2JHyhBeLePDBBx+8
+OKLrHHP7/927dqtueaa7HzbqVOnZBYPP/xw8mJ4haFw4XHBdQ9T8KB2BJiv8PLLL//+97+P
Vpm/duYf9OjRI3ox/+NtttmGrRf4P/HHH38Mnzr33HMPOeSQ5ZZbLrzigQIKKKBAKQTYAufp
p59esGABu92svPLKpciimtJkNT++ifFlr0uXLi1atKhX1RYuXBj7Eht7fNlll/3+++9phVVX
XZUP3Ni7+ZyyiVH0wzR8hFYma773hlc8UEABBRSoEYGSdEzUiJ3VVEABBRSoGoG5c+eyPjvV
4aBt27bRej333HN9+/ZdYYUVPv/88+A647yCm6O3ZTxu2rRp8AOsgEeCBNmK9rzzzoslvsQS
Sxx00EHnn3/+aqutFnur4FN+K/72t7+97rrrYinwK5Fp7zfccAPxjOhbOQR4JPp7teC6R7Pz
uLoFPvnkE1YuGjlyJGEt1s2IVfbPf/4zHVKxi/U67dOnzxVXXPG73/0ufGr+/PmMuzz99NPD
Kx4ooIACCpRCgDESrEH3q1/9in/J+V5UiiyqKU0+ChE74YQTGOGRf7343sUyRwx82XfffXPE
b/iGxrfHnXfembhFEb9DUk6mAxK0IOXYNMH8q+CdCiiggAIVKmBooUIbzmIroIACCjSaAPPT
Y6Oq582b9/e//50CnXLKKdGtZcPRWwU8Eq1emzZt2LSWK8yueP3119966y2yGz58+DPPPMNv
9eidhR2z/PHee+/NujHNmjXjZ+EWW2yxzjrrMIPhjTfeuPvuu8kl289UuglWWWWVWKZhrYPr
Dax7LHFPq0yAP7MzzzyTP2bGWmas2sYbb3zSSSdlfKteF0888UT2dn7ppZfCp6688kou5h7g
Gd7sgQIKKKBAAQJ0eTMrdMaMGfxTz1TIAlKoqUf4PjZ16lRC7Jtttlm2r15JEJYnuueee5if
x9fFPfbYI3lD9ArJ9uvXL3ol9zFDT/KZKfvll1+yztKzzz675557br755n625lb1XQUUUKCa
BAwtVFNrWhcFFFBAgXII0Jl+ySWXRHPid2AQWrjggguYbB59Kzgu4JFoIsQP6HsNr7AI78EH
H8xAb7a6ZZQ329uGbxV2cOqppxJXoOTDhg3bbbfdoolcffXVr7zySrYp+Yx96969e/T+5HED
655M0CtVIzBkyBDmDYTzgTLWiwBAUUa5EvFi9sNOO+0U5sJaZ48//jixtPCKBwoooIACxRWg
15tNienyZm26jN3NLN/P7EaGurMAY6wLmzH4n332GXNJGfGQLNV3333HSAumlvIhQl88OxOw
73H79u033HDDli1bJu/nyrfffkvfN08xcY17mI7Jko+xSZnRB4OycSeF59lx48axXCSFZLw/
D6677rrR0SThgyTOAlDvv/8+pVq0aBEDLPgixLbJG2ywQXhPtoP777+fL13777//2muvHRuo
kfERliGiVMQVmDTAPhZ8okGdvJN3iRBEr//iF7/YdNNNY+DRG+DFiuEsVIcmoPy598nYaqut
9ttvP+ba0tx8R919992JJBXl4ztaKo8VUEABBVIoYGghhY1ikRRQQAEFFMglwKrxN910Ez/b
+MnHgrxbb711rrvreo8pF3fccQd33XzzzbG4AhfpCODHZ11p+L4C9RNgHOvRRx/Nn3Hux9Zf
f/0GLoUUTZ+lvbp27RqduMCWIYYWokQeK6CAAsUVYMoC/ewMpd9kk00ypsxaSYSZBw0axCiK
2Dh9OsSZbXbRRRclQwtffPEFi9o9+OCDrALEhEu+q9AVzoI8dKwz6OGAAw5I5jVnzhy2kqYX
nqUv6bXnKUZm0AnONx+6xTN2gj/66KPXXHPNUUcdRSyBFSOZx0nAgIUuWZeSGXWDBw9meH40
IwIJpE+N6O4nrkDggYwoGIkfccQRTHjNFvMIEuGTkUjJO++8wzgVuv6jKSePuZldGSgSQ08I
MBx//PF8LeRDM2O0IChVNBFi7URHsi1eRByClTD5Wsh0EzJiUVC2JjrttNNiS4ZGEyS1c845
h2+MlIeVPAkLEWngE5Z4T/Q2jxVQQAEFqk/A0EL1tak1UkABBRSofgG2OuAnMT8mmbXQwNAC
P85Zi4Zf43vttVf1w1nDFAjQZ8GQTDpEspWFzg52mKTfh8Wms91T2HV6XmKhhb/85S8Ze5QK
S9+nFFBAAQVCARbJmTJlCv/mM+o/Wy82Pdd8CaFTPnwqPCBUwAJBycH7TFO4/PLL//rXv3bu
3DnYk4DJCkzlZC4acwu23HLLMIXwgHSYb8pACmYDXHzxxcQwuP/JJ5+8/vrrZ8+ezdRMAs/h
zeEBZWMhSgowduxYeswZhs9sUb56TZ8+fYcddlhrrbXCOzng5jFjxjDXk7kORCy4uUOHDkQX
iGQw8J8SMq8ien/yeNKkScGXOuY3ZJwPET7CoJC7Fr+4v3///nTi9+jRY/nllw9viB2wyuVx
xx0XXGStSx5NqoaPUBGiJmxQ9OGHHx577LHBwpts/8D0XJQyTj0JniUCQUm6devG5/vtt9/O
/kasqMn6SFxp+PzasHgeKKCAAgqkTcDQQtpaxPIooIACCihQtwCj0vjZye9bhs7VfXfOOxjL
xvvsC93wpHLm45sK/FuAkZvJuAL9+wS32H+SuQU5+kcaiEgXTHRf9JkzZ9KjxFhLBloyytUt
RhvI6+MKKKBAVIBh9UwOY9uAIs4/I30WUGK+AkMi/vSnP7GMUrQXntDCMsssEy1DcEwIgfkT
DMVgywd6uoNH+vTpQ6SBPnTiBMxLiM2ZCBNhESRiBsxdOPDAAxm2T6c8oYKvv/46Nh6fHnnm
HDz11FN8yhDwiIZSCK7wqjOMzVwHPpWYspBjcgC5UHe+ubE2JosUXXbZZWycQNwiLG3GgzPO
OIPJFsFbbF+UkSh88N13333kkUfYCenCCy+kyquvvjpv8fgti18vv/wyYYzw5tgBOMRU2MeI
+RzBjArWRzrkkEP4fI9FYmIPeqqAAgooULkChhYqt+0suQIKKKBA7QqwFC+rAVD/jOPs6uXC
T3TuZ23iej3lzQoUJjBy5Ei2T4g9y4BW1qno0qVL7HrRTxkKSsdHdHgs8Tn2Sgm2S2HF7Usv
vZRBl0XP1wQVUECBWhNgzgHD8GfNmkWnfJ3L+9QLh80SmHNASJjB+NG4Aolk7DTn/smTJ9Nr
T0d8GFfgZjYPIAWWNrrqqqtYrylbaIFtqPhoYLYoneZBOdu1a5csMFM0qCwj94l5ROMK3Mlw
EF7JR6JX+DLGFASi3ZQnx/wGNjOgx5/qH3PMMczD43MzJhBNMzwmqhEGNghOhNczHtx3331M
vOBrIcsZBXEFbmMeIWs6scoTEyYyPhW9SJF69epF2YIAw7nnnstCUoRMYizRRzxWQAEFFKhc
gTo+4Sq3YpZcAQUUUECBAgRY0je2ZTG/RQtIp6SPMICOIWBkwc82foI2JC/iE0GIgvVnCkiH
cXz8kI49yNA/flLGLnqqAAL049MbEu3Z5+KRRx7JqlzlmTRDLmynyaIZGZuDP2ZWamIHiH/+
85/Z+pgyPuhFBRRQQIGYAL3JDH5nWgCD3OvsWI89m/uUdZDovn/sscfuvfdedkogbpExohAm
wnbEbLTAwj502bPAEa/wLXZZeOCBB4h5s190eDF2wLRO4grMb4tdj50y345pBKTDKkAcMFeD
7MIO/djNyVM69NlAK5wlkLwhuMK0DCZAsNQS2yqsscYa+cQVsiWV8Tof0MEKTsw8oO2i9xCY
p140JQfR69mOASE+wZ8Be2YQkyDUlO1OryuggAIKVLSAoYWKbj4Lr4ACCihQZAG6OIucYjGS
e+211+h+JSV+D9P7yY9kfliypR4doA3skOUnX1DAwkILLFicrB+/8w0tJFm8gsCNN95In0WU
YsCAAVyMXin1MZ1Q2UILQdas3sCiGaw14eoNpW4L01dAgSoWePzxxxmGTziZyQHFrSazBxhg
wU45f/zjH0eMGMFqS+uuuy4D5JlMkHG8P587rF/EDg1EjpNj9pnTwEWGWRD8zrglAAMm8vmO
RJ87C/qxJtLQoUOZrtG9e3fGfzBVjv8Sq84dY2CrZ6woJ58+RE1ycBF7oJxs/EDXP7FwdjJg
b4lll102xyP1eot9L5iXQIABzNwBm9zJUheCJUz4YIAOe3TzWU9cP/cjvquAAgooUKEChhYq
tOEstgIKKKBASQSYZh77XcrSQ0OGDClJZnknyoq3N998c3g748VYF57p+QxbCy8WdsDGhsGD
TOEPU2BF3dhcBN7NOIibKEJyWYCNNtooTMoDBUIB+m7+/Oc/h6ccsBLFrbfeGr1ShuMcW1CG
ubNfJT1Ezz//fMuWLcOLHiiggAIK5CmwYMECuteZBsoCRLHJoHmmkOM2/hlne2EGxU+cOJFc
2NKZKwyoZzk7hsnvtNNOsUkSLB9E5IAFi/i3PTZtjlz4hsPcBQIPDKvPGFrIUZLYW4Q3Tjvt
NFKjS52OdXaNJk6w/fbbsyEEOwnFvl5Gn2VHCtblY4Ej5kaw9FD0rdgx3f3UnQhEsJMB+0uz
ThFfxvg8zf1gLJ1sp8QtGHRCUoxfKWzwChMUHn30UYpHpQh78LnPnI/WrVtny9HrCiiggAKV
LmBoodJb0PIroIACChRTgF9osd3zmMfd6KEFRr2dddZZ1JOfefx4ZnResX6oh5X9+OOPwzHa
jOkOjwPcww8/PBrbCMVPPfVUxuWFpx4okEMgWJIiegM7cDZkUGQ0qfyPKUZ4M9OAWN6anTOZ
OUG3TnidA5YdY3Ao//tHL3qsgAIKKJCPAP/SsmARSyGxlU4+99f3HmIJzOakL/6ll15is2jW
ICIYzCQGOvcJHhBdiHaLczNjMg499FBG+kcHUkQzZWUhYhXRK4UdU1+2bejfvz8Cr776Kp8v
xBjYeHn27Nm//e1vs81IePLJJxndf/LJJ+ezKQX9/uwzwVwQKst+zvTd05XPqk1sjZAt/fzr
ghsxdYaYEGhBMs+1j4L0mVDL3IsgpsJECnbMpoGIeeSesZF/2bxTAQUUUCCdAoYW0tkulkoB
BRRQQIH/CDATv0Rby7Zv357fjfx6/PDDD8P8+GEZbuHA9AXGHoZveaBAwQIMYIw+y4oWe+21
V/RK+Y/p+2CIKC+Wa7jhhhtOOukkVqUIi0GBWcib5SbCKx4ooIACCtQpwMj3p59+mmmRrI6Y
ccpjxhTq1YsdpEDiO+ywQ+/evcmLHPkX+x//+Mc111zD7Mlw/2HupL+e6AJrS9JjHo6oyFiG
olwkZM5uELzYF4F4BhtOsE00yzcxaIN1nJL97MyOffHFF+mCp9j5L23EnXw8MX2BmQGsCvW7
3/3uqaee2meffdBoSC2ACsIbTD7gA5HTPFPj/ltuuYWJGgTm9178omwNnAWSZ9bepoACCijQ
uAKGFhrX39wVUEABBRRoTAF+NAa72rLmUlgOfqvzKzc45VcxP9TDtzxQoGABRmVGn2UwY/S0
cY/p6yG6wJaVu+66K+Muw8Kcc845lDPZExTe4IECCiigQEyAdYdGjRrF2kSsBVRnwIB/YBnf
wF4I0X97gwRj6xrFcglPyaJVq1asusO0A8b+M4mBJX2ioQW2O+arzgsvvMDUAf6dL/rWx2FJ
YgdBjIGSEGM477zz3nnnHTrrk73tzGlAjNgAoz1iKdR5ShjguOOOY6pEsD4SOyUwzzWfqQ/Z
UmZKxEorrcR/2VOaLaljm0xQEd7K+Oxdd911ySWXsLHEFVdc4QpIGYm8qIACClSrQNNqrZj1
UkABBRRQQIF8BFhhidvGjBmTz83eo0DBArENnFmNuuCkSvRgnz59Lrroomji06dPZxxo9IrH
CiiggAI5BNhWhy0Q6JgmUtuxY8ccdwZvsQMBazwydZK5DtGb2al4/PjxLMsTvZj7mBkJzEsg
VhGLZ7DPc9euXel2p/ubghHJyJ1Ocd8lwMCLTJMFIyP2eGA5PurOGkeFbUgQrI909tln06fP
gkjJfarrVR3omDzBBIv777+f+QfRZ5n2wcJTBEgyAlIMoiNXX301awkWVpFoXh4roIACClSQ
gKGFCmosi6qAAgoooEDxBdhHgURZUz46caH42ZhizQtEF90CI7kBeBqE6BmJjnWlSIy9TUPB
LIMCCihQEQJs3URIgIHz7F2cz/wA7qTnnT0DmG3A/jd0W7O6ESsIXXfdddniCtwzefLkefPm
hRMd6E/nOwzD/9negNkSsc8XJgow/4yh/X9f/GL6Ah36PMKLaQRMcaBzn+OG89IXT+iCof1h
aszGePzxx9kLAQomT0R3gAiyY2cCFkQ64IADgnEeBZchWB/plFNOafiKT3379t1ss81YD5N1
Aik5Kx1RI4iuv/56/ELzWFHZSvqEE05ggUHn+cVkPFVAAQWqXsAFkaq+ia2gAgoooIACuQQO
PvhgVn2h25fZ+vxujI31y/Wk7ylQH4HoNgY8l/8KzvXJpKH30vvDviaXXXZZmNATTzwRHnug
gAIKKJBbgCkLwaL/TBTIfWfwLh3ZzJtkjf7TTz99jz32oGP65Zdffuutt1iPkUjDjBkzkomw
BRQbKjBBgSgCkx7o7A7CAwQnGG5/7LHHJlcWYoke+v25efDgwYQlCDPQBU8Mg+l0XGd/Agba
r7baasm86nVl7NixdL53796ddYSIl3zyyScs0ESnPAsx/f73v+/Xr1+s250IxHPPPcc8gJ49
ezZkFaOwkA3fxpmkWFeKbaiRYT1MAgzdunWjIdifmTAJW0ZTwYxfFFlGKSyGBwoooIACNSVg
aKGmmtvKKqCAAgooEBegh/fkk0/mJ/2QIUNYLoDoQrgQMMP63n333fgDnitQkAD9ONHVFVI7
S6ZHjx7R0MKcOXMKqq4PKaCAAjUn8OWXXz777LN8i2ALX/rx86n/csstN3DgQLqzR44cyTcQ
xvVvscUW5557Lj3ajJpn54Dk8jvkwryE0aNHEyTgewsd9IzZJ4Xf/OY3bBzN0naxHvygGIyp
Z2tlOt/Z8Hno0KE8yF4OFJVVm1q2bBnOM4iWmRvWX399ggTRi9mOg+H8VGfYsGGE0ol88DgF
Y/sBoh177bVXcpkgtiAi8ECBqWZyQkO2jBp4nSpTKYqXIx22YeYGCkxwneAHtmyXzUpHRBc6
dOjAaUauHAn6lgIKKKBAFQsYWqjixrVqCiiggAIK5CVw2mmn8ZP4rLPOYoTanXfeyUhDprQz
j4Hfk0QXSIJZ/BkT2nHHHTNu6McAPfZUzPiIF2tWgJ6gaGiBVSMYwplCjdhqEqy5kcJCWiQF
FFAghQL0R9NLvt5667EAUf7Fo9ua/nceYZg/3zcYv08AgB5wRvoPGjQo2bPPPcyzZFoDXzZY
rodMV155ZT5iuL7CCivkyJdOfGIeBIyZFTF//nz6/Rlrv+aaa/J4xgeJRrBUEbPZ8hmSTyDh
yCOPZBIGn258d6JgdMFTEVY6okYZox0M/2dRSraYZrJFjmIX9y02W6buuStFaffff38C7Sww
xc3rrLMOn4zUhToS+KE8sSWniltCU1NAAQUUqCwBQwuV1V6WVgEFFFBAgZII8AN+44035r/s
W0tEgRfZ8KOXVQIuvvjiLbfcMmOusU0Xw3uSYwzDtzyoWQHiVYzQDKvPotjEtMLT9BzQHxQt
DENQo6ceK6CAAgpkE6AL/rDDDsv2bo7rdK9vv/32sRv45zfbv8BMiSAawSv2SJ2nbBm97uJX
nXdyA1GNeq2SRM879+f/CEsn8cqnJEW8J/9Ksa5Ucmmp/GtXxDKblAIKKKBAmgWa+OM/zc1j
2SpUIOMClBnr4v+AGVnKcNE2KgOyWVSoAEsEEF1gHSTG8dEXzJi+Cq2IxU6bALEElm8OS8Wg
SPauZHBreCUlBzfddBOraoSFYS1vFv4OTz1QQAEFKl0g+Brsz5BKb0fLr4ACOQRGjRrFu0wk
ynGPbymgQAMFgm8UzlpoIKOPK6CAAgooUFUCbL2wyeJXVdXKyqRAgJUoiFSxG2RQFlZqZpbM
/fffn4Ki/VcRCIFEz1kIInrqsQIKKKCAAgoooIACCiigQCDQVAgFFFBAAQUUUEABBUotwCIM
rN0czeWBBx64+eabo1ca/ZgJCg899FC0GI53i2p4rIACCiiggAIKKKCAAgqEAoYWQgoPFFBA
AQUUUEABBUoocP7558c25Dz22GMffvjhEmZZn6S//fbbI444gukU4UMsnJ3OvabDEnqggAIK
KKCAAgoooIACCjSWgKGFxpI3XwUUUEABBRRQoLYE2BDypJNOitb5u+++22233S6//PIff/wx
er38x1988cVee+31/PPPR7M+8sgjV1555egVjxVQQAEFFFBAAQUUUEABBQIBQwv+JSiggAIK
KKCAAgqUSeC8887beuuto5kRVDj99NO7dOly9913M28g+lZ5jpmmcM8992y66aajR4+O5tii
RYtzzz03esVjBRRQQAEFFFBAAQUUUECBUMBtnEMKDxRQQAEFFFBAAQVKK7Dkkkved999m2++
+ezZs6M5TZ8+fZ999mGf5+7du3fs2LFNmzbNmjWL3lCKY/aUfu+99x577LGPPvoomf4NN9zw
i1/8InndKwoooIACCiiggAIKKKCAAggYWvDPQAEFFFAg1QL0/X3wwQdrrbVWqktp4RRQIG8B
wgaPPvooexi88cYbsYf4/33MmDGxi41yeuaZZw4cOLBRsjZTBRRQQAEFFFBAAQUUUKAiBFwQ
qSKayUIqoIACNSfwyiuvXHnllTvuuGOrVq0uu+yymqu/FVagqgXWXXfdKVOm8D94CmvZtGnT
Sy655E9/+lMKy2aRFFBAAQUUUEABBRRQQIH0CDhrIT1tYUkUUECBWheYP3/+uHHjGLPMa+7c
ubXOYf0VqGqBlVZaib0NbrvttnPOOYdViVJS1zXXXHPw4MG77rprSspjMRRQQAEFFFBAAQUU
UECB1AoYWkht01iwmhBo0qRJTdTTSiqQXYAdXBm8TCzhkUceef7559lPNbi3Xbt2jGj+4Ycf
hg4dmv1p31FAgQoWYH7AoYceut9++w0ZMmTEiBFPP/10+C9A+WvVuXPno48++thjj2U3iPLn
bo4KKKCAAgoooIACCoQCdhaFFB40UIAN7fip1cBEcjxuaCEHjm8poIACCpRKYNasWWPHjiWi
wDSFzz//PMhmqaWW2nbbbXda/Npoo424SIejoYVStYHpKpAOgaWXXvq3i1/spTx+/Hi2d2Z7
lXnz5hF3LHUBW7Ro0bZt2w4dOvTu3Zs1mkqdnekroIACCiiggAIKKKCAAtUkYGihmlrTuiig
gAKpFmCD1okTJ/682tGYMa+//npY1k6dOgXhhF69ei277LLhdQ8UUKCmBNjeef/996+pKltZ
BRRQQAEFFFBAAQUUUKByBQwtVG7bWXIFFFCgMgSmTZsWhBMmTZq0cOHCoNArrrgiw4SDiELH
jh0royaWUgEFFFBAAQUUUEABBRRQQAEFFFBgsUCTRYsWSaGAAsUVcFG84no2bmr+I1mYf7gh
8y233FJYCj6lgAIKKKCAAgqkRKCavhAGP1WqqUYp+SOxGAookB6BUaNGUZi+ffump0j1LYnd
SvUV8/5sAqXbayH4K22aLWOvK6CAAgoo0BABfrL6q7UhgD6rgAIKKKCAAgoooIACCiiggAIK
pFbABZFS2zQWTAEFFKhggdatW++3+MWshZdffjlYEOnJJ5+MLoi0ww47BAsirb766tmqyjbO
Rx999FFHHXXDDTdku8frCiiggAIKKKCAAgoooIACCiiggAJlFjC0UGZws1NAAQVqTmCjxa/T
TjuNbZwnTJgQhBlmzJhxz+IXHJ07dw5iDD179nQb55r7+7DCCiiggAIKKKCAAgoooIACCihQ
gQKGFiqw0SyyAgooUJkChA12Xfyi+LNmzQpiDOPHj3998evqq69eaqmlunfvHoQZNtxww8qs
paVWQAEFFFBAAQUUUEABBRRQQAEFql/A0EL1t7E1VEABBVIo0LFjR5Y54vXDDz9MmTLlkUce
GTt27PPPPz9u8YspDu3atSPG8P3336ew8BZJAQUUUEABBRRQQAEFFFBAgbQJrLDCCquttlph
pXr//fe/+OKLwp71qZoVMLRQs01vxRVQQIFUCDRv3nybxa8LL7xw/vz5jz76KLMZCDPMnTuX
fRpSUUQLoYACCiiggAIKKKCAAgoooEDqBRifN2LEiMKKOWDAgLvuuquwZ32qZgUMLdRs01tx
BRRQIHUC4ebPlGzatGnBikmTJk1KXUEtkAIKKKCAAgoooIACCiiggAIKKFDbAoYWarv9rb0C
CiiQVgH2WuB16qmnsvnzBx98kNZiWi4FFFBAAQUUUEABBRRQQAEFFFCgFgWa1mKlrbMCCiig
QOUIsPnzWmutVTnltaQKKKCAAgoooIACCiiggAIKKKBA9QsYWqj+NraG5RdYbrnlyp+pOZZC
YPnlly9FsqapgAIKKKCAAgoooIACCiiggAIKKKBARQsYWqjo5rPwKRVo165dSktmseopYFPW
E8zbFVBAAQUUUEABBRRQQAEFFFBAAQVqQsDQQk00s5Uss0D79u3LnKPZlUjApiwRrMkqoIAC
CiiggAIKKKCAAgoooIACClS0gKGFim4+C59SgZ49e6a0ZBarngI9evSo5xPeroACCiiggAIK
KKCAAgoooIACCiigQPULGFqo/ja2huUX6N+/f/kzNcdSCOy+++6lSNY0FVBAAQUUUEABBRRQ
QAEFFFBAAQUUqGgBQwsV3XwWPqUCXbt2XW+99VJaOIuVtwCN2KVLl7xv90YFFFBAAQUUUEAB
BRRQQAEFFFBAAQVqRcDQQq20tPUss8All1xS5hzNrugCNmLRSU1QAQUUUEABBRRQQAEFFFBA
AQUUUKA6BAwtVEc7WovUCbCQzrbbbpu6YlmgvAVoPldDylvLGxVQQAEFFFBAAQUUUEABBRRQ
QAEFakvA0EJttbe1LafAHXfc0aZNm3LmaF7FEqDhaL5ipWY6CiiggAIKKKCAAgoooIACCiig
gAIKVJmAoYUqa1CrkyKB1Vdf/d57711qqaVSVCaLkocATUbD0Xx53OstCiiggAIKKKCAAgoo
oIACCiiggAIK1KKAoYVabHXrXDaBbbbZZvz48c5dKBt4wzOisWgyGq7hSZmCAgoooIACCiig
gAIKKKCAAgoooIAC1SpgaKFaW9Z6pUWATurnnnvOfRfS0h45y0Ez0VjGFXIi+aYCCiiggAIK
KKCAAgoooIACCiiggAL/Y2jBPwIFSi7A0jqTJk2677771ltvvZJnZgYFCdA0NBDN5DpIBfn5
kAIKKKCAAgoooIACCiiggAIKKKBAbQk0r63qWlsFGk9g98Wvl1566f7773/iiSfmzJkzd+7c
r776qvFKVNM5L7fccu3atWvfvn2PHj1oma5du9Y0h5VXQAEFFFBAAQUUUEABBRRQQAEFFFCg
PgKGFuqj5b0KNFiALuw092KPGDFi3333bXAt4wkMHz58wIAB8aueK6CAAgoooIACCiiggAIK
KKCAAgoooEBlChhaqMx2s9QKlEDg448/Pv7440uQ8P+Q7HbbbbfKKquUInHTVEABBRRQQAEF
FFBAAQUUUEABBRSYPn36eeedV5gDzxb2oE/VsoChhVpufeuuwH8JHHvssUQX/utSkU5IlsTv
uuuuIqVnMgoooIACCiiggAIKKKCAAgoooIAC/yXw6quvnn/++f91yRMFSingNs6l1DVtBSpH
gKWQ7r777tKVl8TJonTpm7ICCiiggAIKKKCAAgoooIACCiiggAIKlE3A0ELZqM1IgfQKlG4p
pGidWRapRLMiorl4rIACCiiggAIKKKCAAgoooIACCiiggAKlFjC0UGph01egAgRKtxRStPLB
skjRKx4roIACCiiggAIKKKCAAgoooIACCiigQCUKGFqoxFazzAoUU4AtEEq6FFK0rGTkjgtR
EI8VUEABBRRQQAEFFFBAAQUUUEABBRSoRIE0buP83XffvfXWWzP+7/XBBx98+d8voJf/71fb
tm07/d9r7bXXXnLJJSuxMSyzAuUXYCbBcccdV858ya5Xr16rrLJKOTM1LwUUUEABBRRQQAEF
FFBAAQUUUEABBRQookBaQgvvvPPOY4899vjjjz/zzDPvvvvujz/+mLuS8xe/Mt7TrFmzNdZY
o1u3btttt93222+/5pprZrzNiwoogAAd/WXe/yAIZrils39+CiiggAIKKKCAAgoooIACCiig
gAIKVK5AY4YWvv766wcffHDcuHEEFQgnFAuRsMTMxa877riDNAkzEGDo06dPv379WrRoUaxc
TEeBKhBgbaJGWZ4oyHefffapAkOroIACCiiggAIKKKCAAgoooIACCiigQA0KNFm0aFGZq/3T
Tz8RS7j99tvvueceogtly3255Zbbc889DzroICINTZu6yUTZ4M0opQLMHthggw3KPGUhtGBB
pOnTp7ssUgjigQIKKKCAAgoooIACZRBo0qQJuZS/H6AMVTMLBRRQIBAYNWoUB3379q1ckODf
6sotvyVPjwDjeku0cEjwV1rWWQuzZs267rrrmEzw/vvvl5/4q6++um3xa7XVVhs4cOCgQYM6
duxY/mKYowIpESj/UkjRirssUlTDYwUUUEABBRRQQAEFFFBAAQUUUCAQKFFfsLw1KNChQ4eS
1rpMsxbYkvnSSy8dOnToDz/8UNL65J948+bNDzzwwDPPPJPtn/N/yjsVqA4BliQaMGBAo9eF
D0uXRWr0VrAACiiggAIKKKCAArUj4KyF2mlra6pAzQpUwayFmm07K15BAsE3ipKHFl5++eWL
L7747rvvZh2k/HXatWtHj3/wWmeddVq2bLl85EU6X0Zen3766Ztvvkn0InjNnTs3/4xYGWnv
vff+4x//uNFGG+X/lHcqUNECjbsUUpTOZZGiGh4roIACCiiggAIKKFBqAUMLpRY2fQUUaHQB
QwuN3gQWoBYESh5a+OCDD0455ZRhw4blo0kXf9euXdkFgdc222yzwgor5PNUxnu++OKLyZMn
s50Dr5deeimfkAYW++2335VXXtm2bduMaXpRgWoSYL5Co+zenNGwdIu+ZczOiwoooIACCiig
gAIK1LKAoYVabn3rrkCNCBhaqJGGtpqNK1DC0MKPP/44ePDgc845h17+3JVcZpll+vfvT0dn
r169mJqQ++YC3mVCw4QJE1h05YEHHvj2229zp0A844ILLjj++OObNWuW+07fVaByBVKyFFIU
0GWRohoeK6CAAgoooIACCihQOgFDC6WzNWUFFEiJgKGFlDSExahugVKFFp5++ml2SJ46dWoO
PvLu0aPHwQcfzGJEDZmgkCOL2FsEOViUiWusgccAAEAASURBVF2cn3jiiUWLFsXejZ526dKF
vaa32mqr6EWPFagOgfQshRT1dFmkqIbHCiiggAIKKKCAAgqUTsDQQulsTVkBBVIiYGghJQ1h
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
ERABEUh0Av8xLbAM7/76adOmJfryoim/F5cXaTTl0VwiIAIiIAIiIAIiIAIiIAIiIAIiIAIi
IAIiIAIiIAIiEAkC/zMt1KhRwzXB7Nmzf/vtN1elDn0SABS4XKdq1qzpqtGhCIiACIiACIiA
CIiACIiACIiACIiACIiACIiACIiACCQ6gf+kcWYZDRo0uPzyy0+ePGmXdOrUqRkzZrRt29bW
qOCPAKDA5TwLzPr16ztrVBaB+CGwYMGC6dOnf/311wcOHDh37twFF1xgZYta+eKLL86WLVup
UqWaNGlSqVIlK4AKIiACIiACIiACIiACIiACIiACIiACIiACIiACcU7gf6YFVOH33HPPu+++
65SYQ5kWnED8lV3caAZMkPprr3oRiBWBbdu2tWnTZuXKlbESwDnvjh07li9fPmLEiKpVq44b
N+6GG25wnlVZBERABERABERABERABERABERABERABERABEQgPglc8O9//9tKtnDhQlcMH/Yv
//DDD8pFbBH5LOzatSt//vxOkjT77LPPvDGmfHZXpQhEjcCqVavuuuuuY8eORW3G4Ce66qqr
5s+fX6ZMmeC7qKUIiEDqI0B0wdKlS19//fVmaR999FGJEiVy586d5Eq//PJL/LE6dux43XXX
JdnY1QBr69GjR5koZ86crlMcTpo06fvvv+/cufO1117L4ZQpU7Zu3dqpUyf8rryNo1wTMq4I
yblhwwauwp49e/CHK1CgAH5pcfgs9Msvv6xbtw4CV155Zfny5X2iOHHiBPfepk2b8O3jQhcs
WBBX1CSv+MGDB+fNm7d27doLL7wQk3mVKlWYwuf43kpuqrlz5/JIya/hTec/RYsW9TZLSQ2u
ya+//jprwVkwJeN4+3LFR48ejQNinTp1OLt3796RI0fecccddevW9TZWjQiIQMwJGB9l19tr
zKWSACIgAiIQRgIff/wxo9WrVy+MY2ooERABF4H/RD3hkcJ+/vzzT/syb1vz8mwbqOCTAIgs
LlMAIzB9NlalCMSKwE8//ZSkWsR1J0f5MHv27Pv3748VH80rAiIQWwJ//fXXgAED+G8KIyiS
cDho0CC0+ej9kxTs7NmzKGT5L6t169ZJNvY2qFChAn3fe+897ykCx5n/CVGRc/abb74xhyiO
vY2jWZMSXBGS8+mnnzZwnH/Lli2LHj/JGXFi2759OwaJJFumvEHDhg2NhBizfY6GCv7SSy91
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
/yTZMo03IKt2lfOfNM5ByxcBERABERABERABERABEYgQgRBzLbikQfm+fv36cuXKuerNIYp7
IiPlyZOnZ8+eBw4c8NkmypWIgTCIhGD+7Aosh0XJrhDlS6PpREAEREAEREAEREAEREAEREAE
REAEREAEREAEREAE4pxAeEwLLDJ37txLly5FX+8vcNDJkyfR4+fLl4/oQ7t27YoVF6ZGAMRA
GETyKQZLYCEsh0X5bKBKERABERABERABERABERABERABERABERABERABERABEUizBMJmWoDg
RRddNGTIkOXLl5NJzx/Q06dPk1Auf/78+GeTGPm3337z1zK89UzEdEzK1AiAGP7GR3iWwEJY
jr82qhcBERABERABERABERABERABERABERABERABERABERCBNEsgnKYFA5E4QuvWrRs+fHim
TJn8Yf33v/9NDoZ27dplz579vvvumzVr1tGjR/01Tkk9wzI4UzAR0zEpU/sbEIERG+H9RXby
11H1IiACIiACIiACIiACIiACIiACIiACIiACIiACIiACIpB2CERkYz7p9cjb3KxZs+7du0+Z
MiWANv/UqVM04JMuXbpbbrml2vkPSaEDmCWSvDY4KOB28Pn5z4YNG/76668kuxAB6d577x02
bFiOHDmSbKwGIiACIiACIiACIiACIiACIiACIiACIiACIiACIiACIpCWCUTEtGCAoqafNGlS
nz59nn/++RkzZgRW8XP26/MfUiDQ/brrrrvxv5+CBQtmzZo1Y8aMV/z3Q4MT//38/vvvR44c
2b59+/f//ezfvz/4K4pJo0mTJk899dTNN98cfC+1FAEREAEREAERiASB2bNnly5d+vrrrzeD
f/TRRwQqTPWpj/bs2TN69OhKlSrVqVOHhe/du3fkyJF33HFH3bp1IwE5WWOyY2POnDn333+/
6cXz14cfftiqVSvXIGzmMA9gXL5s2bI5z1LPWWpy5cpVvHhx56l4LvMQy6MlCbquvfZa5GQf
zNatWzt16uRaXTwvQbKJgAiIgAiIgAiIgAiIgAiIQEQJRNC0YORGZT916lTezQYPHjxx4sRz
584Fsx7eQvksXrw4mMahtSGVAu/JWD4wYYQ2gnqJgAiIgAiIgAiEiwA+joMGDULDjnUB0wKH
zz333BtvvMFhqjctPPbYY6jvX3rppS+//BLfzW7dun3wwQccEsgRe0O4CIcwDs9vDRs2vP32
241pYdu2bY0aNcJ44DUtDB06FF08UzzxxBO4gTrn4jpyWalp27bt+PHjnafitrx+/fqWLVsi
3ooVKz777LNvv/2W6JocLlu2DLfYuBVbgomACIiACIiACIiACKRxAps3bx4wYEBoEOgbWkf1
SssEIm5aMHBR37/99tvPPPPMmDFj3n///X379sUQOgoLXhc7duyYJ0+eGIqhqUVABERABERA
BCyB9957D9PCd999h7cilTwt8NiwZcuWwoUL2zaptUAkSbM0tNiYFuzhggULYmtauOuuuypW
rPjOO+8Y8XCquO2227hSAS4EBoYhQ4bYJZw9e5YtJgHax+cpKz/WnT/++AMnVyPn0qVLT58+
femll8an2JJKBERABERABERABEQgjRPgBWrgwIFpHIKWH00C4U/jHED6vHnz4ruA1z9vzg88
8MDll18eoHHYTzEdkzI1AiCG7AphJ6wBRUAEREAERCBkAjNnzkyfPj0RkEwERXM4d+7cwAEV
Q54urjq+/vrrZKhCJPT4/H311VebN29OgZhIMZSTKEa7du0iOhN79hFj06ZNP/zww08//WQO
fQpGrqwDBw58+umn9ixXkMCVKcmhZYeKZgGnW2wkV111FaaUiy++uGjRogRE4vDWW2+VXSGa
F0JziYAIiIAIiIAIiIAIiIAIxDOBqJoWDAh2ftWoUYMdcL/88guvbXjHY3KIHCMGZwomYjom
ZWq79Sxyk2pkERABERABERCBZBFYtWrVqVOnunfv/sknn9Bx5cqVbA/v0aPH/PnzkzVOIjbG
n5II/miuK1eujPxknMqePfuVV15ZrVq1GC6HK8LsS5Ys4TmKAleEv2zbf/DBB/1Jdffdd/OU
9e6779oGuDgQgpKoSrYmUQpci5MnT95zzz1GYHPIAhNFfskpAiIgAiIgAiIgAiIgAiIgApEm
EKWASD6XgRsBgWtN7Fq2xRG7ls/q1at37979559/+uwSTCU+7JgTiAvMCzmffPnyBdNLbURA
BERABERABGJIgNg7EyZMQIBLLrmEv2QwNnH52TPulYrnBNISUE/4IDTXZ86cWbNmDbFrqGFf
ee3atb1dbM3Ro0cJoL9jxw724+fMmZPEwmw7sGdtgU36tLzpppvQ+KNkJ/8T0RRN1gc0zsRr
+v3331GyZ8mSxXZxFghUunbtWvyRCxQowDMJu+CdZ11lci3MmzcPJb5ZLLkWyDDBoUHhauw6
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
mRZS/SXWAuOBgHmiUK6FeLgWkkEEokQAxT0BMcqXLx+l+YKeBpEQTHaFoIGpoQiIgAiIwD/w
csP9goBCBNPjBZK4T4kFhWwNBCokYQZiJ+unGWedJk2aTJkyRXaFxLriklYEREAEREAEREAE
REAEUhkBeS2ksguq5YhAUAQWLFgwffp0og8RsOLcuXNB9Ql3I8J8Z8+enRhNTZs2NclXwz2D
xhMBERABEUjlBMaPH//QQw+ZsB79+/f3mfU6bhFgTiA2F+JlypRp2bJl5G8IXlSiJ0UunlXw
YqilCIhAIhKQ10IiXjXJLAIikCwC8lpIFi41FoHQCJgnCqVxDo2eeolAYhNAlS9tfmJfQkkv
AiIgAiLwj3+0a9fuxhtvnDt37s6dO4sWLZpYSKpUqULGC0IhPfDAA7hfJEt42RWShUuNRUAE
REAEREAEREAEREAEIkFAXguRoKoxRUAEREAEREAEREAEREAEREAERCDuCMhrIe4uiQQSAREI
NwF5LYSbqMYTAR8ElGvBBxRViYAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIBCag
NM6B+eisCIiACIiACIiACIiACIiACIiACIiACIiACIiACIiACIjA3wjItPA3HDoQAREQAREQ
AREQAREQAREQAREQAREQAREQAREQAREQAREITECmhcB8dFYEREAEREAEREAEREAEREAEREAE
REAEREAEREAEREAEROBvBGRa+BsOHYiACIiACIiACIiACIiACIiADyuDtQAAQABJREFUCIiA
CIiACIiACIiACIiACAQmINNCYD46KwIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiIAIi
8DcCF/3tSAciIAIiIAIiIAIiEDsCs2fPLl269PXXX29E+Oijj0qUKJE7d26XROfOnfv000+p
rFmz5sUXX+w6G8zhyZMnX3/99YIFCzZp0iSY9hFqk/KFOAU7dOjQmjVrLrvssipVqjjro1be
s2fP6NGjK1WqVKdOHSbdu3fvyJEj77jjjrp160ZNBn8T/fbbb3PmzLn//vtNgxMnTnz44Yet
WrXy195Vv2jRojNnzpQsWTJHjhyuU6Edrl+//ueff3b2BdQVV1zhrIlJ+ddff503b962bdsQ
L1OmTIULF65evTrflGCE2bVr1+LFi1evXp09e/abzn/oeNFFsX/d+OSTT3788cciRYoAOcmF
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
4pi+kD/vgAABAgQIECBAgAABAgQIEGgqAamFphpuwRIgQIAAgaUSeO2114499tgFCxassMIK
PXr0WKq6XEyAAAECBAgQIECAAAECBAg0rIDUQsMOnY4TIECAAIHUBQ4++ODYxvlHP/pRZBdi
WaTU29cgAQIECBAgQIAAAQIECBAgUBcCUgt1MQw6QYAAAQIE6l/g6aefnjp1ap8+fc4+++wu
XbrUf4f1kAABAgQIECBAgAABAgQIEKiRgNRCjWBVS4AAAQIEsiYwadKkCGnHHXfs2rVr1mIT
DwECBAgQIECAAAECBAgQIJBEQGohiZayBAgQIECgiQXmz58f0fft27eJDYROgAABAgQIECBA
gAABAgQI/B8BqQWfAwIECBAgQKAigffeey/K9ezZs6LSChEgQIAAAQIECBAgQIAAAQLZFZBa
yO7YiowAAQIECFRVYNGiRVFf586+PFSVVWUECBAgQIAAAQIECBAgQKABBdwdaMBB02UCBAgQ
INARAgsWLIhme/fu3RGNa5MAAQIECBAgQIAAAQIECBCoIwGphToaDF0hQIAAAQL1LDB79uzo
nr0W6nmM9I0AAQIECBAgQIAAAQIECKQj0DWdZrRCgAABAgQINKjAp59+OmPGjOuvv/7++++P
1ZAGDx7coIHoNgECBAgQIECAAAECBAgQIFAtAamFakmqhwABAgQIZFNg8uTJI0aMyMU2duzY
ddZZJ5txiooAAQIECBAgQIAAAQIECBCoWEBqoWIqBQkQIECAQFMK9OvX79vf/vaAAQO23Xbb
MWPGNKWBoAkQIECAAAECBAgQIECAAIGvCEgtfIXDCwIECBAgQKBIYLPNNrvmmmuKTnpJgAAB
AgQIECBAgAABAgQINLOAbZybefTFToAAAQIECBAgQIAAAQIECBAgQIAAAQIEEgtILSQmcwEB
AgQIECBAgAABAgQIECBAgAABAgQIEGhmAamFZh59sRMgQIAAAQIECBAgQIAAAQIECBAgQIAA
gcQCUguJyVxAgAABAgQIECBAgAABAgQIECBAgAABAgSaWUBqoZlHX+wECBAgQIAAAQIECBAg
QIAAAQIECBAgQCCxgNRCYjIXECBAgAABAgQIECBAgAABAgQIECBAgACBZhbo2szBi50AAQIE
CDS6wPTp0z/99NMNNthgwIABjR6L/hMgQIAAAQIECBAgQIAAAQKNImDWQqOMlH4SIECAAIEy
AieddNJOO+20+uqrjxo16sMPPyxTwikCBAgQIECAAAECBAgQIECAQLUFpBaqLao+AgQIECCQ
osDYsWOHDh3auXPn66677sILL0yxZU0RIECAAAECBAgQIECAAAECzSsgtdC8Yy9yAgQIEMiA
wNFHHz1lypRcUmHcuHEZiEgIBAgQIECAAAECBAgQIECAQP0LSC3U/xjpIQECBAgQaEMgJi5E
iXnz5rVRztsECBAgQIAAAQIECBAgQIAAgWoISC1UQ1EdBAgQIECgQwV69eoV7c+fP79De6Fx
AgQIECBAgAABAgQIECBAoFkEpBaaZaTFSYAAAQIZFujWrVtEt3jx4i+++CLDYQqNAAECBAgQ
IECAAAECBAgQqBMBqYU6GQjdIECAAAEC7RdYeeWVcxd/8skn7a/FlQQIECBAgAABAgQIECBA
gACBygSkFipzUooAAQIECNSxQNeuXbt37x4dfOedd+q4m7pGgAABAgQIECBAgAABAgQIZERA
aiEjAykMAgQIEGhygUGDBoXAzJkzm9xB+AQIECBAgAABAgQIECBAgEAKAlILKSBrggABAgQI
1Fxg5MiR0cZFF10UOy7UvDENECBAgAABAgQIECBAgAABAs0tILXQ3OMvegIECBDIisCJJ564
9dZb33bbbcOHDz/vvPOyEpY4CBAgQIAAAQIECBAgQIAAgXoUkFqox1HRJwIECBAgkFSgW7du
kyZNGjt27LRp0y644IKklytPgAABAgQIECBAgAABAgQIEKhcQGqhcislCRAgQIBAXQtceOGF
V199dXRx1VVXreuO6hwBAgQIECBAgAABAgQIECDQ4AJSCw0+gLpPgAABAgS+FLjzzjtPOumk
Pn36PPbYY/feey8VAgQIECBAgAABAgQIECBAgEDtBKQWamerZgIECBAgkJ7AJZdcsmTJklNO
OWXTTTdNr1UtESBAgAABAgQIECBAgAABAk0pILXQlMMuaAIECBDInEBstBAx7bbbbpmLTEAE
CBAgQIAAAQIECBAgQIBA3QlILdTdkOgQAQIECBBIKhDzFd5+++24qm/fvkmvVZ4AAQIECBAg
QIAAAQIECBAgkFRAaiGpmPIECBAgQKDuBD788MPFixdHt3r27Fl3ndMhAgQIECBAgAABAgQI
ECBAIHMCUguZG1IBESBAgEDzCSxatCgXdOfOfrM33/CLmAABAgQIECBAgAABAgQIpC7gBkTq
5BokQIAAAQLVFliwYEFUGVMWOnXqVO261UeAAAECBAgQIECAAAECBAgQKBaQWigW8ZoAAQIE
CDScwOzZs6PPNlpouIHTYQIECBAgQIAAAQIECBAg0KACXRu037pNgAABAgQIhMDcuXPvvPPO
c889N4632247JgQIECBAgAABAgQIECBAgACBFASkFlJA1gQBAgQIEKiVwOjRo6dPnx619+jR
40c/+lGtmlEvAQIECBAgQIAAAQIECBAgQKBAQGqhAMMhAQIECBBoNIEddthh3XXX3WCDDcaO
HbvWWms1Wvf1lwABAgQIECBAgAABAgQIEGhIAamFhhw2nSZAgAABAjmBM888EwUBAgQIECBA
gAABAgQIECBAIGUB2zinDK45AgQIECBAgAABAgQIECBAgAABAgQIECDQ2AJSC409fnpPgAAB
AgQIECBAgAABAgQIECBAgAABAgRSFpBaSBlccwQIECBAgAABAgQIECBAgAABAgQIECBAoLEF
pBYae/z0ngABAgQIECBAgAABAgQIECBAgAABAgQIpCwgtZAyuOYIECBAgAABAgQIECBAgAAB
AgQIECBAgEBjC0gtNPb46T0BAgQIECBAgAABAgQIECBAgAABAgQIEEhZQGohZXDNESBAgAAB
AgQIECBAgAABAgQIECBAgACBxhaQWmjs8dN7AgQIECBAgAABAgQIECBAgAABAgQIECCQsoDU
QsrgmiNAgAABAgQIECBAgAABAgQIECBAgAABAo0tILXQ2OOn9wQIECBAgAABAgQIECBAgAAB
AgQIECBAIGUBqYWUwTVHgAABAgQIECBAgAABAgQIECBAgAABAgQaW0BqobHHT+8JECBAgAAB
AgQIECBAgAABAgQIECBAgEDKAlILKYNrjgABAgQIECBAgAABAgQIECBAgAABAgQINLaA1EJj
j5/eEyBAgAABAgQIECBAgAABAgQIECBAgACBlAWkFlIG1xwBAgQIECBAgAABAgQIECBAgAAB
AgQIEGhsAamFxh4/vSdAgAABAgQIECBAgAABAgQIECBAgAABAikLSC2kDK45AgQIECBAgAAB
AgQIECBAgAABAgQIECDQ2AJSC409fnpPgAABAgQIECBAgAABAgQIECBAgAABAgRSFuiacnua
I0CAAAECBAgQIECAAAECBDpQoFOnTh3YuqYJECBAgACBbAiYtZCNcRQFAQIECBAgQIAAAQIE
CBAgQIAAAQIECBBISaDTkiVLUmpKMwQIECBAgAABAgQIECBAgAABAgQIEKiZwFtvvRV19+3b
t2YtqJgAgf8rILXgo0CAAAECBAgQIECAAAECBAgQIECAAAECBAgkELAgUgIsRQkQIECAAAEC
BAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJ
ECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCB
gNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAEC
BAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQI
ECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAg
QIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakF
nwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQ
IECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBA
gAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAA
AQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIs
RQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBA
IIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAA
AQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAEC
BAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQI
ECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAAB
qQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIE
CBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQ
IECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBA
gAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRC
AixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQ
IEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBA
gAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAA
AQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwEC
BAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECA
AAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAAB
AgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIE
CBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQ
IECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA
1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIE
CBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQ
IECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBA
gAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWf
AQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAg
QIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECA
AAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAAB
AgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixF
CRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAg
gYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAAB
AgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIE
CBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQ
IECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGp
BZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQI
ECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAg
QIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECA
AAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EIC
LEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAg
QCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECA
AAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAAB
AgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIE
CBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAA
AakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAEC
BAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQI
ECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAg
QIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggYDU
QgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8BAgQIECBAgAABAgQIECBAgAABAgQI
ECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBAgAABqQWfAQIECBAgQIAAAQIECBAg
QIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAAakFnwECBAgQIECA
AAECBAgQIECAAAECBAgQIEAggYDUQgIsRQkQIECAAAECBAgQIECAAAECBAgQIECAAAGpBZ8B
AgQIECBAgAABAgQIECBAgAABAgQIECBAIIGA1EICLEUJECBAgAABAgQIECBAgAABAgQIECBA
gAABqQWfAQIECBAgQIAAAQIECBAgQIAAAQIECBAgQCCBgNRCAixFCRAgQIAAAQIECBAgQIAA
AQIECBAgQIAAAakFnwECBAgQIECAAAECBAgQIECAAAECBAgQIEAggUDXBGUVJUCAAAECBAgQ
IECAAAECBBpWoFOnTg3bdx0nQIAAAQIE6kvArIX6Gg+9IUCAAAECBAgQIECAAAECBAgQIECA
AAECdS5g1kKdD5DuESBAgAABAgQIECBAgACBagosWbKkmtWpiwABAvUncNNNN0Wn9t577/rr
mh4RyIJAbh6kWQtZGEsxECBAgAABAgQIECBAgAABAgQIECBAgACB1ASkFlKj1hABAgQIECBA
gAABAgQIECBAgAABAgQIEMiCgNRCFkZRDAQIECBAgAABAgQIECBAgAABAgQIECBAIDUBqYXU
qDVEgAABAgQIECBAgAABAgQIECBAgAABAgSyICC1kIVRFAMBAgQIECBAgAABAgQIECBAgAAB
AgQIEEhNQGohNWoNESBAgAABAgQIECBAgAABAgQIECBAgACBLAhILWRhFMVAgAABAgQIECBA
gAABAgQIECBAgAABAgRSE5BaSI1aQwQIECBAgAABAgQIECBAgAABAgQIECBAIAsCUgtZGEUx
ECBAgAABAgQIECBAgAABAgQIECBAgACB1ASkFlKj1hABAgQIECBAgAABAgQIECBAgAABAgQI
EMiCgNRCFkZRDAQIECBAgAABAgQIECBAgAABAgQIECBAIDUBqYXUqDVEgAABAgQIECBAgAAB
AgQIECBAgAABAgSyICC1kIVRFAMBAgQIECBAgAABAgQIECBAgAABAgQIEEhNQGohNWoNESBA
gAABAgQIECBAgAABAgQIECBAgACBLAhILWRhFMVAgAABAgQIECBAgAABAgQIECBAgAABAgRS
E5BaSI1aQwQIECBAgAABAgQIECBAgAABAgQIECBAIAsCUgtZGEUxECBAgAABAgQIECBAgAAB
AgQIECBAgACB1ASkFlKj1hABAgQIECBAgAABAgQIECBAgAABAgQIEMiCgNRCFkZRDAQIECBA
gAABAgQIECBAgAABAgQIECBAIDUBqYXUqDVEgAABAgQIECBAgAABAgQIECBAgAABAgSyICC1
kIVRFAMBAgQIECBAgAABAgQIECBAgAABAgQIEEhNQGohNWoNESBAgAABAgQIECBAgAABAgQI
ECBAgACBLAhILWRhFMVAgAABAgQIECBAgAABAgQIECBAgAABAgRSE5BaSI1aQwQIECBAgAAB
AgQIECBAgAABAgQIECBAIAsCUgtZGEUxECBAgAABAgQIECBAgAABAgQIECBAgACB1ASkFlKj
1hABAgQIECBAgAABAgQIECBAgAABAgQIEMiCgNRCFkZRDAQIECBAgAABAgQIECBAgAABAgQI
ECBAIDUBqYXUqDVEgAABAgQIECBAgAABAgQIECBAgAABAgSyICC1kIVRFAMBAgQIECBAgAAB
AgQIECBAgAABAgQIEEhNQGohNWoNESBAgAABAgQIECBAgAABAgQIECBAgACBLAhILWRhFMVA
gAABAgQIECBAgAABAgQIECBAgAABAgRSE5BaSI1aQwQIECBAgAABAgQIECBAgAABAgQIECBA
IAsCUgtZGEUxECBAgAABAgQIECBAgAABAgQIECBAgACB1ASkFlKj1hABAgQIECBAgAABAgQI
ECBAgAABAgQIEMiCgNRCFkZRDAQIECBAgAABAgQIECBAgAABAgQIECBAIDUBqYXUqDVEgAAB
AgQIECBAgAABAgQIECBAgAABAgSyICC1kIVRFAMBAgQIECBAgAABAgQIECBAgAABAgQIEEhN
QGohNWoNESBAgAABAgQIECBAgAABAgQIECBAgACBLAhILWRhFMVAgAABAgQIECBAgAABAgQI
ECBAgAABAgRSE5BaSI1aQwQIECBAgAABAgQIECBAgAABAgQIECBAIAsCUgtZGEUxECBAgAAB
AgQIECBAgAABAgQIECBAgACB1ASkFlKj1hABAgQIECBAgAABAgQIECBAgAABAgQIEMiCgNRC
FkZRDAQIECBAgAABAgQIECBAgAABAgQIECBAIDUBqYXUqDVEgAABAgQIECBAgAABAgQIECBA
gAABAgSyICC1kIVRFAMBAgQIECBAgAABAgQIECBAgAABAgQIEEhNQGohNWoNESBAgAABAgQI
ECBAgAABAgQIECBAgACBLAhILWRhFMVAgAABAgQIECBAgAABAgQIECBAgAABAgRSE5BaSI1a
QwQIECBAgAABAgQIECBAgAABAgQIECBAIAsCUgtZGEUxECBAgAABAgQIECBAgAABAgQIECBA
gACB1ASkFlKj1hABAgQIECBAgAABAgQIECBAgAABAgQIEMiCgNRCFkZRDAQIECBAgAABAgQI
ECBAgAABAgQIECBAIDUBqYXUqDVEgAABAgQIECBAgAABAgQIECBAgAABAgSyICC1kIVRFAMB
AgQIECBAgAABAgQIECBAgAABAgQIEEhNQGohNWoNESBAgAABAgQIECBAgAABAgQIECBAgACB
LAhILWRhFMVAgAABAgQIECBAgAABAgQIECBAgAABAgRSE5BaSI1aQwQIECBAgAABAgQIECBA
gAABAgQIECBAIAsCUgtZGEUxECBAgAABAgQIECBAgAABAgQIECBAgACB1ASkFlKj1hABAgQI
ECBAgAABAgQIECBAgAABAgQIEMiCgNRCFkZRDAQIECBAgAABAgQIECBAgAABAgQIECBAIDUB
qYXUqDVEgAABAgQIECBAgAABAgQIECBAgAABAgSyICC1kIVRFAMBAgQIECBAgAABAgQIECBA
gAABAgQIEEhNQGohNWoNESBAgAABAgQIECBAgAABAgQIECBAgACBLAhILWRhFMVAgAABAgQI
ECBAgAABAgQIECBAgAABAgRSE5BaSI1aQwQIECBAgAABAgQIECBAgAABAgQIECBAIAsCUgtZ
GEUxECBAgAABAgQIECBAgAABAgQIECBAgACB1ASkFlKj1hABAgQIECBAgAABAgQIECBAgAAB
AgQIEMiCgNRCFkZRDAQIECBAgAABAgQIECBAgAABAgQIECBAIDUBqYXUqDVEgAABAgQIECBA
gAABAgQIECBAgAABAgSyICC1kIVRFAMBAgQIECBAgAABAgQIECBAgAABAgQIEEhNQGohNWoN
ESBAgAABAgQIECBAgAABAgQIECBAgACBLAhILWRhFMVAgAABAgQIECBAgAABAgQIECBAgAAB
AgRSE5BaSI1aQwQIECBAgAABAgQIECBAgAABAgQIECBAIAsCUgtZGEUxECBAgAABAgQIECBA
gAABAgQIECBAgACB1ASkFlKj1hABAgQIECBAgAABAgQIECBAgAABAgQIEMiCgNRCFkZRDAQI
ECBAgAABAgQIECBAgAABAgQIECBAIDWBrqm1pCECBELg0Ucfvf766ydNmjRv3ry5c+cuXLgQ
S4cIrLTSSv2//Bk+fPh+++232coav0QAAEAASURBVGabdUg3NEqAAAECBAgQIECAAAECBAgQ
IECgEQU6LVmypBH7rc8EGk4gMgqnn376008/3XA9b4YODxw48Mwzz4wcQzMEK0YCBAgQIECA
AIGmFejUqVPE7j5A034ABE6geQRuuummCHbvvfdunpBFSiBNgdw3CgsipWmurSYVmDNnzvbb
b7///vvLK9TtJyCGJgYohikGq247qWMECBAgQIAAAQIECBAgQIAAAQIE6kRAaqFOBkI3Misw
bdq0rbbaaurUqZmNMEOBxTDFYMWQZSgmoRAgQIAAAQIECBAgQIAAAQIECBCovoDUQvVN1Ugg
LxA3qXfeeee33norf8ZBnQvEYMWQyS7U+TDpHgECBAgQIECAAAECBAgQIECAQMcKSC10rL/W
sywQS+uMGjVq0aJFWQ4yi7HFkMXAWRkpi2MrJgIECBAgQIAAAQIECBAgQIAAgeoISC1Ux1Et
BEoFDjnkEPMVSlka4kwMXAxfQ3RVJwkQIECAAAECBAgQIECAAAECBAikLyC1kL65FptC4Prr
r7e/QkOPdAxfDGJDh6DzBAgQIECAAAECBAgQIECAAAECBGokILVQI1jVNrvA6aef3uwEjR+/
QWz8MRQBAQIECBAgQIAAAQIECBAgQIBATQSkFmrCqtImF5g1a9bTTz/d5AgZCD8GMYYyA4EI
gQABAgQIECBAgAABAgQIECBAgEB1BaQWquupNgL/R8BCOpn5HNxwww2ZiUUgBAgQIECAAAEC
BAgQIECAAAECBKolILVQLUn1EPj/ApMnT/7/Lxw1ssCkSZMaufv6ToAAAQIECBAgQIAAAQIE
CBAgQKAmAlILNWFVaZMLzJ07t8kFMhO+oczMUAqEAAECBAgQIECAAAECBAgQIECgigJSC1XE
VBWB/yswb948FtkQMJTZGEdRECBAgAABAgQIECBAgAABAgQIVFega3WrUxsBAiGwcOHCCh2W
LFlSYUnFqivQqVOnSiqsfCgrqU0ZAgQIECBAgAABAgQIECBAgAABAtkQMGshG+MoCgIECBAg
QIAAAQIECBAgQIAAAQIECBAgkJKA1EJK0JohQIAAAQIECBAgQIAAAQIECBAgQIAAAQLZEJBa
yMY4ioIAAQIECBAgQIAAAQIECBAgQIAAAQIECKQkILWQErRmCBAgQIAAAQIECBAgQIAAAQIE
CBAgQIBANgSkFrIxjqIgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIpCUgtpAStGQIECBAgQIAA
AQIECBAgQIAAAQIECBAgkA0BqYVsjKMoCBAgQIAAAQIECBAgQIAAAQIECBAgQIBASgJSCylB
a4YAAQIECBAgQIAAAQIECBAgQIAAAQIECGRDQGohG+MoCgIECBAgQIAAAQIECBAgQIAAAQIE
CBAgkJKA1EJK0JohQIAAAQIECBAgQIAAAQIECBAgQIAAAQLZEJBayMY4ioIAAQIECBAgQIAA
AQIECBAgQIAAAQIECKQkILWQErRmCBAgQIAAAQIECBAgQIAAAQIECBAgQIBANgSkFrIxjqIg
QIAAAQIECBAgQIAAAQIECBAgQIAAAQIpCUgtpAStGQIECBAgQIAAAQIECBAgQIAAAQIECBAg
kA0BqYVsjKMoCBAgQIAAAQIECBAgQIAAAQIECBAgQIBASgJSCylBa4YAAQIECBAgQIAAAQIE
CBAgQIAAAQIECGRDQGohG+MoCgIECBAgQIAAAQIECBAgQIAAAQIECBAgkJKA1EJK0JohQIAA
AQIECBAgQIAAAQIECBAgQIAAAQLZEJBayMY4ioIAAQIECBAgQIAAAQIECBAgQIAAAQIECKQk
ILWQErRmCBAgQIAAAQIECBAgQIAAAQIECBAgQIBANgSkFrIxjqIgQIAAAQIECBAgQIAAAQIE
CBAgQIAAAQIpCUgtpAStGQIECBAgQIAAAQIECBAgQIAAAQIECBAgkA0BqYVsjKMoCBAgQIAA
AQIECBAgQIAAAQIECBAgQIBASgJSCylBa4YAAQIECBAgQIAAAQIECBAgQIAAAQIECGRDQGoh
G+MoCgIECBAgQIAAAQIECBAgQIAAAQIECBAgkJKA1EJK0JohQIAAAQIECBAgQIAAAQIECBAg
QIAAAQLZEJBayMY4ioIAAQIECBAgQIAAAQIECBAgQIAAAQIECKQkILWQErRmCBAgQIAAAQIE
CBAgQIAAAQIECBAgQIBANgSkFrIxjqIgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIpCUgtpASt
GQIECBAgQIAAAQIECBAgQIAAAQIECBAgkA0BqYVsjKMoCBAgQIAAAQIECBAgQIAAAQIECBAg
QIBASgJSCylBa4YAAQIECBAgQIAAAQIECBAgQIAAAQIECGRDQGohG+MoCgIECBAgQIAAAQIE
CBAgQIAAAQIECBAgkJKA1EJK0JohQIAAAQIECBAgQIAAAQIECBAgQIAAAQLZEJBayMY4ioIA
AQIECBAgQIAAAQIECBAgQIAAAQIECKQkILWQErRmCBAgQIAAAQIECBAgQIAAAQIECBAgQIBA
NgSkFrIxjqIgQIAAAQIECBAgQIAAAQIECBAgQIAAAQIpCUgtpAStGQIECBAgQIAAAQIECBAg
0IQCt95664QJE957770mjD1pyK+88kpYTZs2LemFlZSPyu+5554FCxZUUriozEcfffTcc8+9
9NJLRee9JECAAIFmFpBaaObRFzsBAgQIECBAgAABAgQIEKihwNy5c//xj3+8+eabvXr1qmEz
Wal66tSpTz755Morr1z1gBYvXnz11VdPnjz57rvvbkflb7zxxlVXXTVx4sR2XOsSAgQIEMiq
gNRCVkdWXAQIECBAgAABAgQIECBAoIMFHnrooejBVltt1cH9aITmY2LHCy+80L1794EDB1a9
v126dOnZs2dUK8dTdVsVEiBAoGkFujZt5AInQIAAAQIECBAgQIAAAQIEaifw8ccfP/HEE926
ddtss81q10pman744YeXLFnyrW99K9IAiYKK1Ypmzpw5dOjQ1q866qij5s+fv9pqq7VeLOm7
sUrS559/vsEGGyS9UHkCBAgQaHQBsxYafQT1nwABAgQIECBAgAABAgQI1KNA3O/+5z//OWjQ
oOWWW64e+1dPfYq78zNmzOjcuXOkFirv1xdffPHggw+ed955jz76aJtXde3atep5hWg0Nm+I
tZL+9re/2U6jzSFQgAABAhkTMGshYwMqHAIECBAgQIAAAQIECBAg0PEC8QB+PIYf/dh6663L
9uadd9758MMPe/To0bt376ICsbL/p59+usoqq6y00kpFb+VefvLJJ7F20AcffLBw4cKo4Wtf
/sSCP3Frvmz5OPnWW2/NmzcvHtuP5gYMGLDqqqu2VDLOv/vuu3HHPFqPPsTL2bNnv/zyy8ss
s8waa6wR18ZBS9e++uqr0fncVslxbfQr/rv88su3VD5/PrZYiKA23njjCCd/svWDOXPm3HLL
LdHciiuuOGzYsLKFY+vmGIjCt6JLseZS4ZnS4wg/LowBCqUIufW9H77+9a9vuOGGzz777Isv
vjhkyJCYPNGKT2lbzhAgQIBA4wpILTTu2Ok5AQIECBAgQIAAAQIECBCoU4G49R+Psa+11lp9
+/Yt28Xp06dH7mG77bbbbbfdigrcfvvtsczOvvvu+81vfrPordiO+I477ogH/OMx/6K3Djvs
sHXXXbfoZLxctGjRjTfeGEszFb61xRZb7Lnnni3dBI+O3X///ZEU2XXXXSdMmPDcc8/lr11h
hRX+7d/+LWYA5M/kDvI3+ovOx635WImo6GTpy0SbUkRK5q677oqZCp06ddpyyy133nnnlrIX
l19+eUwcKWxu//33b319qmnTpt15552FlwRCK5mYSMAcfPDBkVq49dZbJ02aFL0aMWJELbaL
KOySYwIECBCoB4Hi34X10Cd9IECAAAECBAgQIECAAAECBBpaIHevvKUpC+0O7YYbbnjsscfi
TnrcvI4JBJG3iLkLMSMhpiOsueaapdXG7Ic//elP8QB+3AGPzvTp0yeO4+55LNb09ttvH3HE
Ea1MdIjarr322sgrLLvssvFsflQVkxI23XTT0rzC66+/fsUVV3z22WeRSIhsSnQsykSv4ifO
lPaq6MzcL3+ib+uss07RW0UvI7MSKyDdd999kS/p37//XnvtFW0VlSl8GRmUWDQpd+aZZ56J
XRkK3y09njx58j333BPn119//Y022ihmPETOINIYba6kFBMXgiguj5TMuHHjIsezxx57xAyJ
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
FpBayPDgCo0AAQIECBAgQIAAAQIECBAgQIAAAQIECFRfQGqh+qZqJECAAAECBAgQIECAAAEC
BAgQIECAAAECGRaQWsjw4AqNAAECBAgQIECAAAECBAgQIECAAAECBAhUX6Br9atUIwECFQt0
6tSp4rIKEiBAgAABAgQIECBAgAABAgQIZFzAzaKMD3CK4Y0ePXr8+PG1a9CshdrZqpkAAQIE
CBAgQIAAAQIECBAgQIAAAQIECGRQQGohg4MqJAIECBAgQIAAAQIECBAgQIAAAQIECBAgUDsB
qYXa2aqZAAECBAgQIECAAAECBAgQIECAAAECBAhkUEBqIYODKiQCBAgQIECAAAECBAgQIECA
AAECBAgQIFA7AamF2tmqmQABAgQIECBAgAABAgQIECBAgAABAgQIZFBAaiGDgyokAgQIECBA
gAABAgQIECBAgAABAgQIECBQOwGphdrZqpkAAQIECBAgQIAAAQIECBAgQIAAAQIECGRQQGoh
g4MqJAIECBAgQIAAAQIECBAgQIAAAQIECBAgUDuBrrWrWs0ECBAgQIAAAQIECBAgQIAAAQIE
CBAgkIJAjx49Vl999fY19Nprry1YsKB917qqaQWkFpp26AVOgAABAgQIECBAgAABAgQIECBA
gEBGBEaMGDF+/Pj2BXPggQdOmDChfde6qmkFLIjUtEMvcAIECBAgQIAAAQIECBAgQIAAAQIE
CBAg0B4BqYX2qLmGAAECBAgQIECAAAECBAgQIECAAAECBAg0rYDUQtMOvcAJECBAgAABAgQI
ECBAgAABAgQIECBAgEB7BKQW2qPmGgKtC3Tv3r31At5tFIGVVlqpUbqqnwQIECBAgAABAgQI
ECBAgAABAgRSE5BaSI1aQ00k0L9//yaKNtOhGspMD6/gCBAgQIAAAQIECBAgQIAAAQIE2ikg
tdBOOJcRaEVgwIABrbzrrQYSMJQNNFi6SoAAAQIECBAgQIAAAQIECBAgkJqA1EJq1BpqIoHh
w4c3UbSZDnXYsGGZjk9wBAgQIECAAAECBAgQIECAAAECBNojILXQHjXXEGhdYOTIka0X8G6j
COy3336N0lX9JECAAAECBAgQIECAAAECBAgQIJCagNRCatQaaiKBzTfffODAgU0UcEZDjUHc
bLPNMhqcsAgQIECAAAECBAgQIECAAAECBAi0X0Bqof12riTQisCZZ57ZyrveaggBg9gQw6ST
BAgQIECAAAECBAgQIECAAAEC6QtILaRvrsWmEIiFdIYOHdoUoWY0yBg+qyFldGyFRYAAAQIE
CBAgQIAAAQIECBAgsLQCUgtLK+h6Ai0JXHnllX379m3pXefrWSAGLoavnnuobwQIECBAgAAB
AgQIECBAgAABAgQ6UEBqoQPxNZ1xgTXXXPPaa69ddtllMx5n5sKLIYuBi+HLXGQCIkCAAAEC
BAgQIECAAAECBAgQIFAdAamF6jiqhUBZgSFDhtx9993mLpTFqc+TMVgxZDFw9dk9vSJAgAAB
AgQIECBAgAABAgQIECBQDwJSC/UwCvqQZYG4Sf3QQw/Zd6EhxjiGKQZLXqEhBksnCRAgQIAA
AQIECBAgQIAAAQIEOlBAaqED8TXdLAKxtM6UKVOuu+66gQMHNkvMjRZnDE0MUAyTdZAabej0
lwABAgQIECBAgAABAgQIECBAoAMEunZAm5ok0JQC+335M2vWrOuvv37y5Mlz586dN2/ewoUL
mxKj44Pu3r17//79BwwYMGzYsBiZzTffvOP7pAcECBAgQIAAAQIECBAgQIAAAQIEGkRAaqFB
Bko3syIQt7Dr+S72+PHjDzrooKpjjxs37sADD6x6tSokQIAAAQIECBAgQIAAAQIECBAgQKBD
BKQWOoRdowTqUWD+/PnHH398LXoW1e644459+vSpReXqJECAAAECBAgQIECAAAECBAgQePLJ
J3/+85+3zyGubd+FrmpmAamFZh59sRP4isCxxx4b2YWvnKrSi6g2Kp8wYUKV6lMNAQIECBAg
QIAAAQIECBAgQIDAVwSeeuqp//zP//zKKS8I1FLANs611FU3gcYRiKWQrrnmmtr1NyqPJmpX
v5oJECBAgAABAgQIECBAgAABAgQIEEhNQGohNWoNEahfgdothVQYcyyLVKNZEYWtOCZAgAAB
AgQIECBAgAABAgQIECBAoNYCUgu1FlY/gQYQqN1SSIXB55ZFKjzjmAABAgQIECBAgAABAgQI
ECBAgACBRhSQWmjEUdNnAtUUiC0QaroUUmFfoyE7LhSCOCZAgAABAgQIECBAgAABAgQIECDQ
iAL1uI3zZ5999sILLzz7/35ef/31D7/6E9ArffVntdVW2/D//ay33nrdunVrxMHQZwLpC8RM
guOOOy7NdqO5HXbYoU+fPmk2qi0CBAgQIECAAAECBAgQIECAAAECBKooUC+phZdeeumee+65
9957H3jggZdffnnx4sWtB/nOlz9ly3Tp0mXttdcePHjwjjvuuNNOO62zzjplizlJgEAIxI3+
lPc/yCUzbOns40eAAAECBAgQIECAAAECBAgQIECgcQU6MrXw0UcfTZw48a677oqkQqQTqoUY
aYkXv/y58soro85IM0SCYdddd91nn31WXHHFarWiHgIZEIi1iTpkeaJcu6NHj86AoRAIECBA
gAABAgQIECBAgAABAgQINKFApyVLlqQc9hdffBG5hMsvv/zvf/97ZBdSa7179+6jRo067LDD
ItPQubNNJlKD11CdCsTsgU022STlKQt5i1gQ6cknn7QsUh7EAQECBAgQIECAAIEUBDp16hSt
pH8fIIXQNEGAAIFCgZtuuile7r333oUnG+U49291o/RWP+tZIJ7rrdHCIblPaaqzFl555ZUL
L7wwJhO89tpr6aMvXLjwr1/+rL766occcsgxxxyz1lprpd8NLRKoE4H0l0IqDNyySIUajgkQ
IECAAAECBAgQIECAAAECOYEa3QvG24QCa6yxRk2jTmnWQmzJfNZZZ11xxRX//Oc/axpP5ZV3
7dr10EMPPe2002L758qvUpJANgRiSaIDDzyww2OJX5aWRerwUdABAgQIECBAgACB5hEwa6F5
xlqkBJpcoKFnLTT52Am/IQRy3yhqnlp47LHHfvnLX15zzTWxDlLlLv379487/rmf9ddfv1ev
XisV/EQ9Hxb8vPfee88//3xkL3I/8+bNq7yhWBnpgAMOOOOMMwYNGlT5VUoSaGiBjl0KqZDO
skiFGo4JECBAgAABAgQI1FpAaqHWwuonQKBOBKQW6mQgdCOrAjVPLbz++usnnXTS3/72t0oE
4xb/5ptvHrsgxM+QIUN69OhRyVVlyyxYsGDatGmxnUP8zJo1q5KURliMGTPmN7/5zWqrrVa2
TicJZEkg5it0yO7NZQ1rt+hb2eacJECAAAECBAgQINDMAlILzTz6YifQVAJSC0013IJNX6CG
qYXFixf/4Q9/+OlPfxp3+VsPbPnllx85cmTc6Nxhhx1iakLrhdvxbkxouO+++2LRlRtuuOGT
Tz5pvYbIZ/ziF784/vjju3Tp0npJ7xJoXIE6WQqpENCySIUajgkQIECAAAECBAjUTkBqoXa2
aiZAoK4EpBbqajh0JnsCtUotTJ8+PXZIfvTRR1shi7aHDRs2duzYWIxoaSYotNJE0VuR5IhF
mWIX58mTJy9ZsqTo3cKXm222Wew1ve222xaedEwgGwL1sxRSoadlkQo1HBMgQIAAAQIECBCo
nYDUQu1s1UyAQF0JSC3U1XDoTPYEct8oOlcxsNii+dRTT43ljFrJKyy33HLHHnvsiy++GJMJ
jjzyyHTyChFjNBTNRaPRdHQgutFS4NH5CCECqZ8dp1vqqvMEkgocd9xxkV1IelWty0eXomO1
bkX9BAgQIECAAAECBFoSiL8TP/7445bedZ4AAQIECBAgQKBUoGqphTlz5sREhHPOOaelOQEr
rrhibL0we/bs888/f5111intSjpnounoQHQjOhNdKttohBCBRDivvvpq2QJOEmhEgVgKKX7q
s+f13Lf6FNMrAgQIECBAgACBKgqcffbZvXv33m233WIHvieeeKKKNauKAAECBAgQIJBVgeqk
Fm688cYtttgilkIqy7TMMsucfPLJr7zyyq9//es62Sc5uhGdiS5Fx6J7Zbsd4cTO0hFa2Xed
JNBYAvU/M6A+Z1Q01ijrLQECBAgQIECAQLsFFi1adOedd8ZfiJtuuumAAQNi1vu4cePeeeed
dlfoQgIECBAgQIBAtgWWNrUQD/ifdtppsRXzu+++W1Zq+PDhM2fOjEkAq6yyStkCHXgyuhQd
i+5FJ8t2I4KK0CLAlqZilL3KSQJ1KFD/N+7rP/lRh8OqSwQIECBAgAABAlUUOPTQQ7/zne/0
799/3rx5f/7zn8eMGdO3b99tttnmZz/72f3337948eIqtqUqAgQIECBAgECjC3Rampvmn3/+
eTzKccUVV5RV6NevX9y4P+yww8q+W28nL7/88lNOOeXNN98s27H4innZZZe1NL+h7CVOEqgr
gdzmKnXVpbKdWZp/kcpW6CQBAgQIECBAgACBNgW+//3v//GPf7z44ou/973vReHHHnvs9i9/
pk6dGrMZcpevvPLKu+yyy4gRI2LdpLXWWqvNOuuzgG2c63Nc9IoAgaoL2Ma56qQqJFAosLTb
OH/00Uf77rtvS3mFffbZ56mnnmqUvEK4RFejw9HtQqP8cYQZwUbI+TMOCBAgQIAAAQIECBAg
QCCTAoMGDYonz+66666YyH7zzTf/8Ic/3HDDDT/44IO///3vkXtYe+21Bw4ceOKJJ9566602
f87kB0BQBAgQIECAQCUC7VwQKVac3HnnnW+77bbSNuLR/tj5auLEibELVum79XwmOhzdjs6X
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
X7JGAhKQgAQkIAEJSEACEpCABCQgAQlIQAISqCoC/8e0sOCCCx588MEJ+W699VaVfQkm8VPg
gCheQxmMwExUeiqByhI488wzp02bVlkZcs9O4geEzN3GqxKQgAQkIAEJSEACEpCABCQgAQlI
QAISkEDFCSTV33369GnW7NcEDMj33XffXX755RUXtGoFAA6I4uIBEIzxGssSqDiBzz///M47
76y4GHUKQNqSL774os5mNpCABCQgAQlIQAISkIAEJCABCUhAAhKQgAQqSCBpWmjdunXPnj0T
At1www3EKklUegoBsAAngQKAYExUeiqByhIYPnz4Dz/8UFkZ8pkdIRE1n5a2kYAEJCABCUhA
AhKQgAQkIAEJSEACjY/AAh4SKBGB/fbbr6z/gyRNC0x22mmnJYL5zJkz5+KLLy6rHDU6OFiA
ExcedACM11iWQDUQ+OCDD6pBjHxkmDhxYj7NbCMBCUhAAhKQgAQkIAEJSEACEpCABCQgAQlU
ikAG08J66623zz77JAS68sorx48fn6hs4qcAAUsCAugAmKj0VAIVJ1BDjkc1JGrFb6sCSEAC
EpCABCQgAQlIQAISkIAEJCABCUigIgQymBaQg0yqeF3EBZo3b94xxxwTr7EMELDEOQDNJLRx
IJarh8BPP/1UPcLklqSGRM29EK9KQAISkIAEJCABCUhAAhKQgAQkIAEJSKCxEshsWmjfvv0B
BxyQWPOoUaNqIg1sQuwynYICIInBgQa6RKWnEpCABCQgAQlIQAISkIAEJCABCUhAAhKQgAQk
IIHGRCCzaYEVXn755csss0xiqSeffPKMGTMSlU3wFAigSCwcXEBLVHoqAQlIQAISkIAEJCAB
CUhAAhKQgAQkIAEJSEACEmhkBLKaFlZdddULLrggsdpp06YdeuihicomeAoEUCQWDi6gJSo9
lYAEJCABCUhAAhKQgAQkIAEJSEACEpCABCQgAQk0MgJZTQus89hjj91oo40SCx46dOjf/va3
RGWTOmX5QEgsGVDgSlR6KgEJSEACEpCABCQgAQlIQAISkIAEJCABCUhAAhJofARymRYWWmih
66+/PpHPGQSnnXbauHHjGh+LfFbEwll+oiWIAAWuRL2nEpCABCQgAQlIQAISkIAEJCABCUhA
AhKQgAQkIIHGR6BZ7iVtscUWJ5100qWXXhpvNm/evP333/+1115r3rx5vL7Rl6dPn87CWX5i
pSACVKLSUwlIQAISkIAEJCABCUhAAhKQgAQkIAEJSEACDUOARLAtW7Ysbq5//etfs2bNKq6v
vZosgTpMC3C56KKLRo8ePXbs2DijKVOmdO/efeTIkUsssUS8vhGXv/nmG5bMwhNrxKgAokSl
pxKoFQKdO3fGYFYRae+9997nnnuuIlM7qQQkIAEJSEACEpCABCQgAQlIQAISaGQEunXrNnjw
4OIWtd9++913333F9bVXkyVQt2mhWbNmgwYN6tChw4wZM+KYMDbsu+++Dz/8MA3i9Y2yPH/+
fBb74osvJlaH3wZwmgKBxMI9bTQEfvvb3x599NEVWc748eM1LVSEvJNKQAISkIAEJCABCUhA
AhKQgAQkIAEJSKCeBHLlWoiGbtWq1YABA9JJFx577LEjjjjip59+ilo2ygILZJksNrE6gIAF
OIl6TyUgAQlIQAISkIAEJCABCUhAAhKQgAQkIAEJSEACjZhAXqYF1t+jR49TTjklDeKOO+44
/vjjG7F1gaX169ePZabXfuqpp4IlXW+NBCQgAQlIQAISkIAEJCABCUhAAhKQgAQkIAEJSKAR
E8jXtACC//3f/+3Zs2eaxZVXXnnooYcSMih9qdZrWBRLu+qqq9ILAYUpFtJYrJGABCQgAQlI
QAISkIAEJCABCUhAAhKQgAQkIIFGT6AA0wLxf2699dadd945DYVN/XvssQeJjtOXareG5bCo
jP4KQABFOkJU7S5WySUgAQlIQAISkIAEJCABCUhAAhKQgAQkIAEJSEACeRIowLTAiAsvvPCQ
IUM6deqUHp1UBDvuuGMi1XO6Wa3UsBCWk86vgPwsHwigqJW1KKcEJCABCUhAAhKQgAQkIAEJ
SEACEpCABCQgAQlIoIQECjMtMPGSSy45bNiwDTbYIC3E2LFjN95443HjxqUv1VYNS2AhLCct
Ngtn+UBIX7JGAhKQgAQkIAEJSEACEpCABCQgAQlIQAISkIAEJNAUCBRsWgDKCius8Nxzz2X0
XZgyZco222zzt7/9rXbZITxLYCHpJbBkFs7y05eskYAEJCABCUhAAhKQgAQkIAEJSEACEpCA
BCQgAQk0EQLFmBZAg3r9qaeeyph3Yd68eSeeeOLuu+9ec8GREBixEZ4lpG8/i2XJ2hXSZKyR
gAQkIAEJSEACEpCABCQgAQlIQAISkIAEJCCBJkWgSNMCjAgK9Mgjj/Ts2TMjr6FDhxI7aODA
gRmvVmEloiIwYmeUjWWyWOMgZYRjpQQkIAEJSEACEpCABCQgAQlIQAISkIAEJCABCTQpAsWb
FsBEKuM77rjj1FNPzYhs2rRpvXr16tKly/jx4zM2qJJKxENIREXgjCKxQJZp3uaMcKyUgAQk
IAEJSEACEpCABCQgAQlIQAISkIAEJCCBpkagXqYFYC2wwAIXX3wxO/qbN2+ekd2oUaM6dOhw
8sknT58+PWODClYiEoIhHkJmFINFsTQWyDIzNrBSAhKQgAQkIAEJSEACEpCABCQgAQlIQAIS
kIAEJNDUCNTXtBB49ejR4/XXX99iiy0y4iN1wWWXXda6dWv0+J9++mnGNg1ciRgIg0gIljGz
AvKwHBbF0hpYNqeTgAQkIAEJSEACEpCABCQgAQlIQAISkIAEJCABCVQzgdKYFlhhq1atnnvu
OfT12Tb4z5kzBz1+mzZtjjnmmMmTJ1cKClMjAGIgDCJlFIMlsBCWw6IyNrBSAhKQgAQkIAEJ
SEACEpCABCQgAQlIQAISkIAEJNBkCZTMtADBZs2aXXLJJWPGjNloo42yAf3uu++uu+66tdde
m/QGt95666xZs7K1LG09EzEdkzI1AiBGtvERniWwEJaTrY31EpCABCQgAQlIQAISkIAEJCAB
CUhAAhKQgAQkIIEmS6CUpoUAkThCr7766t///vdlllkmG9affvqJ9AZHHHHEKquscuCBBz74
4IMzZ87M1rg+9QzL4EzBREzHpEydbUAERmyEzxbZKVtH6yUgAQlIQAIVJPDDDz+8//77Tzzx
BP9WUAynloAEJCABCUhAAhKQgAQkIAEJSKDpECi9aQF2Cy20UN++fd999110+tniIwXE3377
7aBBg/baa68VV1xxk002IQzR8OHD6+nKQHcGYSgGZFgGZwomynFTERJRERixET5HSy9JQAIS
kIAEqorAO++8g79d27Ztu3Xrduedd1aVbAojAQlIQAISkIAEJCABCUhAAhKQQGMlUMaYP6uu
uurdd9992mmnXXjhhUOGDPnxxx9zQOTqa78cpECg2Wqrrbbef4911123efPmSy211NL/PWgw
+7/H119/PWPGDPZpvvffY+rUqTkmSlxacMEF99lnnzPPPLN9+/aJS55KQAISkIAEqp9Av379
xo8fv8QSS+y0007bbbdd9QushBKQgAQkIAEJSEACEpCABCQgAQk0AgJlNC0EOqjs7733XtT+
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
esSIEX369FlttdXqbJxoMHbs2JkzZzLR6quvnrjE6d133/3ee+8dc8wxK6+8MqeDBg165513
jj766BYtWqQbN3BN0bgaWM7KTjd79mwepDfeeOPTTz/lrq277ro9evSohtsHlu+///6hhx56
8803P/nkk/XWW2+LLbbYeuutc+P67LPPHnvssVdeeWWhhRbabrvtunTpstxyy2XswoM6efLk
Nddcc4MNNsjYoFSVU6ZMuf766zt37rzrrrsy5scff3zttddus802u+22W6mmcBwJSEACEpCA
BCQgAQlIoNoJ/OQhAQlIQAISkIAEKkHgxx9/PO+881D4vvjii8zP6QUXXIA2H71/neKgn11h
hRV4zTrkkEPqbJxusNVWW9H3zjvvTF967bXXwtvbjjvuyFVUwOEUlW66cUPW1AdXQ8pZ8bnm
zJmz2GKLhbsW/bvkkkueffbZ8+fPr6x4PF2//e1vI6lCYb/99sN4kE2wJ598Mpi4ol6LL774
M888k7F9v379aPanP/0p49USVu6+++5BHix8DLv33nuH01GjRpVwFoeSgATKQSD831qOkR1T
AhKQQFURYKMJR1WJpDASaEwEwhuFXguBg/9KQAISkIAEJNDQBNDsY0t499132VTO3Hfddde5
55779ttvr7/++nWKsvDCC7M1e/r06WuttVadjQtqwMbw0B4l6bx58xZc8D/RI5977rnvvvsu
rbMuaPD6NK4PrvrMW3N9l1hiCRxZcIXZcsstV1pppTFjxjz++OPs5f/zn//MHbzkkksqtaJp
06Z169bt888/59Ht27cvnjpYGq666qrBgwdPnTr12WefjZ69SELMbHTBqsRyDj30UJZGY5x1
unfvPnz4cLwEopYNXIhExfKBoS46RTZcGRpYGKeTgAQkIAEJSEACEpCABCpCwFwLFcHupBKQ
gAQkIAEJ/L8HHnhg0UUXZTMRmlNwhNNhw4aF0zoBoTJ+/fXXzznnnDpbFtSgffv2BETCJWKz
zTbDgEFgGQIicdqxY8cK2hUiPkXjKghCrTfGXoUKni38Bx988HXXXTdp0qQrrriCRV166aX/
/Oc/K7W6U089FbvCb37zG1xhkG2fffa56KKLcNnBC4G9/9dcc01CMPY0HXfccfzvgAMNT/ux
xx57+OGHYyY56KCD8MzA1wHTV6JLg51iEUEApgvRnMC7//77c1pBa0eDrd2JJCABCUhAAhKQ
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
jcmVpfDnn3/+zz77LAvi125/iC5zZUX+tK2SLlGQjFD379+/CAxUXurs8T777DP99NNn0sYV
V1xRde+ZZ56ZlASNNt5446pL9Tzt4D8RUUqrbrzxxpYTlTKUn9kGWfppp512qmx5saly5hBU
rQeVuMIxxxyTnC2/DF1+iGXtmdDzxz/+MWGGb33rW5WNcUyAAAECBAgQIECgHQGhhXZwXCJA
gAABAgQaUaB4q/e///u/yyG2LMvecuSuO00vqnjsscfyinRZTnZbnTBhQnnatYMMvJ599tm5
95Zbbtlll12qXv3OgiTjx4/vWslt3ZUB30UWWWTTTTeNUlt5Gja9C1zLL798upN5IVlBvuhX
9sVNIOeoo44qdm6oGrFt2L5nu4VDDz00zTv//PPzLnnlev35Hra1xk5nu9NlrrxWn5WaPvnk
k6LGp556au+9987xt7/97XzfOtuMqvzZGGO77bZL4r/+67/+6U9/Kq/+6stPThNumXXWWcv0
+h908F+hzb785F+qbP6RuEvZzsxjOOigg3KaR5wAUpmeg2233TZrImWGTaYUlDsu5Du87rrr
BrkyZ3nc5YeYErJuWH6eddZZmYGRmNDMM89cFtuzB/vvv38eayrq2WKVRoAAAQIECBAgMC0F
8peuDwECBAgQIECgFwlkM97ij6dll112v/32W3XVVfOCcxamb78LI0eOzF1ZqqX9bMXVcePG
DR48OPkHDBiQl4izFXCxtM6ll17azu1ZhCe3ZHPUNCyfLNjSVubsATDDDDMk87zzzpuNAY44
4oj8zLoo0003XQbB27qra+mbbLJJKsqnCMZ0rZCeuisjwmlJnldel27102pFneLKaOzQoUP/
t8NfPouVV165OA5yogs5zgh4y1rKuEuWuW95tSrlvffeK8rM96Tq0p///OdcyrelKr3Lp5ls
kW9FyswXZvXVV//Od76TKFE5IeP444+vKrlTHcm9neUq+5733PMc822P5+abb17sRZzT7B9Q
1aTylk5xJXyywQYbFM5ZFytv0y+wwALF6Y477ph5P1W15LS4mvkErX61fvazn7W8pcspHf9X
KOHJYsmj/PuQAENiCelX8eufuEOCiy3bkHBg/uVJdxJ12H333b/xjW+Ed6655koXktjyH7HO
PsSqGssFrO6///6qSz11WmzCkcbn6SR62lPFKqdrAsVvStfudRcBAgR6kUBmDebTixqsqQR6
l0DxF8X/zqj1IUCAAAECBAj0IoEMnmZs8f/+lPnyf7L6zWGHHZaFbtrpRadCCykn/ylSuVJ/
RlEzwJd9ZdupoggtlA3LZrbtZB41alRGiotR4/KWRBoylNzOXV24lPe8U0tKfuutt7pwe8/e
UoQWyv62PGiruk5xZTD361//ell43gE/7bTTUvK5556bxIyDt6ylUyPyXRsrb1lpB1NuvfXW
VVZZpRiMLjqVnagTMXrooYdaltCpjhS3d4qrsu+ZF1K8vF+0arXVVsvL9S2bVHlL1dX2IzGZ
xJMFhco4SlFL4nx5v76qnOK0yNDWz3z3Wr2ra4md+lcoYZJdd921iBYUzcuUi7SnrY6kSXno
c889d5E5//isvfbamYjTzj9inXqIVV0+4YQTUlGioVXpPXiaf5xXXHHFojstg089WJGiOiJQ
PIiO5JSHAAECvVrgy8iC0EKvfoYa39ACxV8U/dLG4shPAgQIECBAgEAvEsjqIs8991xG6zJw
vNRSS2Wwtccbn9HDrEDy9ttvL7jggqli0KBBtagie9JmcZs555wzL2XndfuqYEOP1JigQl55
rhyb7pFi619InkgHuTKU+cQTTwQ2k1ryDal/U3u8xqyQU/Q9o/kZBe7ZhWs6zpVR8uIXIVMQ
8qVNN/ObmIYlTla1sE9PCaRtGVXPimeZM3TTTTclYpct0Bvky9ypf4WyeFTxBLN+UTFFqX2i
/Gda/v1JtGadddapiq+0emPHH2LV7UceeWQmBmUaSk03gEn3sz1GdozIQnNVDXBaZ4Hi/y6N
A9SZXXUECNRfIH82pNJhw4bVv2o1EugLAsVfFEILfeFZ6yMBAgQIECBAgACBHhBoGVrogUI7
VsSDDz6YQfaMh6655ppZHylLV2W7gsxY6tjdcrUukHBdYm9ZYCp7SlfNu2r9hq6mZs+MLbfc
MpOo9tprr66W4b6eERBa6BlHpRAg0PACQgsN/4g0sHcLFH9R2Ma5dz9FrSdAgAABAgQIECDQ
FwTWWmutE088Mf8Nk5WgDj/88P/8z/+86667+kLHa9rHo48++t133913331rGldIHCir2F11
1VXiCjV9mgonQIAAAQIECNRZwKyFOoOrjgABAgQIECBAgEBvFZiGsxYKsscffzxbDuRd+6wK
lUkMiyyySG+lnHbtvuGGG7IBRvaSuf76688777ysMfXkk0/ONttsNW1Rdm8ePHhwTatQeAcF
zFroIJRsBAj0dgGzFnr7E9T+Bhco/qLo3+Ct1DwCBAgQIECAAAECBAgUAit/+aHRHYFTTz31
vvvuK0rIBu+ZTFDruELqElfoziNzLwECBAgQIECgMQWEFhrzuWgVAQIECBAgQIAAgYYTyMbp
e+yxR5o1cODAhmucBnVM4Be/+MXDDz+czbEzX2H33XfPBvIdu08uAgQIECBAgAABAv8kYEGk
f+JwQoAAAQIECBAgQIAAAQIEmlXAgkjN+mT1iwCBKgELIlWBOCXQswLFXxS2ce5ZVaURIECA
AAECBAgQIECAAAECBAgQIECAAIEmFxBaaPIHrHsECBAgQIAAAQIECBAgQIAAAQIECBAgQKBn
BYQWetZTaQQIECBAgAABAgQIECBAgAABAgQIECBAoMkFhBaa/AHrHgECBAgQIECAAAECBAgQ
IECAAAECBAgQ6FkBoYWe9VQaAQIECBAgQIAAAQIECBAgQIAAAQIECBBocgGhhSZ/wLpHgAAB
AgQaXOD6669//fXXy0beeOONr732WnnqoM4CV1xxxbHHHjtmzJii3quuuiqnb7/9dp2b0Wp1
Hf+q3PLl59133221HIntCHzwwQf/8R//8fvf/76dPC7VQeDVV1/90Y9+lC9yUdff//73nN58
8811qFoVBAgQIECAAAECBDooILTQQSjZCBAgQIAAgR4WmDJlynHHHbfffvu98cYbKTqnJ5xw
wj777PPmm2/2cE11Ke6ll1568cUXP//887rU1tFKxo8fn1aNHTu2Izc8+uiju++++/HHH5+f
yf/UU0/tuuuuOc3Pjtxeuzyd/ap888vP008/XbsmNWvJ55133k9+8pNvf/vbL7/8crP2sVf0
6wc/+MF//ud/5ot8//33p8GHHHJITocNG/anP/2pV7RfIwkQIECAAAECBPqCgNBCX3jK+kiA
AAECBBpR4LLLLsuw9b333vv1r3897fvtb3+bF+TvueeeNddcsxGbO7U2LbfccksvvfQ777wz
tYx1vX722WenVT/96U87Uuv0009fZMtT+PTTT6eb7v/+UMxo5kcffdSREmqUp8m+KjVS6pFi
l1pqqX79+s0+++xzzz13jxSokK4JlL+MI0eOTAnl6W233da1At1FgAABAgQIECBAoMcFhBZ6
nFSBBAgQIECAQIcE/ud//mfgwIFZAemLL77IDcVpVvwoTjtUhEw9KrDSSitlQaS55pprjTXW
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
H37Y+uUWqcXr/G2tFZNlZLLCfm4qsrW4u4YJRfAgeyRkqfoaVqPoDgvU56vSR557ZgIFfo45
5mjJv8gii2R35V/84he33nprtuW44YYbHnnkkWwdcffdd1988cWiCy3FpBAgQIAAAQIECBBo
cAF7LTT4A9I8AgQIECBA4H8Fil1YO75Qe7EJc1u7Lmc/g0QXUmzHp0H01GNYbrnlUlTHO9JT
9SqnLYH6fFX6yHN/7bXX4tzWbKFcyp4HO++881VXXfXWW29lEkPWKco8hiuuuKKtpyOdAAEC
BAgQIECAAIGGFRBaaNhHo2EECBAgQIDA/y9QhBayUlDecf7/U9s+KmIG77777qhRo1rmuu22
25KYDXLLPXJb5ulaShGxaOfeYog5W0cUi++3k7MHL021VT1YV68rqj5flWny3Gv6LCZNmlRV
/hdffFH8epbbKVdlqDxNjOGnP/3pNttsk8SWv9TZsL3IPHHixMq7HBMgQIAAAQIECBAg0DgC
QguN8yy0hAABAgQIEGhTIKGFjTfeOJcPPvjgYi2jNrN+eSGvoq+99to5POWUU6pyfvbZZz//
+c+TmEXeqy5157RYsunhhx9uv5D1119/hRVWSBdGjBjRfs4eudrBVvVIXb20kPp8Ver83Ovw
LPbcc8/8KlVWdPPNN48ePTpRgcxLqExv5/grX/lKrpZbUpc5E/MrvropsEzMwYQJE372s59V
ptTzuOWCbFUp+b3Op55NUhcBAgQIECBAgACBaSggtDAN8VVNgAABAgQIdELg3HPPzWjjU089
tcEGGxTrrpQ3f/LJJ5mgUJ4WB6eeemoOrr766uOPP768lN0Xdtxxx+ypO2jQoKOOOqpM7/7B
kCFDUsh///d/T5kypSjtgw8+aLnwUQZezz777GS45ZZbdtlll6pXv7NU/fjx47vfmLKEolWP
PfbY888/XyZm4+IM0Zan3T/I6+rbbbfdAgsscPnll3e/tPqXUIevSp2fex0M77nnngMOOCC/
ekVd+cXMxgk5/va3v51tFaoa8N57773//vtViY8//vivf/3rJOY3uupSTovZJPllKX+h8h1O
vPD222/P1TKx5Y01SrnwwgvnmWeexAXHjRtXVJEpF5l78YMf/KA4ze7U6Xg+DzzwQI3a0JFi
04zQbb755ln2rSP55SFAgAABAgQIECDQZQGhhS7TuZEAAQIECBCoq0DGyy655JKEBB588MFM
Ythkk00OO+ywzDxYZZVVZp111nKAr2xTRiGz4kq/fv2OPfbYlVZa6cADD9xjjz2WWWaZ66+/
fpZZZslAYc+uhpSdmVN1xtaHDh26//77r7baatnMdtiwYWV7yoO8wJ65FDPMMEPCHnllPjce
eeSR+Zm2pSOVgZDyli4fbLjhhoMHD8447Iorrrj77rtvu+228847bySziW6Xy2x5Y8ZSo5rV
808++eSWV6dVyje+8Y14tvycdNJJVU2qz1elns+9qoO1OD399NMvuuiiZZdddp999tliiy3W
WGONsWPHLr744q3OKsjvRb54iT/lq55ATmY85Juf39x8Z/K13HXXXVu2MPOTkphtGNZbb70c
f+1rX8uiUvl1Pv/885Oeg5a31DTlrLPOyhyFLGVW/O5kQbMbb7wxS40l+JEgYqrOphFZsS2f
sNS0Je0XHp/EDhOAKUKY7Wd2lQABAgQIECBAgEB3BP5vGdPuFOFeAgQIECBAgEB9BPJC9Lrr
rptxxiy9cueXn6LeDOIvuOCCLduQfWIz4pl3q5/88pMMGZHMoH8GARMAaJm/OylHHHHE008/
/fvf//65Lz8pauGFF95+++0zrN9yGPTwww/fdNNN99tvv0ceeeTaa68t683waz7lafcPEj65
9NJL99prrwz7FpvlZvGZjLkXsxm6X35Rwqqrrpox5VdffbWIr/RUsd0sJzNUWi2h1SVr6vNV
qdtzb7XjPZuYQN1CCy2UUEGidEXJ+c267rrr8rVvWVG+dYnnJf5UeWmJJZY45JBDEodr+QuS
bN/73vf+9re/JYBx/5ef/I5nVsR//dd/tbp7SmWxNTrOPIBHH3104MCBG220UarIfhL5ZP5T
IkbpWlLya1WM5ifQUqM2dKTYtPPiiy/ORKKEbTqSXx4CBAgQIECAAAECXRboV//ZxF1uqxsJ
ECBAgAABAoVAXhbOm7lZbijrzCSokBXbBwwY0A7OP/7xjwwLzjzzzF/96lczRtlOzm5eytLw
iSykMYsuumjey251zLSyirzvnIDEK6+8khhAFhRKwGO66Xp+UmlqyXo1eZ86VmlVZn5UtqFH
jvNEMpSZseYeKW0aFlKfr0p9nnstGLOUVvH9ybpAxbyffOfzHV599dXnn3/+dmrMNyTZ8iXM
2mVzzTVXYlEJLUz12578CQumokxxmGrmdmrvkUuZL5VfnyyLVJSW5cseeuihTKrIv0JFSn73
899WxZbdPVJj1wpJ5DXzpRKzzDSRrpXgruYWKP6PyThAcz9lvSNAIAI33XRTfrY6h5gPAQLd
Fyj+ohBa6L6kEggQIECAAAECBAj0CYGWoYU+0e3e08kEPIYPH56Fm7KlfIKpvafhWlo/AaGF
+lmriQCBaSogtDBN+VXe/ALFXxQ9/1pc88vpIQECBAgQIECAAAECBBpP4Oijj/7ss8+ymbO4
QuM9HC0iQIAAAQIECDSbgL0Wmu2J6g8BAgQIECBAgAABAn1T4Jhjjsmab8VLZH1TQK8JECBA
gAABAgTqJiC0UDdqFREgQIAAAQIECBAgQKCGArXYSaWGzVU0AQIECBAgQIBAbxYQWujNT0/b
CRAgQIAAAQIECNRRIFuU77HHHqlw4MCBdaxWVQQIECBAgAABAgQINJyA0ELDPRINIkCAAAEC
BAgQINCYAjPNNNMll1zSmG3TKgIECBAgQIAAAQIE6ilgG+d6aquLAAECBAgQIECAAAECBAgQ
IECAAAECBAj0egGhhV7/CHWAAAECBAgQIECAAAECBAgQIECAAAECBAjUU0BooZ7a6iJAgAAB
AgQIECBAgAABAgQIECBAgAABAr1eQGih1z9CHSBAgAABAgQIECBAgAABAgQIECBAgAABAvUU
EFqop7a6CBAgQIAAAQIECBAgQIAAAQIECBAgQIBArxfo3+t7oAMECBAgQIBAbxa4/vrrV1tt
tYUXXrjoxI033rjyyisvuuiivblPfajtr7766jnnnLP++utvtdVW6fbf//73s846a7311vvm
N7/ZCApvvPHG448/XrZk+umn33zzzcvTxj+YNGnSvffeW9nONdZYY+65565McUyAAAECBAgQ
IECAAIFpItBvypQp06RilRIgQIAAAQJ9XCB/hBx//PEZmE504etf/3pOTzzxxDPPPDOna665
Zh/H6anujx8/fty4cXPMMcc888zTU2VWlrPtttvecMMNSbnvvvvWWWedHXfc8ZprrsnpPffc
k3hDZc5pcnz55ZcPHz68rHqWWWZ5//33y9PGP0hcZJVVVqls58iRIzfddNPKFMcECBDolEC/
fv2S3zhAp9BkJkCgNwrcdNNNafawYcN6Y+O1mUDjCxR/UZi10PhPSgsJECBAgEBzClx22WUJ
Lfztb39beuml08Pf/va3xx577DPPPLPccss1Z4enRa/OPvvso48+ev/9908Ipxb1Zx5AUWyG
vBNaKE9vu+22RggtFG2bf/75v/Wtb+V4wIABtUCoXZkJCB166KFF+RdeeOGECRNqV5eSCRAg
QIAAAQIECBAg0CkBoYVOcclMgAABAgQI9JjA//zP/wwcODArII0YMWK66aYrTm+++eZlllkm
pz1WjYJqKXDGGWfMMMMMv/vd79Zdd93Uc/rpp+ftlauvvjprItWy2s6VveSSS2Y2TOfuaYzc
Cy644GmnnVa0JbN5hBYa47FoBQECBAgQIECAAAEC/yvgv9t9DwgQIECAAIFpI/DQQw9Nnjz5
sMMO+8Mf/pAWPPjggx999NEPf/jDW2+9ddo0SK2dF8gmGfPNN99cc821wQYb5O4MhWeKwKBB
gzbeeOPOF+YOAgQIECBAgAABAgQIEOg1AmYt9JpHpaEECBAgQKDJBLbccsuLL744nSqWqcnG
v1nyJad5C779nn788cdPPvnkU0899eyzz2YgO9s+55PR7bbuyt7CDz/88KOPPjrzzDOvuuqq
X/va1+acc86WmZ944onsTPCVr3wlRSXscdddd+2+++7FhtIffPBB1mvKMv3f+973Bg8eXNw7
ceLElDnrrLNmG+q8Tp71nTKwnr0HikWBcum6667LgHs7g+xPP/10GpY1oJZaaqnsNrHSSiu1
bFVSPv/88+xkkIOsONS/f/90/y9/+Us2M0hK+rLFFlu0vCvb/44aNSrpL7/8cn6++eabRf4i
Z6pbaKGFWt5VpAQhwZ7XXnvt7bffTuQg61Mtu+yyiy++eLnYUeWNP/jBD2655Za77767eGqH
HHJIXq7PaUeWHnrppZfSyK233nrGGWesLNMxAQIECBAgQIAAAQIECPQCgWzf5EOAAAECBAgQ
qL9Axut/+ctfZsj+iy++SO05/dWvfpUB+oykt9OYO++8c4kllmj5N9aee+7Z8q4Udcwxx1Qt
rzTbbLNdeeWVLTNvsskmKfbaa6896KCDivIzjp9x/zfeeGOBBRYoUtZee+3yxnvvvTeJiWq8
8MILZbwh0Yhk+OlPf1rkT9WZhFHeUh4kLLHLLrsUecqfe+2114cffljmKQ/ee++9Ik82ZL79
9tvnnnvu8pYcZBeBlmIJjVTmqToOe1l45cGnn36aUEECMFX5c5p6K3OWx1nPKq0qT7Oe1Tvv
vFOetnOQuEURfth5553bydbNS/k6pfEJyXSznEa4Pcs6pS/Z06IRGqMNBAj0XoHiX/je234t
J0CAQAcF8mdqPh3MLBsBAp0VKP6iMGuhcPCTAAECBAgQqLdAhrAzkF3WmtNyTL9MrDrIjsQn
nXRS/ujJyv55W3+FFVYYM2ZM5gfks+mmm1ZlTrbMhMgL+NnRYd99911rrbUy7eCOO+7IxgC7
7rprYgbZRLrqlpxeeumljz32WH6momwx/eMf/ziD4Klr6NChRxxxxAMPPJB5BpkrUN6YYMD2
228/fPjwrAKUAq+44orkvOCCCzIhI5GSRx55JKv8V00sSFxhjTXWeO655zLL4eCDD07+559/
/tRTT/3Nb36TGhOxqIqFlHWlSdnMYJVVVolbZldkukAquuaaa6666qrddtutzJaDeeedN13O
QaYFpMGponLzg9xbmbk8zpyMyy+/PFM6dthhh8yiSLbMXcjskFgVWymUOcuDYcOGlcc52Gqr
rSpP2zl+/fXXP/nkk2QYPXp0O9lcIkCAAAECBAgQIECAAIEGFehsREJ+AgQIECBAgMA0EciS
PtkiOMPuGV4vJjq034zMh8ifX5mjkBsrcxY7+mZGQsbxK9OLWQuJQ2QwPekZtS/+esvoeVHd
iiuumJSzzjqruKuYtZCU73znO0VKlg/KaRYOyr4RScmgf07nmWee4mr5M+GKpGcZpSw9VCZm
1aYs7pT0iy66qEwsDspZC+l+oheVV3fcccfckgH9ysTK4xNPPDEZ9t9//8rEVo/feuut5My6
RpmE0WqGHk88+eSTt9tuu0yw6PGSywLNWigpHBAgQKAQyD/1+dAgQIBA0wuYtdD0j1gHp61A
8ReFbZwLBz8JECBAgACBhhbIWj15DT9/PO29994jRozIIHv7zU3+o446KnmSef3116/MfOCB
B2622WafffZZMcRfeanIn8kQOSh+Jk5wzjnnFNUtv/zySR87dmzlLZlskfWFipTilrRwzTXX
TEqR/913301korwlyyslNJLThBAy0aFMT1giQ+05LRdTKi+VBxkoz/pO5WkOMr0gP1999dXK
xK4dZ2pCbkwgpFh4p2uFdOquI488MstPZXpEp+6SmQABAgQIECBAgAABAgQaQUBooRGegjYQ
IECAAAECUxHIHstZQShTDYrX8KeS+1/+JTMSXnnllUxxaHWRpew2nBKyVlJiFVVFlQPrme6Q
S9kPoJiLkOPZZ589P7MnROUtCQ+Um0IXt5QlFPmzEcJHH31U3pINmXOa7SKKORBleg4S8MjP
TF/IdgWV6eVxNr4uj4uDLKmUg6poR1WeDp5m04hEULLhc5ZdKpYq6uCNshEgQIAAAQIECBAg
QIBAHxSw10IffOi6TIAAAQIEep9A8U79kCFDsotAR1qfVX2SLdsvt5p/1VVXzdXJkydnDkEZ
OagqNvMVklI5PaJlSvu3FPmrCikaluBBtluour08zdYLVXs1l5eqDmaaaaaktAyQVGXryGkC
JMcdd1zmTGRDi9NOO22bbbbJOksJZhTxko6UIA8BAgQIECBAgAABAgQI9B0BoYW+86z1lAAB
AgQI9GKBZ599Nq1feumlO9iHF198MTkXW2yxVvMn3jDjjDNm9kCytRVaaPXG7ie+9NJLKSRV
Z15Fy9KKcfxsHN3yUh1SstpSplyccMIJadslX35mnXXW7CSRSR7LLLNMHRqgCgIECBAgQIAA
AQIECBDoLQIWROotT0o7CRAgQIBAnxZIJCD9//DDDzuoULzOX7kSUeWNWaQomzEkpchWeanW
x0XwIHskTGz7s/3229e6GW2Vv9tuuyWK89hjj2UGw9ChQ99///1zzz032yE8/PDDbd0inQAB
AgQIECBAgAABAgT6oIBZC33woesyAQIECBDofQLFlsjF3IWOtH6ppZZKtmy30Grm7GeQ6EIu
dXwaRKvldCFxueWWy10d70gXquj+Ldl3IZ8sjvTggw8ecMABjz/++C677FJMBOl+4UogQIAA
gWkuULnc3zRvjAYQIECAAAECvVTArIVe+uA0mwABAgQI9C2BIrSQlYLuvvvujvS8iBm8++67
o0aNapn/tttuS2J2F8in5dWaphShhWwdUWy6UNO6ysKLOEp52vGDtdZa69JLL03+rOP0+uuv
d/xGOQkQIECAAAECBAgQIECguQXMWmju56t3BAgQIECgSQQSWth4443vvPPOgw8+ONGCGWaY
of2OZdbC2muv/cADD5xyyilXXXVVZebPPvvs5z//eVK++93vVqbX53j99ddfYYUVnn766REj
Rtx88821rrRYSKo7yxklSDNgwIBPPvlkuum8kvJ/jysLc80888yVz64qpVhua6rf0soSHBMg
QKA+AlOmTKlPRWohQIDAtBUYM2ZMGpAt1qZtM9ROoLkF/Cdicz9fvSNAgAABAs0jkEX/M1D+
1FNPbbDBBq+99lplxzLwnQkKlSk5PvXUU/Pz6quvPv7448tL2X1hxx13zDv4gwYNOuqoo8r0
uh3079//7LPPTnW33HJLVhmaNGlSZdWTJ08eP358ZUo3j4cMGZISsnfC888/XxaVpY0mTJhQ
npYHWSeqPC4OEoY58sgjw5sAw4ILLlh1tTunX3zxxXbbbbfAAgtcfvnl3Smn/vdeeOGF88wz
T+JD48aNK2rfZpttZp999h/84AfF6Z///OdFvvwkslX/5pU1phl5aptvvnnLx1rmcUCAAAEC
BAgQaFaBBBXEFZr14epX4wgILTTOs9ASAgQIECBAoD2BjJNecsklCQlkA4BMYthkk00OO+yw
zDxYZZVVZp111nJgtywisxayW0CWkz722GNXWmmlAw88cI899lhmmWWuv/76WWaZJQPE9V8N
qWhbJi5kLkVeaU/YI7MrsqVzhu/zM21LRyoDIWVfunyw4YYbDh48OO+orrjiirvvvvu2226b
/8SK5A033NCyzK9+9auBzeYKJ5544tFHH51pInPMMcevfvWrbD195ZVXtszfnZQMu+dBvPXW
WyeffHJ3yqn/vWeddVbmKGRJq8IwC1vdeOONWXIqEaMPPvgg7bnsssuyclc+F110Uf2bV9Z4
/vnnJ4Z0++23F6GsMt0BAQIECBAgQIAAAQIEekTAgkg9wqgQAgQIECBAoB4C3/72t9ddd92s
iZSlhLI4Uj5FrRkBb/Wd+uOOO26NNdbIWPmTX36SOZGG1VZbLYO/Q4cOrUeL26jj8MMP33TT
Tffbb79HHnnk2muvLXN9+XJVT87aTvgkmyXstddeY8eOveKKK1LR9NNP/41vfKOYzVDWm4PM
Y0jIIa+6V24xnTkWu+66609+8pOvfOUrlZm7f7zqqqsuvvjir776amIq3S+tniVkHsCjjz46
cODAjTbaKPUu+eUn82ASMUrIKinhLUbzt9hii3o2rKqutPPiiy/O7JDEb6ouOSVAgAABAgQI
ECBAgED3BfpZabH7iEogQIAAAQIE6iyQl8TzRnYGwTP2naBCBr6zH0A7bfjHP/6R4eCsj58X
8xOHaCdnnS/lPffsu/DKK68kBpDVgRLwqMWWBqklC0nlPfpYZZ5EZn601c0sSpvX8BOHiPBi
iy2WYfNMemgrczfTU0VGvRdaaKFultPO7Vltafjw4euss859993XTrbOXsq8mTBmWaTixixj
9dBDD6233nr5NhYpzz33XP7GLrbs7mzhbeVPjQlgjBw5MkGptvJUpScCN2zYsMSusvZU1SWn
BAgQIECAAAECBAgQ6KaA0EI3Ad1OgAABAgQIECDQoAJFaCHxpGJBp4RtMjOjQdvaWrMStEhM
qLiy/fbbv/HGGx0PLeTehFWycFM28a7adLq1qqQRIECAAAECBAgQIECgcwIWROqcl9wECBAg
QIAAAQK9SyATVooJBFmw6P333+9Fjc/m21nRq2sNzm4Z2YU7K1yJK3QN0F0ECBAgQIAAAQIE
CLQvILTQvo+rBAgQIECAAAECvVVg4YUXzs7VZetnnHHG8rhXHGQ1qsw8qGxqVs2qPG3n+Jhj
jsnaX9lcpJ08LhEgQIAAAQIECBAgQKDLAhZE6jKdGwkQIECAAAECBAgQIECAAAECBAgQIECA
QF8UmK4vdlqfCRAgQIAAAQIECBAgQIAAAQIECBAgQIAAga4KCC10Vc59BAgQIECAAAECBAgQ
IECAAAECBAgQIECgTwoILfTJx67TBAgQIECAAAECBAgQIECAAAECBAgQIECgqwJCC12Vcx8B
AgQIECBAgAABAgQIECBAgAABAgQIEOiTAkILffKx6zQBAgQIECBAgAABAgQIECBAgAABAgQI
EOiqgNBCV+XcR4AAAQIECBAgQIAAAQIECBAgQIAAAQIE+qSA0EKffOw6TYAAAQIECBAgQIAA
AQIECBAgQIAAAQIEuirQv6s3uo8AAQIECBBoWoF33nnnr3/964ILLrjsssvOOOOMU+3npEmT
7r333spsa6yxxtxzz12Z4pgAAQIECBAgQIAAAQIECBBoGgGhhaZ5lDpCgAABAgR6TGDUqFFb
bbVViptzzjkvuuiibbbZpv2iR48e/c1vfrMyz8iRIzfddNPKFMcECBAgQIAAAQIECBAgQIBA
0wgILTTNo9QRAgQIECDQYwJLLrnk3nvvfdNNN7399tt77bXX3//+95lmmqmd0ueZZ55DDz20
yHDhhRdOmDChncwuESBAgAABAgQIECBAgAABAr1doN+UKVN6ex+0nwABAgQIEKiFwOeffz5k
yJDEFW644Yatt966g1UstdRSL730klkLHeSSjQABAgQIECBAgAABAgQI9EYB2zj3xqemzQQI
ECBAoB4C008//Zprrpma3nzzzXrUpw4CBAgQIECAAAECBAgQIECglwgILfSSB6WZBAgQIEBg
WggMHjw41Y4ZM2ZaVK5OAgQIECBAgAABAgQIECBAoEEFhBYa9MFoFgECBAgQaASBAQMGpBmf
fvppIzRGGwgQIECAAAECBAgQIECAAIEGERBaaJAHoRkECBAgQKARBeaYY440a/LkyY3YOG0i
QIAAAQIECBAgQIAAAQIEppGA0MI0glctAQIECBDoDQLFgkjjxo3rDY3VRgIECBAgQIAAAQIE
CBAgQKBOAkILdYJWDQECBAgQ6I0CK620Upr96KOP9sbGazMBAgQIECBAgAABAgQIECBQIwGh
hRrBKpYAAQIECDSDwPrrrz9o0KDHHnvs/vvvb4b+6AMBAgQIECBAgAABAgQIECDQEwJCCz2h
qAwCBAgQINCkAgMHDrzwwgunm266Lbfccv/993/uueeatKO6RYAAAQIECBAgQIAAAQIECHRC
QGihE1iyEiBAgACBPiiwww47ZMpCv379zjvvvExf6IMCukyAAAECBAgQIECAAAECBAhUCQgt
VIE4JUCAAAECBP5J4PXXX//+978/ceLEmWeeefbZZ/+na04IECBAgAABAgQIECBAgACBPikg
tNAnH7tOEyBAgACBDgvsuuuu2cb5kEMOSXQhyyJ1+D4ZCRAgQIAAAQIECBAgQIAAgaYVEFpo
2kerYwQIECBAoPsCzz777H333TfPPPOccsop008/ffcLVAIBAgQIECBAgAABAgQIECDQBAJC
C03wEHWBAAECBAjUSuCee+5J0RtttFH//v1rVYdyCRAgQIAAAQIECBAgQIAAgd4mILTQ256Y
9hIgQIAAgToKjB07NrXNO++8daxTVQQIECBAgAABAgQIECBAgECjCwgtNPoT0j4CBAgQIDAN
BcaPH5/aBw0aNA3boGoCBAgQIECAAAECBAgQIECg0QSEFhrtiWgPAQIECBBoIIGPP/44rZlu
On8wNNBD0RQCBAgQIECAAAECBAgQIDDNBYwUTPNHoAEECBAgQKBxBSZOnJjGzTnnnI3bRC0j
QIAAAQIECBAgQIAAAQIE6i5gS8a6k6uQAAECBAj0HoHRo0ensVPda2Hy5MlPPfVU0a2PPvqo
9/RPSwkQIECAAAECBAgQIECAAIGuCAgtdEXNPQQIECBAoLkFEh4YNWrUdddd98ADD2Q1pDXX
XLP9/j7//PNrrLFG+3lcJUCAAAECBAgQIECAAAECBJpGQGihaR6ljhAgQIAAgR4T+NOf/rT5
5psXxe2xxx5Dhgxpv+jBgwcPHz68Ms8CCyxQeeqYAAECBAgQIECAAAECBAgQaCaBflOmTGmm
/ugLAQIECBAg0H2Bxx9//IQTTlhooYXWWmutXXbZpfsFKoEAAQIECBAgQIAAAQIECBBoJgGh
hWZ6mvpCgAABAgQIECBAgAABAgQIECBAgAABAgRqLjBdzWtQAQECBAgQIECAAAECBAgQIECA
AAECBAgQINBEAkILTfQwdYUAAQIECBAgQIAAAQIECBAgQIAAAQIECNReQGih9sZqIECAAAEC
BAgQIECAAAECBAgQIECAAAECTSQgtNBED1NXCBAgQIAAAQIECBAgQIAAAQIECBAgQIBA7QWE
FmpvrAYCBAgQIECAAAECBAgQIECAAAECBAgQINBEAkILTfQwdYUAAQIECBAgQIAAAQIECBAg
QIAAAQIECNReoH/tq1ADAQIECBAg0JMCDz744EcffbTMMssstNBCPVmusggQIECAAAECBAgQ
IECAAAECHRMwa6FjTnIRIECAAIGGETjssMM23njjhRdeeIcddpg0aVLDtEtDCBAgQIAAAQIE
CBAgQIAAgb4iMP2///u/95W+6icBAgQIEGgKgU8//XTChAmvv/76s88+O2jQoHXWWacpuqUT
BAgQIECAAAECBAgQIECAQK8R6DdlypRe01gNJUCAAAECBP6fwPnnn7/ffvutuuqqjzzyyP9L
878ECBAgQIAAAQIECBAgQIAAgXoIWBCpHsrqIECAAAECPS6w7rrrpsw333yzx0tWIAECBAgQ
IECAAAECBAgQIECgfQGhhfZ9XCVAgAABAg0qMHjw4LRs7NixDdo+zSJAgAABAgQIECBAgAAB
AgSaV0BooXmfrZ4RIECAQFMLDBgwIP37/PPPv/jii6buqM4RIECAAAECBAgQIECAAAECDScg
tNBwj0SDCBAgQIBARwTmmGOOItvkyZM7kl8eAgQIECBAgAABAgQIECBAgEBPCQgt9JSkcggQ
IECAQF0F+vfvP+uss6bKcePG1bVilREgQIAAAQIECBAgQIAAAQJ9XkBooc9/BQAQIECAQK8V
WGmlldL2Rx99tNf2QMMJECBAgAABAgQIECBAgACBXikgtNArH5tGEyBAgACBCGy77bb5ee65
52bHBSAECBAgQIAAAQIECBAgQIAAgboJ9JsyZUrdKlMRAQIECBAg0IMCn3zyyXrrrfeXv/xl
nXXW2XnnnQ8++OAeLFxRBAgQIECAAAECBAgQIECAAIG2BIQW2pKRToAAAQIEeoHARx99tN9+
+1166aXLLbfcs88+2wtarIkECBAgQIAAAQIECBAgQIBA7xewIFLvf4Z6QIAAAQJ9WOCcc865
6qqrAjD//PP3YQZdJ0CAAAECBAgQIECAAAECBOoqYNZCXblVRoAAAQIEelBg5MiRm2+++YIL
LnjrrbeuuOKKPViyoggQIECAAAECBAgQIECAAAEC7QiYtdAOjksECBAgQKChBS644ILsmXT4
4YeLKzT0c9I4AgQIECBAgAABAgQIECDQdAJmLTTdI9UhAgQIEOgzAlkE6e23337mmWeGDh3a
ZzqtowQIECBAgAABAgQIECBAgMC0FzBrYdo/Ay0gQIAAAQJdEMh8hXfeeSc3zjvvvF243S0E
CBAgQIAAAQIECBAgQIAAgS4LCC10mc6NBAgQIEBgWgpMmjTp888/TwsGDRo0LduhbgIECBAg
QIAAAQIECBAgQKDvCQgt9L1nrscECBAg0BQCH3/8cdGP6abz/+ZN8UR1ggABAgQIECBAgAAB
AgQI9B4BgxG951lpKQECBAgQqBCYOHFizjJloV+/fhXJDgkQIECAAAECBAgQIECAAAECNRcQ
Wqg5sQoIECBAgEAtBEaPHp1ibbRQC1tlEiBAgAABAgQIECBAgAABAu0L9G//sqsECBAgQIBA
owm88cYbI0eOPOOMM9Kwtddeu9Gapz0ECBAgQIAAAQIECBAgQIBA0wv0mzJlStN3UgcJECBA
gEAzCSSc8OCDD6ZHs88++7333rvSSis1U+/0hQABAgQIECBAgAABAgQIEGh8AbMWGv8ZaSEB
AgQIEPgngQ033HDJJZdcZpll9thjj8UWW+yfrjkhQIAAAQIECBAgQIAAAQIECNRewKyF2hur
gQABAgQIECBAgAABAgQIECBAgAABAgQINJGAbZyb6GHqCgECBAgQIECAAAECBAgQIECAAAEC
BAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQ
IECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHq
CgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAAB
AgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQI
ECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVA
gAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECA
AIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAEC
BAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4Q
IECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBA
oIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAAB
AgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQI
ECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQ
qL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECA
AAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgEC
BAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSa
SEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBA
gAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAAB
AgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHa
Cwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQ
IECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECA
AAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkE
hBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQI
ECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBA
gAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A
0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAEC
BAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQ
IECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBo
oYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAAB
AgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQI
ECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt
1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECA
AAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAEC
BAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa
6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBA
gAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAAB
AgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELt
jdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQ
IECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECA
AAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYke
pq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQI
ECBAoIkE+jdRX3SFAAECBAgQIECAAAECBAgQaFOgX79+bV5zgQABAgQIECDQGQGzFjqjJS8B
AgQIECBAgAABAgQIECBAgAABAgQIEOjzAmYt9PmvAAACBAgQIECAAAECBAgQ6EsCU6ZM6Uvd
1VcCBPqiwE033ZRuDxs2rC92Xp8J1F6gmAdp1kLtpdVAgAABAgQIECBAgAABAgQIECBAgAAB
AgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQI
ECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVA
gAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECA
AIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAEC
BAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4Q
IECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBA
oIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQqL2A0ELtjdVAgAABAgQIECBAgAAB
AgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECAAAECBAgQIECAAIHaCwgt1N5YDQQI
ECBAgAABAgQIECBAgAABAgQIECBAoIkEhBaa6GHqCgECBAgQIECAAAECBAgQIECAAAECBAgQ
qL2A0ELtjdVAgAABAgQIECBAgAABAgQIECBAgAABAgSaSEBooYkepq4QIECAAAECBAgQIECA
AAECBAgQIECAAIHaCwgt1N5YDQQIECBAgAABAgQIECBAgAABAgQIECBAoIkE+jdRX3SFAAEC
BAj0RYHPP/989OjRL7/88pAhQ5Zeeum+SKDPBAgQIECAAAECBAgQIECAQH0FzFqor7faCBAg
QIBAjwo8++yzK6+88jLLLLP55ptfdtllPVq2wggQIECAAAECBAgQIECAAAECrQuYtdC6i1QC
BAgQINArBEaMGPH000/PPPPM3/jGNzbaaKNe0WaNJECAAAECBAgQIECAAAECBHq7gNBCb3+C
2k+AAAECfVdg/PjxI0eO7Nev36hRo5Zddtm+C6HnBAgQIECAAAECBAgQIECAQH0FLIhUX2+1
ESBAgACBnhN48803p0yZMvfcc4sr9ByqkggQIECAAAECBAgQIECAAIGpCwgtTN1IDgIECBAg
0JgCY8aMScPmnHPOxmyeVhEgQIAAAQIECBAgQIAAAQLNKiC00KxPVr8IECBAoPkFPv3003Ry
wIABzd9VPSRAgAABAgQIECBAgAABAgQaSUBooZGehrYQIECAAIHOCHz44YfJPsccc3TmJnkJ
ECBAgAABAgQIECBAgAABAt0VEFrorqD7CRAgQIDAtBIYN25cqh48ePC0aoB6CRAgQIAAAQIE
CBAgQIAAgb4pILTQN5+7XhMgQIBAMwg8+eST6caKK67YDJ3RBwIECBAgQIAAAQIECBAgQKD3
CAgt9J5npaUECBAgQKBCYOzYsVdddVUStt1224pkhwQIECBAgAABAgQIECBAgACBmgsILdSc
WAUECBAgQKBnBT744IMjjjhi9dVXf/vtt0eMGLHGGmv0bPlKI0CAAAECBAgQIECAAAECBAi0
L9C//cuuEiBAgAABAo0mMGHChFNPPTWtOvvssw844IBGa572ECBAgAABAgQIECBAgAABAk0v
YNZC0z9iHSRAgACBZhPo37//XHPNlV4dd9xxd911V7N1T38IECBAgAABAgQIECBAgACBhhcQ
Wmj4R6SBBAgQIEDgnwXmnXfed95558orrxw3btxOO+2UZZH++bozAgQIECBAgAABAgQIECBA
gEBtBYQWauurdAIECBAgUCOBXXbZZcstt0x04dprr61RFYolQIAAAQIECBAgQIAAAQIECLQq
ILTQKotEAgQIECDQCwQ222yztPKee+7pBW3VRAIECBAgQIAAAQIECBAgQKCJBIQWmuhh6goB
AgQI9DGBrIyUHo8ZM6aP9Vt3CRAgQIAAAQIECBAgQIAAgWksILQwjR+A6gkQIECAQJcFBg0a
lHvHjx/f5RLcSIAAAQIECBAgQIAAAQIECBDogoDQQhfQ3EKAAAECBBpCYLrp/vf/xz/++OOG
aI1GECBAgAABAgQIECBAgAABAn1GQGihzzxqHSVAgACBphOYc84506eJEyc2Xc90iAABAgQI
ECBAgAABAgQIEGhoAaGFhn48GkeAAAECBNoRmG+++XJ17NixH3zwQTvZXCJAgAABAgQIECBA
gAABAgQI9KyA0ELPeiqNAAECBAjUT2DBBRdcbLHFsiDS8OHDb7rppgkTJtSvbjURIECAAAEC
BAgQIECAAAECfVhAaKEPP3xdJ0CAAIFeLpC9Fo455ph+/fpde+21W2+99WmnndbLO6T5BAgQ
IECAAAECBAgQIECAQO8Q6N87mqmVBAgQIECAQGsCe++997LLLnvzzTePHj16+eWXby2LNAIE
CBAgQIAAAQIECBAgQIBADwsILfQwqOIIECBAgECdBdb98lPnSlVHgAABAgQIECBAgAABAgQI
9GUBCyL15aev7wQIECBAgAABAgQIECBAgAABAgQIECBAoNMCQgudJnMDAQIECBAgQIAAAQIE
CBAgQIAAAQIECBDoywJCC3356es7AQIECBAgQIAAAQIECBAgQIAAAQIECBDotIDQQqfJ3ECA
AAECBAgQIECAAAECBAgQIECAAAECBPqygNBCX376+k6AAAECBAgQIECAAAECBAgQIECAAAEC
BDotILTQaTI3ECBAgAABAgQIECBAgAABAgQIECBAgACBvizQvy93Xt8JECBAgACBdgQmTpx4
ww03fOc73ynyTJo06brrrhs+fHg7txSXnn322Ztvvvnll1+ea665vvLlZ/nll5/qXVPN8Oij
j/7jH/+ozLbeeuvNNttslSmVx++///6f/vSnypT55ptvtdVWq0xxXCVwxRVXPPfccwceeOC8
886bS1dddVWe5ve///3QVeWcJqd33333hx9+WFY9dOjQIUOGlKftHLz33nvpyPjx47faaqt2
srlEgAABAgQIECBAgAABAh0U6DdlypQOZpWNAAECBAgQ6DsCGV/edtttv/71r19yySXp9fPP
P7/ddttlXP6yyy5rHyEZ9tlnn08++aTMlsHf0aNHl6ddPth5551/97vfVd7+2GOPrbzyypUp
lccZSq4KaaQL1157bWUex5UCCd6suuqqSdl0001Hjhz51FNPrbjiijndaKON7rzj8z1dAABA
AElEQVTzzsqc0+p4qaWWeumll8raTz311B/+8IflaVsHxx577M9+9rPPP/88GfJzuulM222L
SjoBAs0v0K9fv3TSOEDzP2k9JNDnBW666aYYDBs2rM9LACBQE4HiLwqzFmqCq1ACBAgQINDb
Bbbccst11123iCukL3nXe4011phqXCERhR/96Ef5mXsPOOCA6aef/plnnll88cV7ROOb3/zm
wgsvXBR15plnVkYvWi1/zjnnPPTQQ4tLjzzyyD333NNqNomlQJ5XcRyrTz/9tByCz+SPjz76
aMYZZyxzTtuDbbbZZpFFFkkbvvrVr061JQ8++ODxxx+fbJnisMUWWxR/AU/1LhkIECBAgAAB
AgQIECBAoH0BoYX2fVwlQIAAAQJ9USCzAbKc0WKLLZb31rOg0RNPPJFXxRdaaKHitB2RBBLe
fPPNWWaZ5fbbb59pppnaydmFS3vssUd51wUXXDDV0ELW8DnttNOKW04//XShhVKvrYOVVlop
CyIdfPDByy233AwzzJA5H1kQKYsjZa5A48QV0vi0MPMq2upFVfrVV1+dlF133TVdq7rklAAB
AgQIECBAgAABAgS6LGA+eJfp3EiAAAECBJpW4KGHHkrfsq79XnvtlYO8952feXX9e9/7Xvt9
TlwhGTJNocfjCu3X62pPCWywwQYffPDBt771raLA4nSHHXboqfLrX84bb7yRSjONpv5Vq5EA
AQIECBAgQIAAAQJNLGDWQhM/XF0jQIAAAQJdFCjWjclCzAMGDEgRWRwpy8jkNG+yt1ri/fff
/9lnn+VSDooMlVMEsnbNEkss0eqNH3/8cdb3HzVq1Kuvvpp35LPQfyZJNMKSNX//+98ffvjh
tG3mmWdOq772ta9leaWqLmRP6WxBUWxVXXWpPH3hhRcSbsmEj7z4XyaWB08//XRqyVSPXM22
Fpk0UF5qeZD9KtKqsqg//vGPQU4IZ5111slaVW3NKsjGxX/4wx9ee+21t99+O8tJZTrCsssu
m9hPufZRZUVpz2abbTZixIh/+7d/S/rf/va3jTfe+KCDDjrssMMqs7V6nHkteY5bb711Wy1p
9a46JI4ZMya1tHx8dahaFQQIECBAgAABAgQIEGhiAaGFJn64ukaAAAECBLookKHnv/71rzfe
eOOee+6ZIhZddNGMgN9www2VSxJVFp1QxPvvv1+mZIR6ww03LE8zMP3zn/+8PC0Pkm2nnXbK
ZstlSg5SVHZ0mHvuuSsT63n8xRdf/Pu//3t2/c1BWe9ss812/vnn77LLLmVKDjKZI2/3r7XW
Wg888EBleuXxT37yk9///vdZ6/+YY46pTJ80adK+++6b5YYqEzNHJHtItDXh49xzz82uxRno
P+WUU7KjdZ5Oee8888zz+uuvF3GgMjHBnshn5agPP/ywTCwOslxVQghViTnNElhpQDlHIc/9
V7/6VTmDoWX+MiXD94kMZYmqNKyqU2WeaXWQTSNSdRXOtGqMegkQIECAAAECBAgQINA0AkIL
TfModYQAAQIECPSkwGpffsoS8+Z+PuVp1UHGxLPNbxLzFn+WUZp//vmz0W6ZZ8011yyPy4O8
dJ88GfXOG/cJMCy55JLZ4OHiiy/OK/bZmzezHzKuXWau20FmZmSz6LRh4MCBGfpP2CAhkzvu
uON3v/tdFuvP9IJiQ+CiPcVEhMwkaKd5GfHP1aWXXroyz8SJE9Pr5557bsEFF8y2AdleOG4J
G/zmN7/JRIF777233D+58q7yePjw4YkrzD777Nlv4L333kuEY7fddms5dJ7Vqy6//PK8rZ9Q
QaZEZDpI5i5kt4z0oq3VgWadddYyrpDqMmOjI3GF5Ew3i60vMrWibGeDHBSRlTnmmKNB2qMZ
BAgQIECAAAECBAgQaA4BoYXmeI56QYAAAQIEpqXAL3/5y6L6Sy+9NKGFjLmfd9557TTo888/
z5B6xnwTVMjwdzEsvv322++///6bb775k08+edRRR2XuQjsl1OjSlVdembhC5ijcdNNN66+/
flHLv/7rv+Y40wX+4z/+Y/fdd8+CQkV6wiE5yLJImR/Qv3/rf1MVgYeq1ZBOPvnkxBUSu0nQ
YtCgQUVpCV2svvrqmQARw+9+97tFYsuft9xyS4bvo5cdqov1qbKoVPFifmXmLH8U2GT485//
XFV7ZbaeOk7YKZ3KFh0/+tGPeqrMnipn3LhxKWrw4ME9VaByCBAgQIAAAQIECBAgQCACtnH2
NSBAgAABAgTqLZDX87MOUkbwf/3rX1e+br/AAgtk2Z+05re//W0mMdS5WRmgT0gjlWazgTKu
ULThwAMPzApCCSH8+Mc/Lls1yyyzpMEJkyS6UCZWHuTSW2+9lZTKWQvZVfj0009P4kUXXVTG
FXKajRAyOp+Dn/70p/nZ1idxhSyydMYZZ5T7XmSCRWYbVOXP1ISkZKGkIv5RdbUWp0ceeeS1
116b6RG1KLzLZb7zzjt5BPmOlQGhLhflRgIECBAgQIAAAQIECBCoFBBaqNRwTIAAAQIECNRD
IDMDUk02cmi5TM3aa6+dxYKyMNFtt91Wj6ZU1JHFiF555ZUsRpQJChXJ/3d4yCGH5CgtT9vK
q1VrImUT4+yUsMIKKxR5EnJIdCHj+5XdvO+++7J4VPa1XnHFFctyioNi/4NMdMiAeNWl8nS9
9dY78cQTy9O2DlZeeeXshp0dpE866aRiqaK2cjZ3+jnnnJOA0CabbJI4UHP3VO8IECBAgAAB
AgQIECBQZwGhhTqDq44AAQIECBD4lxdeeCEKGf5u1aLY1KHI02qGGiUWNWYiwrzzztuyiqJV
kydPzrSD8moxHaFY9Si333zzzQkbZMZAETtpdaOFopYEDxJBqfpst912RcnZeqGsouqgiBlU
JbY8zRYLxx13XNKPPvrobH2RFZayXUT2jm6Zs1lTsnLUjjvumCkgoTjrrLOatZv6RYAAAQIE
CBAgQIAAgWklILQwreTVS4AAAQIE+q7Aiy++mM4vtthirRIU6UWeVjPUKLH9ViXeMOOMM6bq
yoZVzlo4++yzM1mh2GzgzDPPTM5WQwsvvfRSLiUCkUkSLT9ZJCqf7JTQ/T4ec8wxWVdqueWW
Gz9+/CWXXLLzzjtn1+gDDjignbhF9yttnBKuu+66a665ZpVVVsnO1UOGDGmchmkJAQIECBAg
QIAAAQIEmkNAaKE5nqNeECBAgACB3iSQVYPS3Ayvt9roIr3I02qGGiW236osbVTsllzZsDK0
8MEHH2TvhMx4OP7449daa63MWkgIoQgtVO2inMhB2r/DDjtMbPuTHa17pI+77bZb9rTIrhWZ
wTB06ND3338/W1lkO4SHH364R8pv5ELmnnvu6aefPn0/7LDDsiZSIzdV2wgQIECAAAECBAgQ
INAbBYQWeuNT02YCBAgQINC7BYrR9mxs0Go3Xn755aRXbn3carYeT2y/VVn1KNGFqoYVtySE
cPnll0+YMGHffffN7srf//73v/jii0xiaHXWQqYRpJCM+Pd4+9sqMGsoZV2gLNP0wAMP5Pi9
997bZZdd2srcNOnZZGLMmDHZjvvKK68s1oZqmq7pCAECBAgQIECAAAECBBpBQGihEZ6CNhAg
QIAAgb4lUIQN7rjjjpbdzsyAO++8M+n1Dy0UNb777rujRo1q2bBiW+ks3J9PeXXJJZfMcaIO
WQGpf//+CS3kdKeddsor85nE8Nxzz+W0qiNFaCED/fXfTCLTKS699NI0qZxRkeMm/uRJnX76
6engBRdcULn5dhN3WdcIECBAgAABAgQIECBQNwGhhbpRq4gAAQIECBD4P4E999wzRzfeeGPL
l/ezPUBe9p9lllkyQF9nr0xBWHvttVPpKaecUlV1VtT5+c9/nsTsh1x5afbZZ88eDAlFZEH/
bMKczQxydeDAgXvvvXd2OMhOwjmtCi3kPfoVVlghEZQRI0ZUFlWf4zRmwIABqWu66frEH4HZ
fHuuueZ66623+sgOE/X5FqmFAAECBAgQIECAAAECEegT/1XpSRMgQIAAAQINJbDZl5+8SL71
1luPHj26bFvmMRx00EE5PfTQQ+eff/4yvW4Hp556auq6+uqrs2VCWWn2fthxxx3zpv+gQYOO
OuqoMr04SECiWCjpwAMPLC/tv//+GbvPskjzzTdfsblCeSmTG7JWUk4TeMjCRJMmTSov5WDy
5MmJSVSmdPk4cymq7k2A5Mgjj/zkk08SYCiiIFUZunyaniaykq0msjBUlwup0Y3zzDNPSs7i
SDUqX7EECBAgQIAAAQIECBDomwL9+2a39ZoAAQIECBCYtgJnnXXWN7/5zSwK9NWvfnWDDTbI
YPcjjzySzQDyOn/iDkcccURHmpfh7EwRSM4MlBfLKLV/V0IXxXpE/x97bx54xfj+//+SRCKF
VirtG+1Ji9JiaY+KVKK8VaTFUkR2iexJtrIUkhapVKJFQrRq0UYqSiqUVuL9e3zc7++85z0z
Z15nP3PO63n+qHvuuZfrfsyc15m5rvu6LpoRi59cyo72eC2QluDBBx+89957J02a1LBhQ1T/
CxYsQE2PI8WYMWPs0ZBMX0wLiI0jQuPGja3RSpYs2aJFixkzZphkDFa9KeC4gGMEVgpsGPPn
z69fvz7LBwWuDxgw+vXrZ8L4OHpFeghYPCpgW6xYMawjCLlkyZJDhw5h6iD9QKSj+bdn8GnT
ptFm+PDhXbt29W+c5LMYhJgxXgabJAuv6URABERABERABERABERABEQgsARkWgjspZFgIiAC
IiACIpDJBFCmL126lN39kydPJjKSWWrevHlRuA8dOjTMcD1WImhU5+HAOnDggMl/QOP9+/d7
diHlb506dfr06bP6nw9tcuTIUbNmzXHjxlWsWNHdxRgPaO84RTJnTAss01FvDm+//fZmzZr1
6tULg8rUqVOtNhgD+FiHURfIKc3U2BLsIadwmOjcufOQIUOqVKkS9cieHYk7hDVl69atbmuN
Z/tkVpp76ejRo8mcVHOJgAiIgAiIgAiIgAiIgAiIQMYTyKGkdhl/jbVAERABERABEQgyAeLz
rF27FiNBpUqV0IaHaVRIwop27ty5YsWKPHnysP0/X758CZrx4MGDZvn4QxBQCOtFHAkQBQhn
iN27dxOyqUSJEiSdzp8/f4IWwhSkNMBDIkHjm2Ex5ODYMXfuXAwzYU5E0C1sPGRyJgFGmF3U
TAREQAQymAD2clYnPUAGX2ItTQREwBDgCZBCq1atBEQERCARBMwThbwWEsFWY4qACIiACIiA
CIRLgKzC6O75hNshWe1Q9PNJ9GzEWcJJgk8iJoqXD0Q4suXMmTPRdgVLDOJTGe8T8ii4Q1RZ
zUyBdBcUtmzZ4qjXoQiIgAiIgAiIgAiIgAiIgAiIQCwElMY5FnrqKwIiIAIiIAIiIAIikGwC
PXr0IGcGn7Fjx2Y5N/kzaPPSSy89/vjjOIhk2V4NREAEREAEREAEREAEREAEREAEwiGggEjh
UFIbERABERABERABERCB1BMgOQdhlyw5rr32WlJ5W4eeBfJwVK1adePGjeYsgZviGHLKc0ZV
ioAIiECQCSggUpCvjmQTARGIIwEFRIojTA0lAm4CCojkZqIaEUg4gVWrVr333nsLFy7csWPH
jz/+SELRhE+pCbwInHLKKUX/+TRq1Ai1FFonr1aqEwEREAERCBaBF154IVKBTjzxxOXLl5Nr
Yc2aNb/++qt5Ao50ELUXAREQAREQAREQAREQAREQARFwEJDXggOIDkUgUQSwKAwZMuSbb75J
1AQaNwYC5E0dNmxYlltfY5hBXUVABERABERABERABEQg9QTktZD6ayAJREAEkkJAXgtJwaxJ
si8B80ShXAvZ9w7QypNGYNu2bQ0bNmzfvr3sCkljHulEXBouEJeJixVpX7UXAREQAREQAREQ
AREQAREQAREQAREQAREQgexGQKaF7HbFtd5kE1i8eHHt2rU//fTTZE+s+SInwGXiYnHJIu+q
HiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiKQjQjItJCNLraWmnwCKKmbNm36888/J39qzRgd
AS4Wl0zWhejoqZcIiIAIiIAIiIAIiIAIiIAIiIAIiIAIiEA2ISDTQja50FpmCggQWufyyy8/
evRoCubWlDEQ4JJx4RQZKQaE6ioCIiACIiACIiACIiACIiACIiACIiACIpDhBGRayPALrOWl
kECXLl3kr5BC/rFMzYXj8sUygvqKgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIQAYTkGkhgy+u
lpZKAu+9957yK6TyAsQ8N5ePixjzMBpABERABERABERABERABERABERABERABERABDKQQI5/
//vfGbgsLUkEUk2gUqVK33zzTaql0PwxEahYseK6detiGkKdRUAEwiAwbdq0mjVrnnXWWabt
9OnTq1atWrx48Sy7YgKcM2dOnz59ihYtmmVjR4PPP//8119/ZaJixYo5TnH41ltvbdiw4aab
bipYsCCHEyZM4E/6jTfeWKhQIXfjJNeEievAgQOffPKJXTaEh7O9JoXlP/74A/Pt6tWrd+7c
Wb58+QsuuKBBgwY+8qxcuZJrvXXr1mPHjpUpU6ZGjRrNmjUL1Z6LtWXLlpIlS/JbHKqNu373
7t0ffPDBxo0bEenUU0+tUKECqXfKli3rbulfs2fPni+//DJPnjyNGzf2bxnF2Vju+Sim8+nC
tRg9evSFF17YokULmm3fvn3UqFENGzZs2bKlTy+dEgERCAKBHDlyIIb0AEG4FpJBBEQgoQRm
zJjB+K1atUroLBpcBLItAfNE8X+PFPqIgAjEl8CKFSuy7V+WDFs4lzK+94ZGEwERsBP4+++/
77vvPlTeX3zxBfUcPvDAA2jz0fvbm3mW0U2ffvrp/M3p3r27ZwP/yvr169N33Lhx7mbLly83
f8pQXnMW9bc5vOiii9yNk1kTES63ZbRdu3bJlNZnLghXqVLFULX+7dSpE8HoPHvdc889VjOr
ULdu3WXLlnm2HzBgAM1uvvlmz7Oeldg5jjvO6cubK1euQYMGHTlyxLNLqMq5c+cye+nSpUM1
iLo+xns+6nk9O7Zp08ZcC6wdNLjiiivM4cKFCz3bq1IERCA4BMy3NTjySBIREAERSBABdizx
SdDgGlYERMA8URxv/tO/IiACcSSgQDpxhJnaodgdXK1atdTKoNlFIIMJoNnHlrB+/XqzN/zN
N9+899570YmzYTzLVaP2ZVv63r17S5UqlWXjiBrkzJnTtEdJ+ueff1oaZ5wA0DKfeOKJEY0W
x8YR4SpQoMAtt9xiZkcFz1riKEksQ+3ateuSSy7BRYDL179/f7xVsDQ8++yzEydO3LFjx4IF
Cyz+1ix4peBGhmmkXLly+JrMmjWLa4E5inGWLl1aokQJq2XUhSJFiuCpcNlll9WuXZvpfvjh
h0mTJjHFY4899tdffz3++ONRjxzHjom756MQ0rpMmFIw1FmHOJfgyhDFgOoiAiIgAiIgAiIg
AiIgAiKQdgRkWki7SyaB04CAIwZFGkgsEUMQCI4yLoSAqhaB9CYwZcqU3Llzs5mIbeZo8M3h
zJkz0SBbCn2fFS5evJjQN3G3/5133nkERGLPOxYOlLkE1SEgEsGRiMOTQrsCHCLChS/IE088
Yeg99dRTwflrNnjwYOwKmAqIGpQ3b14k7NChw9VXX12nTh32vz/33HPYGxwXvUePHr169bIq
Bw4ciEnp/PPP//bbb7lzpk6dap2KukCoKHwmuNzWCBhmuAcI8vPkk0927do17reZNVFEhQTd
8xHJYBpjDQIXBiETyYp7DIfod955h5hIUYymLiIgAiIgAiIgAiIgAiIgAulIwOn6nY5rkMwi
EDQCP/74Y9BEkjzREdCljI6beolAmATYFX748OFbb7119uzZdCEOEm4Bt912G9vSwxkBs0SC
FL6NGjU6ePCgFePFHF5++eXhSJW4NjHiSpxgEY08b9482t99993GrmD6Eh+pW7dulE00IceA
do2/OUUsLGOBwBrhaBzdIZvuHbOgKB8xYsRJJ52Ep3O8ZolONnuvxN3z9lnCKeNugvmKC8G3
g/a4ehQuXPi0005r0qRJON3VRgREQAREQAREQAREQAREIAMIyGshAy6ilhA4AoR0CJxMEigq
ArqUUWFTJxEIlwDxZ1577TVan3DCCfxLAtgxY8ZQcCh5qbE+KHkJUGMdUmD/u0m2bK+0l7Fe
fPbZZ2z3Pvnkk0kXXKtWLTOdvY29vHbt2ubNm7Md3iivideEtrRv376YQOzNPMvsoye8T+vW
rRPh3xAFLk8hs6zct28fLgWEUTp69CgBggh3ky9fPp9eNCMzDQsntS9OHuRYxlTwn6Re/9sN
NT3OAdRZWbut86aGFMpWjX/BZNogPhIZCPwv6LZt23DaWLNmDfkPuMc8E3d7zoVdgRTTZJDm
lvBsQCVXfNGiRST9rl69er169dzrcncMH5fpG8U9T0fIYLFj7USgQipccFgLQaisyEWWYJs2
beLH7uyzz3bHFvv6668Zh46YDaz2ptCvXz+yXhPAynxbcSUhhCCH/tfCMYgORUAEREAEREAE
REAEREAE0pqATAtpffkkfEAJHDhwIEzJULKE2VLN4kvAU+flniL8S+nuqxoREIEsCRBtBoXs
GWec0bRpUxoTYgUvBDY+kz85VF+U/ng22M+SgYB4NfYae3n79u2XXnqpPadx5cqViblkb+Mo
E7ufsDyWj0Lx4sVHjhxpeTA4GtsPUZqjWEfTfeWVVxJDyX4qLuUocEUxL/poeBJxyOpLHoK3
337bbE63Kq0CaveOHTsSmcqqoQBzrgtX1l5Jmb+9GB5wT0Ed74jIb0I2ERbJ0SXUoYk9SPQq
H102ric33HAD4a2sQUhBQRIFMnJbNf4FY2A+5ZRTPJuRg4E8z9ZPOat79NFH/T1pIsJlJo30
nj927BhmsFdeeeXQoUMOsT/88ENGc1QSy2j06NF4C+Gl4TiFwQAvE4bq2bOn49TFF19MDnZ4
mnqGxRPF2HscLXUoAiIgAiIgAiIgAiIgAiKQqQRkWsjUK6t1iYAIiIAIiEDQCeTJk4e9z5aU
HOIcYB16FlBxklrZnGKXNDuyPZuZSmL646ZAZDM0nn369EHni/vC5MmTCdPvo48mUI9lV2Ac
pArHrkBLcv9iV6Dw3XffGQHi+28UuCIV4IUXXrjxxhvRlWMdwTzAtn2C6ZPjAdvP+++/36JF
C8eAH3/8cZs2bVBhYxLAwIBbAHv88UTBPoHRCE8RDDOOLg8++CBa6YcffphLY4LnMN1DDz3E
UFiV7rrrLkd7z0PyK7z88sucIu+3ZwMq8SfgQmNbwlKCwwemYiZlFz8LRL8fTjIPRjA+Fp55
xYcNG2akBUv79u3//vtvEN15553YTkKJFAUuhoronqf9ddddN378eJT+3MYQwIOEVeO0gYHN
5EUIJV5E9a1atbK3d98b9rMqi4AIiIAIiIAIiIAIiIAIZCYBXuf0EQERiC+B8P9YxHdejRY+
AV2j8FmppQgElgCBevguszs+lIToeWnA3vnVq1dbbQjwcu6555o/Am+88YZVH5fC8OHD27Vr
R1KEuIwWr0FIRMx6Ecx/QNTop556Ki0dWNiNTmXZsmUxnNhHYHc80ag4hVGBID/WKXb6G8Lo
9K1Ke2Hp0qWEpaJj48aNyY99zjnnUEY7j23G3sxRJrAVMZfeffdd4k0Zz7PHHnvM0cYcEsyK
AfkQyYdoP1Yb1Oum/quvvrIqfQpwoD0Bf/DhcDSjhvhanMVkhVHBOssGfzMFwYWsSlOIGpd9
nCzv+Z9++snIbF+4fQR3mSXQBa8F9ylj+2FR7lOqEQERSF8C5s9U+sovyUVABEQgTALT//mE
2VjNREAEIiVgniiUxtlw0L8iIAIiIAIiIAIZRWD//v1EEGJJgwcPZuO2tTa2xs+ZM4cMtFZN
HAvMxYZ6torHccykDYU/AdDY6m4yKlvz4hmAXQFVNVYcq5LC2LFjiYNEsCAcCOxeIARQwvuB
Bm+++SZODPYuplyzZk2GIu4/ofm5Rlu2bGE3PTF5/LMg0BiHAMwYvCQyxZIlS26//Xb34FYN
WSKw8ZQpU8aqIRZWuXLlOPz++++tSp+CMS1cf/31VtgfqzExsoi2hNUKs409wh4eBvfcc4/V
zF6IGpd9kCzLJvbXmWeeiQdJlo3VQAREQAREQAREQAREQAREQARiISDTQiz01FcEREAEREAE
RCCgBFatWoWi/Pjjj0c17BARxbTRONuVwo422fBw7ty5rBrnBsfaYYh7AZU4DdhPEfWIw+7d
u7uTPJPQmBBJbHvBimPvQpks3GyTJykF+n1yHgwdOpRwQ2QqJsUFyTYcje2HRLXCAkFGYq4a
jhHEOEJZb2/gKNetWxczkqOyaNGi1BApy1HvPiQS1EcffUT7Rx55xH3WZHpg7e583Q0bNqS9
+9aKDpd7av+aqlWrGj7EazLhufzb66wIiIAIiIAIiIAIiIAIiIAIRE1ApoWo0amjCIiACIiA
CIhAcAmwFx7h0ES79cvBFTp1khHVx6SIQJOOVcDxMYmvN27caBcQPwYO0WXbK62ySTlg2liV
FK655hp8GvAaIW8zKYIfeOABXB/ItEzyg/79+xtHE3t7q4wXAsmfyZ1ACgT8Kn755RdcBJ5/
/nmrQTgFskfQDJuHf+Pff/+dDMa0IaG323BCvbm7rMha/qOZs9HhCmdkexscLO6//35qCGNV
uHDha6+9FhsJy7G3UVkEREAEREAEREAEREAEREAE4kJApoW4YNQgIiACIiACIiACwSKADhqB
MC0ES6ygSgMus8mdhAfrXR900wQ++u233+zib968mUO8DeyVVtnUmzZWJUGNsCKwrf699967
8MILrfrOnTvjvsAhCnGSYVj1ngVyMxCqqFevXpy94447TKZlz5ZRV95yyy04Rlx99dVkgPAc
JIq7KwpcnlNnWQlJQlHhCwLJ119/nYzc+F7gKeKwDGU5jhqIgAiIgAiIgAiIgAiIgAiIgD8B
mRb8+eisCIiACIiACIhAWhIwzgqHDh1KS+mTLjSWAzMnKY4JJOX5+fLLL+1yGQ+AI0eO2Cut
sqk3bazKyZMnUyZckjsdhQnEhPUC1wSrvU/hoYce4iw2D1wffJpFcYq4TCQuJp7SmDFjQnWP
4u6KAleo2bOsxyiCLwiJLvBgINX2gQMH8BSBOQm0s+yrBiIgAiIgAiIgAiIgAiIgAiIQJgGZ
FsIEpWYiIAIiIAIiIALpRKB48eKI++OPP6aT0KmTlUA65P5lflTSYUph8lWESolsQgaR/9k+
GrGMOMTtwF5pymjATW5t09HdwFFDCmXT/qeffnKciuXwgw8+wGUBCadNm+bOo2CNHMXdFQUu
a7roCsSqIqc0iZ0/++wzyphtrrrqquiGUi8REAEREAEREAEREAEREAERcBOQacHNRDUiIAIi
IAIiIAJpT8Dor3ft2rVhwwb3YtjH7a7M5jWE0IEAoYrC5GDMBuQ6drf/888/jTOBw7RgNPKe
xoOjR4/u2bOHoUqWLOke0F2zb98+EwopVLIHd5csa5YtW0b4oPz585N9umDBgj7tzd1Fugh3
m1C3VhS43INHV3PBBRcQQoq+mHYIeOUYhDTd1OCn4qjXoQiIgAiIgAiIgAiIgAiIgAj4E5Bp
wZ+PzoqACIiACIiACKQlgSpVqpgsuy+++KJjAa+99tqqVauozDKdr6NjZh8Sjp8FooNesmRJ
OCvt3r07zaZPn+52dCDWPyrsk08+uWPHjvahjBmAmEurV6+211N+5513/vrrLwphmgoIW8Tl
w7GgVq1ajqGiO8Tg0bJlS9JZz5gxw2ERcQ9IxCEqp06dunv3bvtZ7AomaYT71ooCl33kGMus
6IQTTmAQ0mU7hipWrBg1Jom3/dSUKVO++OILe43KIiACIiACIiACIiACIiACImAn4Hy7sJ9T
WQREQAREQAREQATSl0C/fv0QHh00SlJrFU8//XTPnj2twzgW0EqTMKBIkSLjx4+P47BJG4pc
yk2aNEEnjoZ91qxZjnlJa+yoaf7Ph/atW7e2K6bxY+jbty+NiSxUuHBhey+mOPvss8kX3alT
p6+//to6hZfAgAEDOKTe7bWAIwU5FazGx44de/LJJ8kiQM1zzz1nZYmwGkRR2Lt376WXXsq/
EydOdOeBcA/Ytm1bPDDwtLj88sutfB7kdm7QoMGaNWvc7amJApfnOFlWmhTT9mYQGzx4MNgx
MJDS2X6KsrGjzJ8/n9BJ5hTtH3nkkQ4dOhw+fJgat5nEMYIORUAEREAEREAEREAEREAEsieB
//OA1kcEREAEREAEREAEMo9At27dJkyY8PHHH6OwJitvuXLlSBG8efPm6667Di0qe/Nz5MgR
x1UT0Z4A/Qw4fPjwrl27xnHkuAyFxt+EPGK0YcOGoRN3D0v6YupJ/4t1oU6dOrVr10bLjIcB
6nIC5vzyyy8mfbHVcdSoUbTctGlT9erVGzVqhJKamEJwICASmvRBgwZZLU2B7uPGjbvkkkvW
r1+PtwFKfBT0lJcvX06D0qVLu11MiJLUvn17ciDXqFGDxrgF0Nik0Ojfv3+8rEQDBw7cuHEj
O/oJiOSQmUOyUDiCOOXMmXP06NEI9umnnyJ206ZNcV/g7sqTJ8/DDz981113ed5akeJySxJO
DdeCaE5cDtwRSKbN5eBWx/6BDebtt992j4BlqESJElu3bsUu0qZNGywQs2fPJt7Ugw8+yD2z
YMECz7W4x1GNCIiACIiACIiACIiACIhAdiMg00J2u+JarwiIgAiIgAhkFwK5c+cmuA2xa9D4
L/7nQ+JfEtved999DRs2jDsFdN/suEdF66m1j/t0kQ6IUt5KOxEqsD4pBL788kt0ys888wz6
aD5mFnTu9evX//XXXx2mBWwJS5cu7d279+TJk4mMZBrnzZsX3Tpxgdyxd2iAyhtDBVYBEiaj
lzddcuXKhdcCl4a+psb6FysFliEcF8wVNPWEuho5ciRDWc1iLJDimBHwOzl48KB7KCI7uStb
tGjBfYX5ijzSBIDC2IClBNuMT+bwKHC55/WvwSTALFw4e5QqsingLzJkyBCihLm7A3/SpEnY
VHA9ef311zEkVK5cmfhUGIdMwgx3F9WIgAiIgAiIgAiIgAiIgAiIAARyyMdZ94EIxJ1A+Pv7
9AWMO/wwB9Q1ChOUmolAZhBAcfz555+fddZZJvtC4hZFtgAUzSZ4feJmSc7I2EjwV8BrAXsM
2uozzjjDZ162uq9du/b777+vVKkSjT2NCo7uXBTU38RZKlOmTPny5cma4GhgP6QxXgWE+ilQ
oAD6cdwI7GdTWOZ3HEsJgmF6yZcvX5iSRIHLjFyvXj3uZCJudenSxWcuElzjSoIjBTckHgn4
VZCb2qc9pzDhmMuBN4n/tfYfR2dFQASCT8A8Bus1JPhXShKKgAjESIA9RozQqlWrGMdRdxEQ
AU8C5olCpgVPOKoUgZgISG0dE76kdNY1SgpmTSICIiACIhBPAvgTEMuLTBhkhojnuBpLBEQg
OxGQaSE7XW2tVQSyNQGZFrL15dfiE0/APFEojXPiSWsGERABERABERABERABEYiNAEmV8Qth
DFKFxzaSeouACIiACIiACIiACIiACIhAHAgo10IcIGoIERABERABERABERABEYg7gbFjx27b
tq1ixYpEpiJxNNmYietF1Km4T6QBRUAEREAEREAEREAEREAERCBSAjItREpM7UVABERABERA
BERABEQgGQRIqW08FcxkZCZ/9NFHSbycjLk1hwiIgAiIgAiIgAiIgAiIgAj4EpBpwRePToqA
CIiACIiACIiACIhAigjMnDmTNNF89u7dW6pUqZYtW1aoUCFFsmhaERABERABERABERABERAB
EfgfAkrj/D84dCACcSGgFMFxwZjQQXSNEopXg4uACIiACIiACIiACASTgNI4B/O6SCoREIG4
E1Aa57gj1YAiYCegNM52GiqLgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiEReC4
sFqpkQiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAiIgAj8Q0CmBd0IIiACIiACIiAC
IiACIiACIiACIiACIiACIiACIiACIiACERCQaSECWGoqAiIgAiIgAiIgAiIgAiIgAiIgAiIg
AiIgAiIgAiIgAiIg04LuAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQAREQgQgIyLQQ
ASw1FQEREAEREAERiDuBadOm/fDDD9aw06dP37Ztm3WYqYWtW7fecccdH3zwgVng9u3bOZw5
c2YQ1rt///7x48dbkvz+++/jxo2zDv0LLIRFffLJJ/7Nwj977NgxBuTz559/ht8rupZvvfXW
vffe+/PPP5vuEyZM4HDXrl3RjaZeIiACIiACIiACIiACIiACIpDZBGRayOzrq9WJgAiIgAiI
QHAJ/Pvf/77//vt79er1448/IiWHDz744PXXX79jx47gCh0nyfr16/foo4+2bNly8eLFDDlw
4EAOW7VqFUelfHSSbtiwoU6dOnPnzjXdN27ceP7553/44YdhjjZr1iwW1bt37zDbZ9ns4MGD
DMgHC0eWjWNpsGLFii5dujzwwAP8yzhr1qzp3Lkzh/wby7DqKwIiIAIiIAIiIAIiIAIiIAKZ
SkCmhUy9slqXCIiACIiACASdAHvhUd0uWrQI5TWyvvnmm2wSX7hwYd26dYMueszy5cyZ04xh
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
ZQ4jve5169a1G3vMIJHeKp6SqFIEREAEREAEREAEREAEREAERAACx4uCCIiACIiACIiACKQ1
gZNOOgn50Ur7r4KgRgRHMrp+cvbS+M8///Tpgr8CZ/8TQfKfdu4a4u1wBuMBavFQQxGUyZF0
OlTLjK83uKpWreq50ho1apA9wrTxbOCoDPO623tF0cXeXWUREAEREAEREAEREAEREAEREAGL
gEwLFgoVREAEREAEREAEMpDAzz//TLCdyZMnE/6I+P72FWZpjbA39ix/++231OO4QMJndwPj
90AWaPep7FmzefNmFl6iRAnP5Zt608azgSpFQAREQATSlMCsWbMOHDjQrFmz/Pnzp+kSkiY2
LpUY2nGzq1+/ftwnZXAeXWrVqmUcMSMaH69N4kDmypXrnHPOiaijGouACIiACGQwAZkWMvji
amkiIAIiIAIikN0JfPTRR61bt0b1f+KJJ7Zp04Zo++ivixUrdu+9937++eex0zHGA5I9vP32
27GPlvEj4DRw+PBhLofnSk29cSzwbKBKERABERCBdCSAPnrJkiU48MmuEM7lI9YiDnwVK1YM
p3FEbf76668JEybwQ7xv37727dtH1JfGP/3001tvvcVF7N+/f6R91V4EREAERCBTCci0kKlX
VusSAREQAREQgexO4IcffuDNGYX1tdde+9hjj5nUzQaKyb1sD3YUHawKFSrQkdTE0XXPvF5E
nfJZFEmV2YkZKosy4aroa9Jg+AyiUyIgAiIgAulF4KuvvkLg2rVrp5fYKZH2119/xXsvb968
iTAtENeRLESYFmTjScnF1aQiIAIikJEElMY5Iy+rFiUCIiACIiACIvD/zZs3j/ALuPw//fTT
drsCaByRkaKGZUwL69atCz9DQNRzpUVHwk8hZ6FChTylNWYDXEncZ8l7wfWiXqYFNxzViIAI
iED6Ejh06NCaNWtOOOGEUIl20ndpiZB86dKlRGusWbOmSe8U/hREK8LdIcv2PXv27NWrV+PG
jbNsGVEDNgeQWSqiLmosAiIgAiKQGQRkWsiM66hViIAIiIAIiIAIOAmYRAhnnXVWvnz57OeG
DRtmtNj+W+ztXUKVL7zwQoIsoRYfMGBAqDbZqn7FihWst1y5cp6r7t69O/XTp093+3m8+eab
eJmcfPLJHTt29OyrShEQAREQgXQkwO/CsWPHzjvvPCITpqP8yZSZx4nly5cfd9xxmBbCn5eH
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
iIAIiIAIiIAIiIAIiEB8CcRkWvjzzz/JQffoo496at4LFSpE2uQFCxZUrlw5vkLHdzTEQ0hE
RWD3yCyNBbJMFus+qxoR8CQQyljl2ViVQSZAYLQgiyfZREAEREAEREAEREAEREAEREAEREAE
REAERCAlBKI3LRw8eLBNmzbjx4/3lLt169br1q3r1q2b59kAViIqAiO2p2wsk8WyZM+zqhQB
BwGcXRw1OkxTAu3atUtTySW2CIiACIiACIiACIiACIiACIiACIiACIiACCSOQJSmhb179zZt
2nT27NluyUhd8MQTT7z//vsFChRwnw1yDQIjNsJ7Zl9gsSyZhQd5CZItIATI0lGxYsWACCMx
oibARaxatWrU3dVRBERABERABERABERABERABERABERABERABDKVwPFRLAz1OkFC2OPv7lui
RIl33nnn/PPPd59Kl5pbbrmlfv36V155JUmeHTIvWbKEhX/yyScBzBvhEFWHKScwbNiw9u3b
p1wMCRALAS5iLN3VVwREIEwC06ZNq1mz5llnnWXaT58+Hate8eLFHd2PHTv24YcfUtm8eXPP
TQCO9u5DvA+fffbZsmXLdujQwX02aTWxL8Qu6p49e7788ss8efI0btzYXp+0Ms9Lo0eP5gGp
RYsWTLp9+/ZRo0Y1bNiwZcuWSZMh1ET79+9n10jXrl1Ng99///29994L36f2448/Pnr0aPXq
1YsUKRJqiojqye+1c+dOexdAnXLKKfaalJR37979wQcfbNy4EfFOPfXUChUqsJ+Gb0o4wmzZ
smX+/Pk8JBcuXLjKPx86Hn98NK8Y4UwXfht2BW3bto1dAkDOshfBUT/77LMNGzZwuS+66KLz
zjsvR44cPr3++OMP7qXVq1dDrHz58hdccEGDBg1Ctf/777+/+OKLRYsW/fjjj9yEpUuXhhOu
0jlz5gzVhfogf7N8xNYpERABERABERABERCB7EWAXAIRfQ4cOBDKclC3bl2sDhGNFtjGvKiz
HM9bgeUDIbCSS7DgEPB5yfS8tVQZKAJcvuDcS5JEBDKVABq3++67j1xH6N1YI4cPPPBAwYIF
P//8c/eSf/vtN/NXIuqHDRwTGQGN4XfffeceP/aazZs3b9q0CcuB/1CxL8Q+/ty5c1kUykp7
ZTLLRIw01+XTTz9l3iuuuMIcLly4MJliuOdav349Ol/SZZlTaI3RMmNmcLcMVWMsCmyaCdUg
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
3X333RtssEHGs+VLTKIBS7VbtWpVvptasgIKKKCAAgoooIACCiiggAIKKKCAAgoooIAClRT4
IbTw5ptvfvfdd9G7tmvXrnXr1tGUCh+///77ffr0CW+6YMGC2bNnz5kzZ+HChWFitgPWRxo2
bNjyyy+fLUP50kGDbsaMGeEtgIV3vfXWC1M8UEABBRRQoPoFPvroo0mTJvFHrUuXLksssUT1
V9gaKqCAAgoooIACCiiggAIKKKBAJQV+CC289tprsVvSjxBLqfBbRvq/+OKLBd20efPmvXr1
Ouywww499NBmzZoVdG0JM0MXDS1QMryGFkoobFEKKKCAAhUQeO6553bffXdutOKKKw4ZMmSP
PfaowE29hQIKKKCAAgoooIACCiiggAIKpEXgh70WqjC0UBDf+uuvf8EFF0ydOnXMmDH9+/dv
wrgC1U5GZZK8BbXOzAoooIACClReoHPnzkcdddSqq646d+7cI488ct68eZWvg3dUQAEFFFBA
AQUUUEABBRRQQIGqFaiF0EKbNm1YKIkNGFg3qcmhDS00+SOwAgoooIACjRcgtHD99dfzt3WN
NdZgQcLRo0c3vkxLUEABBRRQQAEFFFBAAQUUUECBmhH4YUGk2AI+pKy99topauHji15UeJll
lmEj5d69ex9//PGLL754kzQhSZfkbZKKedM6F8hnn5I6J7L5CiiQFGjRosXWW2/93nvv+bcs
iWOKAgoooIACCiiggAIKKKCAAvUs8MOshc8//zxGwMLKsZRUvP3iiy9Gjhx56qmnbrzxxk89
9VST1DlJl4i3LSMAAEAASURBVORtkop5UwUUUEABBYoQWGGFFbjqgw8+KOJaL1FAAQUUUEAB
BRRQQAEFFFBAgVoV+CG0QI98rHkM/4+lVPgtwyTbRl6rrLJK69atW7b8YY5FPq9XX321R48e
v/rVr5JNy+fyxuRJ0lW+Do2pv9cqoIACCigQFWjVqhVvv/3222iixwoooIACCiiggAIKKKCA
AgooUOcCP3TWJ4fVL7vssk3r0rFjx4xrL8yfP//9999/++232Rt57KIXC0BnrCrLv1xxxRUv
vPACqyVVcmPnJF2SN2OFTVRAAQUUUKAKBZZbbjlq5TbOVfhorJICCiiggAIKKKCAAgrUpEAl
ezJrEtBGhQL9+vUbMWJE+LbkB5kXREr2j5f8xsUVyA4KbCy58847n3jiiXfcccfs2bOHDx++
ySabZCvtySefvOqqq7KdLUd6ks7QQjmcLVMBBRRQoDICwYJI2QL5lamDd1FAAQUUUEABBRRQ
QAEFFFBAgWoTSFloIcbHukkHHHDApEmTzjzzzNip8O3AgQOnTZsWvi33gaGFcgtbvgIKKKBA
JQW6du3K7Z5//vlK3tR7KaCAAgoooIACCiiggAIKKKBAlQv8EFpI+4sAw6BBg04++eSMDWGr
g5NOOinjKRMVUEABBRRQILdAz549l19+eRYYfOqpp3Ln9KwCCiiggAIKKKCAAgoooIACCtSP
wA+hhdoYaH/BBRd06NAh45MbM2YMWy9kPFXyxOTyR0nekt/UAhVQQAEFFCiTAEsR3nDDDc2b
N99tt92OPfZY9joq040sVgEFFFBAAQUUUEABBRRQQAEFUiRQO6GFVq1a9e/fPyM93f0VWxPJ
0ELGR2CiAgoooEB6BfbZZx+mLLCT2ODBg5m+kN6GWHMFFFBAAQUUUEABBRRQQAEFFCiVQO2E
FhDp3r17NpcpU6ZkO1XadEMLpfW0NAUUUECBJhd4//33jz/++M8++2yppZZq3bp1k9fHCiig
gAIKKKCAAgoooIACCiigQJML1FRooX379tlADS1kkzFdAQUUUECB3AIHHXQQ2zifcsopRBdY
Fil3Zs8qoIACCiiggAIKKKCAAgoooEA9CGQOLXz88cdpbPycOXOyVXv27NnZTpU2PUnnXgul
FbY0BRRQQIFKCvznP/958sknV1555QsvvLBFixaVvLX3UkABBRRQQAEFFFBAAQUUUECBqhVo
Sc3atm0bq98bb7wRS0nF25deeilbPVdZZZVsp0qbnqRL8pb2jpamgAIKKKBA+QTGjRtH4dtv
v33Llj98Z/ClgAIKKKCAAgoUKvDQQw998cUXO+200worrFDotfWWf+rUqc8880y7du1yLPhc
tAmFv/XWW5tvvnkRS1x++eWX06dPX2yxxTp16lR0BXJfWNa25761ZxWoGQH+71599dWLaw4L
4TJPvbhrvapuBX7oJujSpUus/a+99losJRVvX3zxxWz1XG211bKdKm16ki7JW9o7WpoCCiig
gALlE/jwww8pvKAI/bHHHnvffff99re/PeGEE8pXMUtWQAEFFFBAgVQI0B89ceLElVZaybhC
Ps+L2aIMWPzpT3+aT+aC8nz33XfDhw+fN2/ep59+uvfeexd0LZlnzZp166238hBPOumkQq/N
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
Q4H777+fVvfp06cO226TFaiAQPCNovgFkaJVpPP9+eef32abbaKJ4TEd9xdffHHHjh0HDBgw
a9asML0JD6gGlaFKVCxbXIHm0CjjCk34mLy1AgoooIACCiiggAIKKKCAAgoooIACCiigQBUK
lCa0QMM6dOjw+OOP01+fbeGgL7/8kn78Tp06sfrQO++801QW3JoKUA0qQ5UyVoMm0BCaQ6My
ZjBRAQUUUEABBRRQQAEFFFBAAQUUUEABBRRQQIG6FSjNgkhRvvHjxx933HEvvvhiNDF2TN99
z549+/fvv99++7Vu3Tp2thxvP/vsszvuuIOdIQgY5J77udFGG1199dXZZmCUo26WqYACCiig
gAIKKKCAAgoooEAFBIKxgLl/FFegGt5CAQUUKLeACyKVW9jy61wg+EZR+tACrN99990VV1xx
1lln0aGfW3nJJZfcc889999//169erEDZO7MRZz9+OOPx44dO2LEiHvuuWfevHm5SyDIcc45
55x44oktWrTIndOzCqRdYOTIkbfffvtzzz3H4mALFiwI/jkIGlWxY3ZhWXXVVTfddFNCjMQa
005q/RVQQAEFFFBAAQUUqH4BQwvV/4ysoQIKlETA0EJJGC1EgWwCZQwtBLecOXPmaaedNnz4
8HwGRDRv3nzjjTfeYdGre/fujZnKQDzjqaeeenTR64UXXvj++++zEYTpWBx44IGXXHJJ27Zt
w0QPFKhJgddff51N15ldVFWt23777a+//vqf/OQnVVUrK6OAAgoooIACCiigQI0JGFqosQdq
cxRQIJuAoYVsMqYrUBKBsocWglq+9NJL5557LosR5dPFHzasXbt2Xf7vtfbaa6+44orLLLPM
sv/3Itvn//f64osv5s6d+8Ybb7z2f68ZM2aE5TR4QEiDEdO/+93vunbt2mBmMyiQdoEJEybs
tttun3zySRU2pE2bNg899NAWW2xRhXWzSgoooIACCiiggAIK1IaAoYXaeI62QgEFGhQwtNAg
kRkUaIxAhUILQRXp9h80aNCwYcNYeqUxlS7htS1btjzkkEMGDhxICKOExVqUAlUrQNSN1Ydm
z55dtTVcbbXVWKPJyUNV+4CsmAIKKKCAAgoooEDaBQwtpP0JWn8FFMhTwNBCnlBmU6A4geAb
RfPiLi70KrrvhwwZwtyCM888c/XVVy/08tLmpwJU480336RKxhVKa2tp1SzA7JxqjitAx8YP
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
QAEFFFBAAQUUUCAQaOYPfj8KCtSVwOuvv84iJ08//XRVtbpbt25DhgxZZ511qqpWVkYBBebP
nz9lyhTWQerUqRP9wksttZQmChQtQCxhzz33DC9nZszLL7/805/+NEypkoPrr7/+l7/8ZViZ
DTfc8KWXXgrfeqCAAgqkXaBZs2Y0wX6AtD9H66+AAg0K3H///eTp06dPgznNoIACRQgE3yha
FnGllyigQHoF6L5/6qmnRo4cefvttz/33HOzZs1iv9YmaU7Lli3ZLXbTTTft169f7969m6QO
3lQBBXILsPUC/5Pyyp3NswrkI8CyWkSnvvrqqyDz999/z/wY5qvlc20l88SmU6y99tqVvLv3
UkABBRRQQAEFFFBAAQXSImBoIS1PynoqUEoBuvLtzS8lqGUpoIACCjQksOSSSx500EE33HBD
mPGee+7h7VFHHRWmNPkBExRYDSxaDUe6RTU8VkABBRRQQAEFFFBAAQVCAfdaCCk8UEABBRRQ
QAEFFCijwJ/+9CcCDNEbHH/88Q8++GA0pQmP582bR5yD6RRhHZhg17dv3/CtBwoooIACCiig
gAIKKKCAAqGAoYWQwgMFFFBAAQUUUECBMgq0b9/+5JNPjt7gm2++2WOPPS666KLvvvsuml75
YzYq33fffZ999tnorX/xi1+stNJK0RSPFVBAAQUUUEABBRRQQAEFAgFDC34SFFBAAQUUUEAB
BSokcPbZZ3fr1i16M4IKZ5xxxkYbbXTHHXcwbyB6qjLHTFO48847N9tss4ceeih6x6WXXvqP
f/xjNMVjBRRQQAEFFFBAAQUUUECBUMC9FkIKDxRQQAEFFFBAAQXKK9CqVau77757iy22mDZt
WvROU6ZM6devH/s89+jRo2PHjqusskqLFi2iGcpxzJ7S77333qOPPvrBBx8kyx88ePBqq62W
TDdFAQUUUEABBRRQQAEFFFAAAUMLfgwUUEABBVIjQD/gzJkzO3funJoaW1EFFEgIEDYYNWoU
exi8/vrrsZP8Pz5y5MhYYpO8HThw4MEHH9wkt/amCiiggAIKKKCAAgoooEAqBFwQKRWPyUoq
oIACdS3w8ssvX3LJJbvsssuKK6544YUX1rWFjVegJgTWWWediRMn8j91FbamefPm55133vnn
n1+FdbNKCiiggAIKKKCAAgoooED1CDhroXqehTVRQAEFFPh/gTlz5owePZrxy7xmzJjx/yc8
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
AElFTkSuQmCC
</d>
<d name="1" mime-type="image/png" base64="yes">
iVBORw0KGgoAAAANSUhEUgAABh4AAAOyCAIAAAAD0Ti+AAAABGdBTUEAALGPC/xhBQAAQABJ
REFUeAHs3Qd8VFXax3ESUkgljVBCCC0EkS6g0kEQRVB0VdQVG9Zdu6uuKGJviLrYkLU37Chg
RRBEqdJLqKGFUEJIJb28/3DfvY4zk2GSmUn95eWT995zzz33nO/ElTw+57leZWVljfhCAAEE
EECgLghkZGQkJiamp6ePHj26LsyXOSKAAAIIIIAAAgggUP8FfOr/ElkhAggggEC9EJgyZcqT
Tz5ZUlKi1ei7t7d3vVgWi0AAAQQQQAABBBBAoG4LEFqq258fs0cAAQQaiMCyZcsee+wxLfaU
U04555xzvLy8GsjCWSYCCCCAAAIIIIAAArVcgNBSLf+AmB4CCCCAQLnAp59+qu+XX375xx9/
jAgCCCCAAAIIIIAAAgjUHgF2E9Sez4KZIIAAAghUKHDgwAFdGzhwYIU9uIAAAggggAACCCCA
AAI1IUDWUk2o80wEEGjYArt27VqyZMm2bdt69erVv3//1q1bqzr1+vXrAwIC+vXrZ2mzY8eO
lJSU2NjY9u3bW7breMOGDapmnZCQ0KJFC6tLxmlmZubKlStXr15dUFDQt2/fAQMGNG3a1G5P
NSYlJe3fvz8mJqZjx446XbBgweLFizUf3aUpNWnSxLyxsLBQe9N02rt375CQELPdPFizZk12
dnZcXFzbtm3NRtcPjhw5okEiIiJcH4oREEAAAQQQQAABBBBAwI0ChJbciMlQCCCAwMkFpk2b
du+995pv51TNoGeffbZnz55nn312hw4ddu7caTnEiy+++Prrr//rX/+aOnWqZbuO77rrroUL
F7755psTJ060uqTTH3744corr0xLSzMvtWzZctasWUOGDDFbLA9mzJihR9x6663PPffc+PHj
586da15t1qxZcnKyn5+f0eLr63vttdfu3r37pZdeuuOOO8xuxoHiWQqWKZj1448/uje0VFRU
pEeY07B6LqcIIIAAAggggAACCCBQUwJsiKspeZ6LAAINUeCZZ55RnEhxpVGjRv33v/994403
Ro8e/cADDzz44INu5FCcSMMqrqQg0TvvvPPJJ59cdNFFBw8ePOuss7777jvHD5owYYLiSqGh
obpl+PDhSly64oorLAM6ioVdffXVGuSjjz6yHerLL79UXEl5WCNGjLC96kpLbm6ubneQeOXK
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
otwlhzeq59H8rBYB4e1DWrYLbhkTFOXdyKuiW9SujVrTp0+PiYlReSAH3Vy5pLwYbbzasWNH
aWmpNoidddZZepyDAZVQ88MPP6j20+HDh7ULr3Pnzgp/tG3b1nanXnZ2tgbXUKoPpe8Klyxe
vNgcWcWzHT9IOUS6fezYsU2aNDHv8tyBoksaXKtTzpefn5/dBwlHu+E++uijRx999KmnnrLb
xy2NR44c0TgRERFuGY1BEEAAAQQQQKDBChBaarAfPQtHAAEEqi5w/e/Tjhfnm/fvyDowYckz
5ul18efc97+9bGajDhRSuWPlq9pDZ9k4qHm3qX1uDPMLtmyszmPnZ7UubedtK17pFdlx1uAH
K5rhi5u//OHAqju6XHRLwljLPuJ6eO273yavsGy8uO3gyT2utJvwVVBSZJAuP++VjelJd616
Pacoz7x3Uvcrruow0jw1DkrKSp/d+Mnne3/NK7ZOdXl74L/6NzvVqr/l6bRp05S98u9//zs4
2M0fRGZm5jvvvDNz5kyVi7Z8ot4r98ILL1x//fWWjcaxXqZ2zz33KHNH1cStrv7000+qBmXV
uGXLlqFDh5qN2tCnL/P0P//5z+23326eWh0otqJ9Z4ryqEL5J598YnXVE6eK4mnY7t27VxRX
Mh6qctoKLangt6pHqRCSJ2aiMZUbpe+OZ+KhRzMsAggggAACCNQnAUJL9enTZC0IIIBANQn8
LW5QQWn5L6V7cg6tSN3arEnT4S3/LArTI6KD7TyWpybesvw/inp0j2h/TkxfJfUkZu6bvfc3
pdiMWzhl1pAHWwbUQOpEpWYVF9xc6zqYe8x2dWbLobzyq0ZPs1FxpUsWPaYX2Cmb6cr2IzqE
tNydc/itHd9/sedXNX40+AGvilOKVML8n8unq1B6QtPYhNDWa4/tOpx3bEzsGebg5sEDa96a
s2+pgnQj25zWI7x9fGhr5S7tyEremZVyWmQns5vtgdKCvvvuO7VfcMEFtlddbFHsRjWGmjdv
fsstt+hdckogUpbQyy+/rO+qt33mmWeeeqp1zEtlhvSWNKXSXHTRRapM1LVrV+Uubdq0SSGk
gQMH2s4nOjpaL1ZTu5KPVB5blbMta0XpdttbzJbk5GSjYlRSUpLZ6LkD1Vf673//q/FPmh3W
vn17hZ82bNjw1VdfXXnllR6akhG80zv1PDQ+wyKAAAIIIIBAAxEgtNRAPmiWiQACCLhTQFkz
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
o1aNbd68+eqrr77nnntqVarGzPv379+3b5/EVmrM6UCGTZs23XLLLdOmTZM/pfj27dtvuukm
uZQ/HajNRUV27tzZvXv3du3aDR8+vLbxPhd1iWoRQAABBBBAAAEEEEDA6wUILXn9FDNABJwp
cOWVV0po6bPPPlMqveqqq3r06KGTKEaHDh3atm0rS6KcOeD/1eXv768kly9fXlJSYjaf++b5
+++/FxYW/i+Xh/9/woQJO3bsCAsLu/baay+77DIP94bmEUAAAQQQQAABBBBAwDcECC35xjwz
SgScISCrjQ4ePHj06FFZsyP1bd26VRYKHT9+XLl0Rgv6raNbt26yIa5evXoSWQsMDOzUqZNs
iJPLiy66KCQkRA/9zsjIkNVkJpNp48aNCxYsILSkh0mhDwgggAACCCCAAAII+IIAoSVfmGXG
iIBzBNasWSMVyRlJd911lySSkpLkT1m2c+eddzqnAX3Xcumll+bl5V133XVKN5XLMWPG6KTX
ycnJVqu1fv367du310mX6AYCCCCAAAIIIIAAAgj4gkCALwySMSKAgFMErrjiClkUI/GLoKAg
qVA2xymXsoqnmvplZdOKFSvkkKaePXv279+/SZMm1WRWH8nSG9nbJWdRl5WVyeFBQ4YMady4
sfpUm9i2bdvp06fljnRM/ly9enVcXJySQTomLWoza9OyzEcyy/FMsg5LKu/atevll1+uzaBN
S2eGDh0qO84effRRub9r167Bgwc/8sgjkyZN0marNC0CMpxrrrnGpeublPPF1bFX2hNuIoAA
AggggAACCCCAAAJOFyC05HRSKkTAawVatGixfv3677///vbbb5dBNmvWbMOGDd9999348eOr
GvOrr746ZcoUJegjeSQU9corr8jxTFXlz8rK+uSTT95//305kVqbJzIy8rXXXqv05G+p/8cf
f1Qza5cRxcbGKlEn9amSWLVq1bvvvvvVV1/ZHJMk0SJ5+V2jRo1s8stl8+bN33rrLbVyGfub
b76prmCqmF+9IxEf2T1XXFx84403yh469b7TE3IClNSpRP2cXjkVIoAAAggggAACCCCAAAJV
CRBaqkqG+wggUInAhWc/6oMLzn7US5vESy+99Mwzz8hNOe179OjRsv5I4lBPPfWUFLLJqV5K
IGbixIkJCQkPPvigvOxMFhPJkh8J4sifDzzwQL9+/Tp37qxmVhKyeEoCPZL+4IMPJIZ16623
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
AAIIIICADQHSeNvA4RECCCDgAAHtJdG/5HXkZ8KECatWrcrIyHBAp3SBgEcIJCcnL1q0aObM
mVqNTiBWfU06injPPfcsXbp00qRJVW9FTQQQQAABBBBAAIHaEOBAXG2o0icCCCDwE4F33nnn
4YcfNg4gz5o1a/bs2T95zA0CdVVA4SQlI9fqAwMDN2/e3KNHj6pL6PRccHBw1etTEwEEEEAA
AQQQQKCWBDgQV0uwdIsAAghcFZg8ebIOLSnjsg7+6JNeVx9whUDdFhg6dGhUVFTHjh0nTpxY
3WN6xJXq9u8Oq0cAAQQQQAABEwmwa8lEL4OpIIAAAggggAACCCCAAAIIIIAAAu4lQK4l93pf
zBYBBBBAAAEEEEAAAQQQQAABBBAwkQChJRO9DKaCAAIIIIAAAggggAACCCCAAAIIuJcAoSX3
el/MFgEEEEAAAQQQQAABBBBAAAEEEDCRAKElE70MpoIAAggggAACCCCAAAIIIIAAAgi4lwCh
Jfd6X8wWAQQQQAABBBBAAAEEEEAAAQQQMJEAoSUTvQymggACCCCAAAIIIIAAAggggAACCLiX
QP0XXnjBvWbMbBFAAAF3FCgsLDx69GhcXFxRUVFISIg7LsEz5pyZmfnf//63R48exnKysrI+
+uijnj172lhdbm7usmXLPvnkk/fee2/Lli1JSUk5OTlNmjTx9fW10co8jxISEnbs2FFQUNC8
efNqzeqDDz74+OOPr7vuOj8/PzVcunSp6Lp27erv71+tfmxUjo2NPXLkSIMGDQIDA21U4xEC
CCCAAAIIIICAmQW8iouLzTw/5oYAAgh4gID+bT9u3Lj9+/drLbNmzZo9e7YHLModl3Dw4MHR
o0f369dPQSLN/9ChQ3fdddf111//73//u6LlqOZzzz2XnJxsVeH999+fMGGCVaE5b3/3u9+9
9tprjz/++Ouvv171GcbHx0dHR6v+zTffHBMTs2/fvu7du+t22LBh69evr3o/tmsOHDhQ0SXV
GTNmjKgDAgJs1+cpAggggAACCCCAgAkFvE04J6aEAAIIeJjAk08+qbhS48aNb7nlFv3L3MNW
50bLue222wYPHmzElTTt22+/vW/fvjbiStrQ9Ktf/Uo1W7duPXLkSAVZtMtpz/c/unajhddg
qvXr1zdabdy4UTue6tX74QT9pk2btI2rYcOGNeizbJOJEydqIO0F+/TTT/v37//000+XrUMJ
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
m4aLj4935qCMhQACCCCAAAIIIOAQAUJLDmGkEwQQQKB8AWUmNnIGjR49uvwadpfeGGodtGrR
MEi9lo742B5EJ9Ta+IeqTsrlkg1WVj+t/VoYJX7eDXXhU89bcSKjxN+npCSnMM+41Z9x5w8p
i9O1fi3KJu0e2KLkLNjpy+cv5mdb6pv/QtmOFi9erNxJkydPVswoJiZG59q0tapaM+/cubPq
nzhxwkYr7XX685//bKNCpY9sj9K/f3+lJLfqJDy8JGhohvzZxl8QpZ1SxiWrSXKLAAIIIIAA
AgggYHKBqzv2TT5RpocAAgi4l4BSJr/44osfffRRamqqPrOlDS9Om3/D+iVfQCuubLzia4qT
Lp07nXMhPT9LCZJU/UrxFRuNtF9JT0t/Ls0oUZml1fHsVF2rw3EbXrIUWl0cyz7Tu2l7q0KT
32p3z8KFC59++mmlUtLJsmeffVYhJwWbbE9b+bb1kTilRjI2OpV7us3Sg3Izlba1lFd6Ua1R
rHrTd+hUoq/mWZU7/1Z/R5YtW6atYTfddJNymetgoPPnwIgIIIAAAggggAACNRMgtFQzN1oh
gAAClQjoH/z67JcqvfXWW0rqXEltJz6+kJ+1NPGrdSk7FeLJ/+l34uwPMJy6dFZLUbfHsk+X
XZM+LafC83mZZR+5RYkCTKtWrdJH1hRm0hk3pbUuuw9IC/niiy/efPNNhZNOn/4JgmMjOM4Z
xWnvRdnKN27cOGXKFOW3UsYlQktOk2cgBBBAAAEEEEDAfgFCS/Yb0gMCCCBQjoAOT4WEhOgf
ydq7pJNK5X7fvZxmtVwUm3ZgauxrOrPmW99neMte+qJceONmoY2C5iYsjz9/xP7BjUNzSvZU
7sfm7O/f5T1oY5GyQSm0pF1pCh6NGDGi9JS0L0kHu9asWaNCZci+5557lNuoVatW+jVQQKp0
TXuunTOKPTOsWdt58+YZp0dbtmxZsx5ohQACCCCAAAIIIOASAUJLLmFnUAQQ8HyBFi1anDt3
Tv9U1hflx40bp++765v0rl12am76tK1zFVcaGzl4Rrd7gxsEWOaz6MgXur56sM3yoJoX7QLC
1OJo1k9261SzD7NXV7RIh9e+/fbbgwcPWoWWZsyYobhS06ZNlyxZooTflpVs375d1zU772bp
xHLhnFEswznnQkmspk+frtxPAqy9nPfOWQujIIAAAggggAACdU2ANN517Y2zXgQQcKrA/fff
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
liq47tMaAAAAAElFTkSuQmCC
</d>
<d name="2" mime-type="image/png" base64="yes">
iVBORw0KGgoAAAANSUhEUgAAAw8AAAC7CAIAAACsDTV/AAAABGdBTUEAALGPC/xhBQAAH/lJ
REFUeAHt3Ql8VNW9wPHZsk9WicQgBa2QCiqKLALaAiri+xC0YHjV9tWqH6mKVdGqbUVR0QpI
RWVRpFr6+nzWiGvoK4tgyq4gLoBCQA0KaUiAbJN9lvcfBodhlpvM5E5m5s5vPn7wzjn3/u85
33sh/9x77rl6h8Oh44MAAggggIBKAnq9XqVIhEEgWgRM0dIQ2oEAAgggoBWBePs9vKSkpLCw
UCtHj354C8gvAAbvMr4jgAACCCCAAAIIeAiQLXlgsIgAAggggAACCPgIkC35kFCAAAIIIIAA
Agh4CJAteWCwiAACCCCAAAII+AiQLfmQUIAAAggggAACCHgIkC15YLCIAAIIIIAAAgj4CJAt
+ZBQgAACCCCAAAIIeAiQLXlgsIgAAggggAACCPgIkC35kFCAAAIIIIAAAgh4CJAteWCwiAAC
CCCAAAII+AiQLfmQUIAAAggggAACCHgIkC15YLCIAAIIIIAAAgj4CJAt+ZBQgAACCCCAAAII
eAiQLXlgsIgAAggggAACCPgIkC35kFCAAAIIIIAAAgh4CJAteWCwiAACCCCAAAII+AiQLfmQ
UIAAAggggAACCHgIkC15YLCIAAIIIIAAAgj4CJAt+ZBQgAACCCCAAAIIeAiQLXlgsIgAAggg
gAACCPgIkC35kFCAAAIIIIAAAgh4CJAteWCwiAACCCCAAAII+AiQLfmQUIAAAggggAACCHgI
kC15YLCIAAIIIIAAAgj4CJySLZWWlhYVFfXq1ctkMulj9iONly5IR6Q7Pv2lAAEEEEAAAQQQ
CE7gRLbU2Nh45513jh07dvny5RUVFTabLbgw0bS2NF66IB2R7kinpGvR1DraggACCCCAAAIx
JmCS9jocjmuuuWbt2rUx1vaOmiv9WrRo0Z49e9asWSNXyjpanXoEEEAAAQQQQMCPgPPa0uLF
i7WXKrn7Kl2TDrq/soAAAggggAACCAQloG9oaMjLy9P27aq0tLTKykqz2RwUDSsjgAACCIQg
INfy5dJ+CBvG7iYlJSWFhYWx235ariwgp7RBLr1oO1USAumghi+eKR9jahFAAAEEEECgiwKG
/fv3dzFETGweJ92MiWNBIxFAAAEEEIgtAYPcifNt8cyZM+U6aox+pPG+PfLbTd/VKEEAAQQQ
QAABBLwETplvyauOrwgggAACCCCAAAJkS5wDCCCAAAIIIICAkgDZkpIOdQgggAACCCCAANkS
5wACCCCAAAIIIKAkQLakpEMdAggggAACCCBAtsQ5gAACCCCAAAIIKAmQLSnpUIcAAggggAAC
CJAtcQ4ggAACCCCAAAJKAmRLSjrUIYAAAggggAACZEucAwgggAACCCCAgJIA2ZKSDnUIIIAA
AggggADZEucAAggggAACCCCgJEC2pKRDHQIIIIAAAgggQLbEOYAAAggggAACCCgJkC0p6VCH
AAIIIIAAAgiQLXEOIIAAAggggAACSgJkS0o61CGAAAIIIIAAAmRLnAMIIIAAAggggICSANmS
kg51CCCAAAIIIIAA2RLnAAIIIIAAAgggoCRAtqSkQx0CCCCAAAIIIGCCAAEEEEAAAQRiS0Cv
18dWgyPS2uLi4qKiIlV2zbUlVRgJggACCCCAAAKaFSBb0uyhpWMIIIAAAgggoIoA2ZIqjARB
AAEEEEAAAc0KMG5Js4eWjiGAAAIIxKGA0WjMyckJ1PHW1tb6+vpAtZQHEiBbCiRDOQIIIIAA
ArEnUFBQsHv37kDtfuONN6ZMmRKolvJAAtyJCyRDOQIIIIAAAggg4BQgW+I8QAABBBBAAAEE
lATIlpR0qEMAAQQQQAABBMiWOAcQQAABBBBAAAElAUZ5K+lQhwACCCAQzQKOZlv97E9a3j9k
Lasz9c9MvqJXxu8u0qcYo7nNtC0WBciWYvGo0WYEEEAAAZ3tm4aq8f/XXlbrsrAdaW7dXNn0
969OX/kfxrPSAUJARQHuxKmISSgEEEAAge4ScOiO/qrUnSq59yolUq5zuAtYQEAFAf/Xlh47
/lEhPCEQQAABBBAIg0DrBxUt6yv8Bpby1tKKpDH5fmspRCAEAf/ZUgiB2AQBBBBAAIFuE2jb
Xq2wr7Zt1XGbLTU1NZWWlgbCUZi4MtAmlIsA2RKnAQIIIIBA7AnYm6wKjVauVdhQA1Xl5eVj
xozRQEeiqguMW4qqw0FjEEAAAQQ6IeDQ2WtbFdaz17cxdEnBh6pgBciWghVjfQQQQACBSAq0
bTpcOfSthud2KjSiYf7nh4e/3bblsMI6VCHQeQGypc5bsSYCCCAQ1QKTJ0/u1avXjBkzNmzY
YLUq3aiK6m4Ebpztu8ajN6ytvPSdto+dg5YSz8nSG/Req0tJ4tkZUti6rerwqHeP/mKd7WCj
1zp8RSBYAcYtBSvG+ggggECUChw4cOCll17avHnz9OnT9+3bN3bs2KuOf84666wobXGnm+Vo
sjY8/Vn9nE/tzc4s0NgjJXPWEJmasubezfJVn2hwtNldfzrsjrRp55mTjXWPbLMdbWl8dV/z
2+UZv7sw/beDtDRrZVFRUafx4nfF3r17q9V5U3p6XEzhFSfdVOu0IA4CCMSoQM+ePZ88/jly
5Mjq1atXrVr16KOPZmRkuNImyZ9SU1Njrmsy4WTtA1ut31mk5foEY/q0gZkzL3ZY7RX9/i4l
SSPyem6YKJedjL3TDv/4PZmgsm7Wx/n7fpZ6/Tl1j263LN5tb2qvfWSb5c97sp6+JHXK2THX
fb8NLi4u9ltOYZgE9O+88861114bpujRE1a6ec0110RPewK1RK/3vqocaE3KEUAAgRAEHI6w
z9so/44FvZc2u/Vbi72mNWFAtj7t5E0PmSag5p7NrZsqXT1NufoH2fNHmgoy5WvNbRsalnwh
++r54U8Th+a6VpD1Dw97W/ZunjogZ8llUmj9srZm+ubmVd+5Vki+7IzsZ0cmDO7h+ip/OizW
9i9rDNlJpj5mXUKIo1NKSkoKCwvdMVnQmICcZvqGhoa8vLzGRi3f1k1LS6usrDSbzRo7fnQH
AQQQ8BQYMmTIiy++KH9Kofvaklxe6uZrS8FlSw6dZeEuucVmPeT8MWRIMaVM7Ju96FJdu732
Dx81LtvrSrwSfpSd/cyI5KtP3Fhp//xY5eA3HTa7+aYf5bzyE0+EY7f8y/LKHhm9lLfjuoRB
Oa6qlhXf1ty3xTXxt1Sl3VSQ9eQwnclQM21j83vlrrt7pjPNGQ9eaJ42UBf8L61kS56HQHvL
zmxJTsRFixbdeeed2uueu0cLFy6cNm2a+ysLCCCAgCYFLr744lmzZsm4JcmQysrKXOOWxo8f
37dv3+7sb1DZUu2DH9bP/dSrecbcFBmTZLe0SbkhK0nuu8ndN88LP1VjSlpKKwzpifllPzPk
pXhubj/cLHfo7A1tyT/JP73U43pPu71hwa66x3fY65xTD8i2+mSjrbrZc1tZznjgwqw5w70K
O/xKttQhUUyvcCJbkoTpyiuvXLt2bUx3JlDjL7/88jVr1khXA61AOQLRL2C32+Wf4/Xr1+/f
v//gwYOZmZn9+vWTv7Zy8T8pKSn6208Lu0dAnomTJGnixIkySmnkyJEm08lbWt3TANdeOp8t
taw5VDVuRaC26Y0G863nymhuQ49kz3Wal39TXbRaSrLnXJL+wCDPKtdyw7zPa+7fIss9iq9M
LTploJK9uqV2xrbGP38pg8F9N3SVnL56QvKVvQLV+i0nW/LLopnCE9mS9EfuxD344IOLFy92
XfPURg+le3fcccecOXPkTpw2ekQv4lNg6dKlchp/9dVXvt2X2+iPPPLIbbfdxu8DvjiUREqg
89nSsV+VWv6612875X5Zz39NTLw0z7u2xVZx7uvW8oaEH2ae8cUUXaK/kUZt9n8PLG7fX2fq
k56/5z91yUavIK3rKw+PfjfQ9JXmGwtylo322kT5K9mSsk+s18opfeI8k3xCbletW7dOfjXJ
z883Gr3PrRjqqjReuiAdke5Ip0iVYujY0VQvgdbW1l/+8pdTp051p0q5ubnDhw/v37+/weD8
yysD8uRXArmW0N7e7rUtXxGIfgHXtEl+2ynXfvSZib5V9fM+k1RJyrOeGeE/VZK6RIMMBpf/
Ww801M/9zDeIITsxUKokKyu0yjcUJXEicEpWPnr06OXLlx86dEimNZOLTF3/BPWIo6zc9T1K
BGm8dEE6It2Jk6NINzUpIHffJkyY8Le//U16J88ozJw5U3KjqqqqrVu37t279/Dhw88880yP
Hs5He1asWCEZlSYR6JS2BeRJNKUO+twrsx1qqp/tHOSUcuWZKRP7KGybPOEHKeOcQ8Jl/Lif
2Sl9InuG6qBVnquyHDcCp2RL6va6uro6qLHVsrJsom4biIZA7Ao8/fTT77//vrR/wIABMhhF
Zs2RqXTc3ZE8SWYg3Llz57Bhw6Rw2bJlMsmOu5YFBGJCIGmUz42279tt+kF6wvknnmj7vkwn
sy7ZG9v1JkP2s6PchYEW5PKSrOmcbOmBrV7rSGSJ71Xo/prke/vPXcdCvAoEPytGp6WmTJny
xhtvdHp154oyOWlQl6OCCs7KCMSEgNxT++c//7lp06b58+fLsszCvHHjRrm5HKjxNTU1kjDJ
6G8Z0ivTN3fz00+BWkV5PAt0ftySjLmuOOt/JQHy5cp5fpT5N+d5lstL3+RNJnIDIf2u87Of
c95o6/BTe8/m+uOvk8vbdG3iyJO/bMiGlud3Hbt7k28Egzkh/+sbDLmnjCv3Xc2rpPvHLcmv
T15t4KuvgOQh8tumb3mwJXJKhytbkjxJWhlsg2R9yZaY0D0ENzbRhoBMvnzTTTdVVFS4uyN/
la677jr3V78L8tTnuHHjpEquNsntOb/rUIhAtwkE9ZNFcqDqiatsR055kj/j7vOznj01H3Lo
5C258uo342nJZ+y73jnwqBMfe03bv/u9Ju8/SRpyes+Pfuo1kZI7l3JHkheq5JaMT7zkdHdJ
Jxe6P1sS5E62LZ5XUyujEO2w3IkL9h6c57HkfpynBsvxIyC/MT/++ONXX321O1VKSUmR6XMm
TZrUIYJMJXDeec7fwuWf7A5XZgUEokogcUTPvE8mZz0xzPXjP2lwbt7ma71TJXlwe9leSZWk
5ZmzhnYyVZKVZc3MJ4bKQuv2qsa/eD98J3uRfckeZQXZu7RBWhJCqiSb89G8QFiypa5kPF3J
tDR/tOighgVk4JGM45aR3YmJiXKNfdeuXRaLZfv27a5n3zrsuOvaktyPk1fQy2N0co2qw01Y
AYEoETCemZbx0EWuxqT9qr/kT14NczS0y7zeUph4/mnmqed61Sp/lRmbEi84TdaRCBLHa2XZ
l+zRVShtkJZ4rcBXBFwC6mdLcuNAPl3x7XqEruydbRHofoGjR4/ef//9sl+ZdvKjjz6StGng
wIGdzJNcre3T58TzQXJpSh6jk8kJ77rrLpmAoPv7wh4RUF2g7okdtsomCSuveNMZg7wDZdQ7
t9LpbIeb6mbtUL1tBIwTAZVnelXrypBcnZLn/2VqmTg5DHQzzgXmzZsnCZMgPPfcc4MG+Zmb
uEOfSy+9VHIsGRUuF6VkGFNzc/OCBQvk6wsvvNDhtqyAQDQLWL+qb3h2p7QwddLZSWPzQ2hq
0pj81MlnN735dcNzO+XSlOmcjBCCxNAmMmntww8/HKjBO3bsePnllwPVUh5IQOVsqSv34Dyb
6Mq6eD7O04RlDQvIQ3DSO/k37sYbbwytm4OPf1zbypNxMtpJ0qYlS5bccMMNl112WWgx2QqB
aBCovXeLo82mTzJmz7sk5PZkP31J8z++dbRYJVqP964KOU5MbJiTkyOT1gZqqty9IVsKhKNQ
ruadOHXvoKkbTYGAKgQiLvD1119LG1yvju96Y+QVcq+//rqMf5KR43LVqusBiYBApATkRXJN
75XL3jPuG2Q8K+AMSR02T7bNuO8CWa2ppLxl9cEO12cFBLwE1MyW5MKSV/QuflU9YBfbw+YI
hEnAZrNJ5OTk4KZ4UWiMTDEiL0iRFWTib4XVqEIgqgWsjtrpm6WFpvy0jN+fGAYecoMlgsSR
zWskplVxMu+Q98GG2hVQM1uS22fqQqkeUN3mEQ0BtQR69+4toT7++GO1Akoc17jv2tpaFWMS
CoHuFLC8sLtt9zHZY9bs4XpzV8eN6NNMWXOcv0K0f1FjWby7OzvCvjQgoGa2pAEOuoBARARk
wiTZ7zfffON61YkqbZCXokicM844Q5VoBEGgmwXsR1trZ26XnSYN75n6i36q7D315/2SLukp
oWof3S7xVYlJkDgRIFuKkwNNN6Na4NZbb3XNF3DLLbeocklVpqn87DPnq9evuOKKqO45jUMg
gEDdI9vsNa0yaaTzJSdBThoQIKTMQanLfn6UxJTIdQ9vC7gaFQj4CKiZLcmQUtU/Pg2mAAEN
ClxwwQW33367dOzbb7+VWbnlEYe2trbQ+il/B1999VWZoFI2N5vNM2bMCC0OWyEQQYH2nccs
S76UBqT9V7/E4UG/h0Sh5YlDc9NudE5HaXnpS9mLwppUIeAp0NU7wZ6xWEYAgZAF5B26MhP3
qlWrqqqq5B2L8kSbTFCZkRHcxDAywdLu3bvr6upczZAH4njJbshHhA0jKFBzz2aHzS4vuJUR
S6o3I+uPw5qWf223tNfcvfn0dRNUj09ATQqQLWnysNKp2BNISEhYsWKFzCknaZPMwS3Xlj75
5JOQuyETrixcuPD6668POQIbIhApgea3y1vWHZK9Z/xhsOGMVNWbITEzZgyu/d2HLR8can7z
G9XjE1CTAmRLmjysdComBUwm01NPPSXTyr322mvr16+Xd5gE++oSo9HYs2dPmdf717/+tcx1
GZMKNDrOBaz2mvu2iIHp7IyMe50zJIXjk3HPBY1L97R/VVdz/9b02weEYxcRjFleXi4vwwjU
AFVGRgYKruFyvYxy0HD36BoCCCCAQDcLyDDqoH6y2A41Nf51b92MbbKVqZfZesgiDc59+6qU
a/uGr+XN7x6ovnalxDekmeyNVmlz5hND024sMPYK5WqWPFdRWFgYvtb6RpYG+xZS4iUgbwQp
KiryKgzhq2irOco7hBawCQIIIIBAPAu0fVRdedHy2oc+ciVYrlTJ1Nsc1lRJwFOu6SN7kQVJ
leRP2bu0QVrS9mFVPB8O+h5IgGwpkAzlCCCAAALhFZBJj6quWGGrbvbajfU7S8N854Rh4ftI
fNmLV3xpSdWV/7AfafEq5ysCZEvReA5YrdYNGzbIs9/yYPnkyZOjsYm0CQEEEOiyQMOzO+0N
/ifLaPjTZ7rwjRNx6Jzx/X2kPeFO1PztlrJoF2CUdxQdIZnKWR4gl8+6devkxahXXXXV7Nmz
mS8nio4QTUEAAVUFWjf+O1A866HGbw1LAtWGtbx1Y2VY46sSXOYKUSWOtoOceeaZanWQbEkt
yRDjNDU1ffDBBytXrpQkqb6+XjIkGZK2dOnSHj16SER5cRhD+UKUZTMEEIh6AXut/wtLkW24
vTYGXooib86OrFK87Z1sKcJHPC3N+U5s9+e/j3/cX10LJExeIHxFAIGgBIJ6Qi2oyF1cOXFw
j7ZPj/gNIv/uZdw7yPjDdL+1XSy0VbXUPbZdhnb7jZN4ca7fcgrjWYBsKcJHv7GxUe67Hb//
duLaklxeknes5uY6/7rKtaWpU6eq+2r6CHeY3SOAAALfC6T9vJ/llT3ffzvl/5Lh1T/7ufn2
AZmPDTHkJJ1S15UvNoflxS8sz+8MlCpJ7DSVXuLblWaybbQJMMo7wkckNTV1woQJCxYsKCsr
27p164gRI+QdYTJoaciQIQ899FBlZQzcPo+wILtHAIGYFUgam5/5+4t8m288LdmQliAvP2lY
uKvinNcsC3bprP6vA/luq1DS8v6hykHLj9250XasJeGcTFP+KZf2XRtm/mGwtEohCFXxKRDc
HGLxadT9vZZn4rZs2SIXnJYtWzZ8+PA333yz+9vAHhFAAIHQBOQmWhD3/hw6y+Ld9bM/tR50
Ps9vSDGlFPbJXnSpo80uLydp+p99rlAJA7Kz549MHhfioF3r/vra325perfcuYuspMyZF6dP
G2ivazt2x8bmkgOOFueUSzL9UsaDF5qnDZTlYD/dPztlsC1k/a4IyCkdzDndlV2xLQIIIIBA
fAiE8pOl3W49YLHXtCacm603nxwiInNX1ty9qXXrYZdcamHfrD+NMPUL4m3Tjvr2uid3yFQF
jjab3mgw33pu5qwhhh7J7kPhsFjbv6wxZCeZ+ph1CSHebyFbcntqcoFsSZOHlU4hgAACkRQI
JVtSaK9D1/TqPrnOJHMKyFr6RGP6XedlPnyxPiPh5EY2h+27RmPvNJ3R430gdl3jX/bKDN22
w02yZvLYXtnPjkw4P+fkVuotkS2pZxmNkciWovGo0CYEEEAgpgVUzpaOWzgarXK3rn7eZ667
ZsbTU7KeHJZ284+s39TX/GZTa2mFvdkqd/GSRudnLxhl+mFG64bKmns2t+2olq3lBb3Z80ak
/LRv+FTJlsJnGw2RyZai4SjQBgQQQEBTAuHIllxAtgOWmvu3Nr3xletrQr8s20GL5EmefIZU
U9KIvOa1B6XQYE7IeGhwxvQLdEkh3mLzjKywTLakgKOBKjmlT94e1kB/6AICCCCAgIYFjH3M
PYqvaN1wngxmavvkSPu+Wt/O2puskirJj7e0G/tnPTXckJfiu44GSqSDGuhFuLtQXFwsEz6r
spfwptuqNJEgCCCAAAIIuAWSLsvL2z454zfnuUt8F7L+dEnOX0ZrNVXy7S8l4RYgWwq3MPER
QAABBNQWMOj0OSefa/ONbq9r9y2kBIGQBciWQqZjQwQQQACBiAnI+CSFfSvXKmxIFQJ+BZTO
Nr8bUIgAAggggEDEBRKHKL3NLXGoUm3EGx/WBhiNxpycgBMltLa2yhvcw9oATQYnW9LkYaVT
CCCAgMYFksbkJ/84v2V9hW8/k3+SL1MJ+JbHSUlBQcHu3bsDdVZerjVlypRAtZQHEuBOXCAZ
yhFAAAEEolhArztt2eiE/lleTUwoyDpt2RgdT4x5ufC1awJcW+qaH1sjgAACCERIwHhWet6n
19XP/kRel2stqzMVZCZfcaa8602fYoxQi9itZgXIljR7aOkYAgggoHkBSYwyHxsi/2m+p3Qw
sgLciYusP3tHAAEEEEAAgWgXUPnaktVqnTt37ltvvVVWVma3292995x1tMNlGc/fv3//SZMm
TZ8+3WRSuYXuJrGAAAIIIIAAAgh0RkDNXETSo/Hjx69du7YzO1ZeZ+vxz5o1a1atWuWZXSlv
RS0CCCCAAAIIIKC6gJp34l555RVVUiV3JyVbevnll91fWUAAAQQQQAABBLpfQM1safXq1ap3
IBwxVW8kARFAAAEEEEBAwwJq3okrLy9XXSocMVVvJAERQAABBBCIEoGmpqbS0tJAjVGYuDLQ
JpSLgJrZEqAIIIAAAgggEFkBucowZsyYyLZBe3tX806c9nToEQIIIIAAAgggQLbEOYAAAggg
gAACCCgJhOtO3Pz580eNGqW058B1mzZtkpmWAtdTgwACCCCAAAIIdJ9AuLIlmV5y6NChofWj
uro6tA3ZCgEEEEAAgXgQKCoqiodudrGPvXv37mIE9+bhypbcO2ABAQQQQAABBNQVKC4uVjcg
0ZQFGLek7EMtAggggAACCMS7ANlSvJ8B9B8BBBBAAAEElAXIlpR9qEUAAQQQQACBeBcgW4r3
M4D+I4AAAggggICyANmSsg+1CCCAAAIIIBDvAmRL8X4G0H8EEEAAAQQQUBYgW1L2oRYBBBBA
AAEE4l2AbCnezwD6jwACCCCAAALKAmRLyj7UIoAAAggggEC8C5AtxfsZQP8RQAABBBBAQFmA
bEnZh1oEEEAAAQQQiHcBsqV4PwPoPwIIIIAAAggoC5AtKftQiwACCCCAAALxLkC2FO9nAP1H
AAEEEEAAAWUBsiVlH2oRQAABBBBAIN4FyJbi/Qyg/wgggAACCCCgLEC2pOxDLQIIIIAAAgjE
uwDZUryfAfQfAQQQQAABBJQFyJaUfahFAAEEEEAAgXgXIFuK9zOA/iOAAAIIIICAsgDZkrIP
tQgggAACCCAQ7wJkS/F+BtB/BBBAAAEEEFAWIFtS9qEWAQQQQAABBOJdgGwp3s8A+o8AAggg
gAACygJkS8o+1CKAAAIIIIBAvAuYwgRQVlaWm5sbWnDZNrQN2QoBBBBAAAEEEFBdIFzZ0vTp
01VvKwERQAABBBBAAIHuF+BOXPebs0cEEEAAAQQQiCUBsqVYOlq0FQEEEEAAAQS6X4BsqfvN
2SMCCCCAAAIIxJKAmtlS3759Ve96OGKq3kgCIoAAAggggICGBdTMlsaNG6e6VDhiqt5IAiKA
AAIIIICAhgXUzJZuvvnmyy+/XEUsiSYxVQxIKAQQQAABBBBAIFgBNWcQMBgMK1eunDt37ltv
vbV371673R5sa1zrS5yCgoJJkyY98MADshxaELZCAAEEEEAAAQRUEdA7HA5VAhEEAQQQQAAB
EdDr4+4nS0lJSWFhIUdfqwJySnPlRqsHl34hgAACCCCAgDoCZEvqOBIFAQQQQAABBLQqQLak
1SNLvxBAAAEEEEBAHQGyJXUciYIAAggggAACWhUgW9LqkaVfCCCAAAIIIKCOANmSOo5EQQAB
BBBAAAGtCpAtafXI0i8EEEAAAQQQUEeAbEkdR6IggAACCCCAgFYFyJa0emTpFwIIIIAAAgio
I0C2pI4jURBAAAEEEEBAqwJkS1o9svQLAQQQQAABBNQRIFtSx5EoCCCAAAIIIKBVAbIlrR5Z
+oUAAggggAAC6giQLanjSBQEEEAAAQQQ0KoA2ZJWjyz9QgABBBBAAAF1BMiW1HEkCgIIIIAA
AghoVcCk1Y7RLwQQQACBSAno9fpI7Zr9IhAOgf8Hld7EbO7LHPQAAAAASUVORK5CYII=
</d>
<d name="3" mime-type="image/png" base64="yes">
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
</d>
<d name="4" mime-type="image/png" base64="yes">
iVBORw0KGgoAAAANSUhEUgAAAtMAAALHCAIAAADD0VnrAAAABGdBTUEAALGPC/xhBQAAQABJ
REFUeAHsnQm8TVX7x93B1DUPmUIpFElFJFSIVKgUDW/SpEGiOaWIJhqUovGvlF4VkQwlQ2Ya
lAoVIlTmmYvLHf4/7d7Tce45xxn22dP5ns/78e6z9lrPep7v2t39nGet9ayUvLy8AnwgAAEI
QAACZhM4cODAX3/9VaVKlSJFipgt25Xyvv766xNPPLFcuXKu1P5/SsdvRer/RPH/EIAABCDg
LALz589PSUn58ssvnaVWBNqsXLmyffv2xxxzzEknnVS8ePH69evfdNNNe/bsiaBpyCq5ubkh
7yXyxldffaVRmDt3bkAnxujo1rfffhtwS1+zs7MrVKiguwMGDDDuquS88857+umn81d2UYkp
VqS7yGBUhQAEIAAB5xOQh3HhhRceOnRo0KBBzZs3X7du3TfffLN+/Xq5IPEoX7169YULFx53
3HHxCImh7XvvvXfCCSc0a9YsaNtjjz32nXfeOeusswLuTpo0adeuXSVKlPCVp6enDx48uGnT
pr4SN16YYgWehxuHHp0hAAEIOJeAwgO///77u+++e/3110vLs88+u3PnznGqu3jx4j///DNO
ITE0P3jw4EcffXTXXXcpehG0uUz773//K5ciYEbp7bffvvTSSwPiVd27dw8qxF2F8VvBbIu7
RhxtIQABCPxDYN++fXoj1q5du1SpUgrjB0wH6If46aefXqxYscqVK5922mma79Bn1KhRaqxp
C7kFrVu3VvygdOnS8gwmTpzoj1WS77vvPrXSdEnVqlX1ppkxY4aa6/XvX23NmjUqHDt2rH+h
rtWp/j355JMDyvX1qHKmTp16++23a45Gq0Muv/zyZ599VosR33rrrYsvvljNpbO0atmypU/y
9OnTW7RoIQI1a9a89957tbLEd0t2zZo1SxGLxo0bq8L5559vmCkIulYAplatWi+99JKvftAL
hS62b9/epUuXoHdVKM9jx44d48eP96+wcePGzz//XBNMIulfLpVeffVVX0l+zsYtVZs3b54C
Re3atRPMJ5980ig36terV0/KN2jQQCEl/xmooOh8fYUH5d/dDTfcoGFdunSpr60ufv31VxWK
hq4DrFCJOGtoNLtUsmTJRo0aKTRltJXCwR9RDSofCEAAAhBwIAG9D/QXXG/r/Lrpt7gcC/kN
et3+3//9X8OGDdPS0vQL26gpx0INH3nkEfkKutaLXFMVck30jjQq6PWgX+R6C77xxhtqW7Bg
wZ9//tm4pZf3qaeeqmmCxx57bOTIkXrtaWnC/v371VePHj38NXnqqafUcPPmzf6Fus7JydFL
SOs8JCrgVng5s2fPTk1NVaREYYbhw4ffeOONd9xxhyToxdazZ09ZJIV169NPPzXEfvjhh7Ja
Ezpys+Qe6SUtp8TXo77q9ayPwg+vvfbaGWecobBEr169RENfhUUui2TKc/I1yX/RoUMHzY/k
L1eJMTq//fbbueee26ZNG/86cpjk1YmDIiX9+/f33ZJKffv2Nb4G5WzcUrU+ffpUqlRJ2mqA
Fi1apPKsrCx5XeXLl3/++efHjRsnOUWLFpVzZjQJhc64e1RQ/t3NmTNHHudDDz1ktDX+VQXR
27lzp776W6Gvekg0aiIgqvIRNWqKeKk8zCNaQLf5QAACEICAAwmE8TyGDRumt6YcC5/a8i20
2sD4qnehfqH6br3yyiuqrHekr8T/Qj6H7r744otGoS70vvz+++/96+ha7/4yZcro/ecrr1u3
rtwX31f/C6mnt5HiJc8995yWO/jfCiNHvo72feiF7V/fuP7ggw+k5B9//OG7pTe35PsrIA9D
dSZPnmzU0QtS3pIWnRhfV69erbuFChXyCZEEvWKvvfZan8yAiy1btsi1evPNNwPKja/G6KxY
sUL9ylifWN1VvEeval2ox1CeRyjOaiXN1XDKlClGR8a/mtBRLz4HUYVGCMewNwy6SEAFdKcY
T7Vq1RRQ8SmglS5XX3218dXf88jMzJSHJAfIv7JRLcwjymyLgPOBAAQg4DICehMr5qGPT++2
bdt+99138gxUolemYvK+W3IRdL1p0yZfif/FKaecohCFtr8ahR9//LEmIxQh8K+j61tuuUXz
Dr55mZ9++mnZsmVdu3YNqGZ8VQRCv8Lr1KnzwAMP6Nf/gw8+qGiHcSuMHP2m37p1q2ZAtIEi
qFj/Qr349bLXL2xfoQjoWltOfCUXXXSR8RZXid6dxx9/vGYKfGtUCxcurHiGhPjqB1wIsmIq
R12k0qlTJ4UfjDiTJGiuYfny5f6KBYg1vobibNxt1aqVVun6N1R9FWqwfIWai9EeXcUzVBIG
XSSgArrTsGpdsG/+ThYpjBF0rBcsWLBhw4a77747/zqYMI8onodvELmAAAQg4BoC+gW/du1a
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
QmCC
</d>
<d name="5" mime-type="image/png" base64="yes">
iVBORw0KGgoAAAANSUhEUgAABB4AAAEBCAIAAABQfPGNAAAABGdBTUEAALGPC/xhBQAAQABJ
REFUeAHsnQd4FFXXgNN7A0IPvUvvIF2KCAoWig0EQUU+FLGAoP5KE1RULIAdUBRQighSpPcm
vZfQSUIgvdf93zA4DLObZLPZJJvkzMMT7tw5t72T7N5z7znn2hsMBju5hIAQEAJCQAjkLwF7
e/v8bVBaEwJCQAgIgTwn4JTnLUgDQkAICAEhIARMEZC1LVNUJE8ICAEhUFgJsGbkUFj7Lv0W
AkJACAgBISAEhIAQEAJCwJYIiGphS29D+iIEhIAQEAJCQAgIASEgBAotAVEtCu2rk44LASEg
BISAEBACQkAICAFbIiCqhS29DemLEBACQkAICAEhIASEgBAotAREtSi0r046LgSEgBAQAkJA
CAgBISAEbImAqBa29DakL0JACAgBISAEhIAQEAJCoNASENWi0L466bgQEAJCQAgIASEgBISA
ELAlAqJa2NLbkL4IASEgBISAEBACQkAICIFCS0BUi0L76qTjQkAICAEhIASEgBAQAkLAlgjI
ady29DakL0JACAgBISAEhIAQEAJCIIcE0kMSIt/em7gliHJunSv4TW/tUM49h3VYR9zeYDBY
pyapRQgIASEgBISA2QTs7eULyGxYIigEhIAQyJwAekVw4z/SQhNUEccy7uWP9M9/7YIPdjGI
Ut+CJIojgbS0tIkTJ9aoUWPs2LHFcfwyZiEgBISAEBACQqCQE4gct0erVzAabskskGGJQVSB
YJdGbYXAqlWrUC1mzZr12GOP2UqfpB9CQAgIASEgBISAEDCbQOKWYGNZk5nGYlbPEdXC6kil
wsJE4NSpU1WrVn355ZcLU6elr0JACAgBISAEhIAQUAmkpKlJNWEwlak+zbuEGETlHduiXHNM
TMyzzz5bunTpxo0bz549e+HChX369FEH/OGHH44ePVq9JfHQQw8tXbpUmxMZGTl06NBKt69R
o0YlJiZqnwYFBXXo0OH48eOLFi1q0aJFQEDAc889l56ersi8++67w4YN08ofPHgQ+RMnTmgz
zUnTDW9vb3MkRUYICAEhIASEgBAQArZFINUQM/NYWliSca/Sw5Jivzxul5rfPtWya2H8LiQn
ewJ9+/bds2fP//3f/5UsWfL7779ngh4dHa0WO3v27JUrV9RbErt37+7Vq5eak5CQ0KZNm7Cw
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
</d>
</data>
</abiword>
